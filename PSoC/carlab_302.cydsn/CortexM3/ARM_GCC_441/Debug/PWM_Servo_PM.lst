ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"PWM_Servo_PM.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 D5000000 		.text
  20      02007400 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.bss
  24              		.align	2
  25              	PWM_Servo_backup:
  26 0000 00000000 		.space	8
  26      00000000 
  27              		.section	.text.PWM_Servo_SaveConfig,"ax",%progbits
  28              		.align	2
  29              		.global	PWM_Servo_SaveConfig
  30              		.thumb
  31              		.thumb_func
  32              		.type	PWM_Servo_SaveConfig, %function
  33              	PWM_Servo_SaveConfig:
  34              	.LFB0:
  35              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_Servo_PM.c"
   1:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * File Name: PWM_Servo_PM.c
   3:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
   5:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  This file provides the power management source code to API for the
   7:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  PWM.
   8:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
   9:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Note:
  10:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
  11:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** #include "cytypes.h"
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 2


  18:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** #include "PWM_Servo.h"
  19:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
  20:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** static PWM_Servo_backupStruct PWM_Servo_backup;
  21:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
  22:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
  23:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Function Name: PWM_Servo_SaveConfig
  25:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** ********************************************************************************
  26:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
  27:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Summary:
  28:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  Saves the current user configuration of the component.
  29:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  
  30:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
  32:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
  33:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Return: 
  34:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
  35:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
  36:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Global variables:
  37:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  PWM_Servo_backup:  Variables of this global structure are modified to 
  38:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  store the values of non retention configuration registers when Sleep() API is 
  39:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  called.
  40:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
  41:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *******************************************************************************/
  42:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** void PWM_Servo_SaveConfig(void) 
  43:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** {
  36              		.loc 1 43 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_offset 14, -4
  45              		.cfi_offset 7, -8
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  44:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     
  45:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     #if(!PWM_Servo_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #if (CY_PSOC5A)
  47:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             PWM_Servo_backup.PWMUdb = PWM_Servo_ReadCounter();
  48:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             PWM_Servo_backup.PWMPeriod = PWM_Servo_ReadPeriod();
  49:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if (PWM_Servo_UseStatus)
  50:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.InterruptMaskValue = PWM_Servo_STATUS_MASK;
  51:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (PWM_Servo_UseStatus) */
  52:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
  53:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if(PWM_Servo_UseOneCompareMode)
  54:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMCompareValue = PWM_Servo_ReadCompare();
  55:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #else
  56:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMCompareValue1 = PWM_Servo_ReadCompare1();
  57:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMCompareValue2 = PWM_Servo_ReadCompare2();
  58:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (PWM_Servo_UseOneCompareMode) */
  59:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
  60:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****            #if(PWM_Servo_DeadBandUsed)
  61:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMdeadBandValue = PWM_Servo_ReadDeadTime();
  62:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (PWM_Servo_DeadBandUsed) */
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 3


  63:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****           
  64:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if ( PWM_Servo_KillModeMinTime)
  65:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMKillCounterPeriod = PWM_Servo_ReadKillTime();
  66:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* ( PWM_Servo_KillModeMinTime) */
  67:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #endif /* (CY_PSOC5A) */
  68:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         
  69:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  70:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if(!PWM_Servo_PWMModeIsCenterAligned)
  71:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMPeriod = PWM_Servo_ReadPeriod();
  48              		.loc 1 71 0
  49 0004 46F24343 		movw	r3, #:lower16:1073767491
  50 0008 C4F20003 		movt	r3, #:upper16:1073767491
  51 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
  52 000e 9AB2     		uxth	r2, r3
  53 0010 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
  54 0014 C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
  55 0018 9A80     		strh	r2, [r3, #4]	@ movhi
  72:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (!PWM_Servo_PWMModeIsCenterAligned) */
  73:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             PWM_Servo_backup.PWMUdb = PWM_Servo_ReadCounter();
  56              		.loc 1 73 0
  57 001a FFF7FEFF 		bl	PWM_Servo_ReadCounter
  58 001e 0346     		mov	r3, r0
  59 0020 1A46     		mov	r2, r3
  60 0022 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
  61 0026 C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
  62 002a 5A80     		strh	r2, [r3, #2]	@ movhi
  74:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if (PWM_Servo_UseStatus)
  75:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.InterruptMaskValue = PWM_Servo_STATUS_MASK;
  63              		.loc 1 75 0
  64 002c 46F28343 		movw	r3, #:lower16:1073767555
  65 0030 C4F20003 		movt	r3, #:upper16:1073767555
  66 0034 1B78     		ldrb	r3, [r3, #0]
  67 0036 DAB2     		uxtb	r2, r3
  68 0038 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
  69 003c C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
  70 0040 9A71     		strb	r2, [r3, #6]
  76:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (PWM_Servo_UseStatus) */
  77:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
  78:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if(PWM_Servo_DeadBandMode == PWM_Servo__B_PWM__DBM_256_CLOCKS || \
  79:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_DeadBandMode == PWM_Servo__B_PWM__DBM_2_4_CLOCKS)
  80:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_backup.PWMdeadBandValue = PWM_Servo_ReadDeadTime();
  81:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /*  deadband count is either 2-4 clocks or 256 clocks */
  82:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
  83:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if(PWM_Servo_KillModeMinTime)
  84:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                  PWM_Servo_backup.PWMKillCounterPeriod = PWM_Servo_ReadKillTime();
  85:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (PWM_Servo_KillModeMinTime) */
  86:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  87:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         
  88:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #if(PWM_Servo_UseControl)
  89:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             PWM_Servo_backup.PWMControlRegister = PWM_Servo_ReadControlRegister();
  71              		.loc 1 89 0
  72 0042 46F27343 		movw	r3, #:lower16:1073767539
  73 0046 C4F20003 		movt	r3, #:upper16:1073767539
  74 004a 1B78     		ldrb	r3, [r3, #0]
  75 004c DAB2     		uxtb	r2, r3
  76 004e 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
  77 0052 C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 4


  78 0056 DA71     		strb	r2, [r3, #7]
  90:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #endif /* (PWM_Servo_UseControl) */
  91:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     #endif  /* (!PWM_Servo_UsingFixedFunction) */
  92:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** }
  79              		.loc 1 92 0
  80 0058 80BD     		pop	{r7, pc}
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	PWM_Servo_SaveConfig, .-PWM_Servo_SaveConfig
  84 005a 00BF     		.section	.text.PWM_Servo_RestoreConfig,"ax",%progbits
  85              		.align	2
  86              		.global	PWM_Servo_RestoreConfig
  87              		.thumb
  88              		.thumb_func
  89              		.type	PWM_Servo_RestoreConfig, %function
  90              	PWM_Servo_RestoreConfig:
  91              	.LFB1:
  93:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
  94:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
  95:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** /*******************************************************************************
  96:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Function Name: PWM_Servo_RestoreConfig
  97:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** ********************************************************************************
  98:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * 
  99:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Summary:
 100:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  Restores the current user configuration of the component.
 101:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 102:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Parameters:  
 103:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
 104:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 105:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Return: 
 106:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
 107:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 108:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Global variables:
 109:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  PWM_Servo_backup:  Variables of this global structure are used to  
 110:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  restore the values of non retention registers on wakeup from sleep mode.
 111:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 112:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** void PWM_Servo_RestoreConfig(void) 
 114:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** {
  92              		.loc 1 114 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              	.LCFI2:
  98              		.cfi_def_cfa_offset 8
  99 0002 00AF     		add	r7, sp, #0
 100              		.cfi_offset 14, -4
 101              		.cfi_offset 7, -8
 102              	.LCFI3:
 103              		.cfi_def_cfa_register 7
 115:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #if(!PWM_Servo_UsingFixedFunction)
 116:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if (CY_PSOC5A)
 117:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 /* Interrupt State Backup for Critical Region*/
 118:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 uint8 PWM_Servo_interruptState;
 119:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 /* Enter Critical Region*/
 120:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 5


 121:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if (PWM_Servo_UseStatus)
 122:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     /* Use the interrupt output of the status register for IRQ output */
 123:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_STATUS_AUX_CTRL |= PWM_Servo_STATUS_ACTL_INT_EN_MASK;
 124:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     
 125:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_STATUS_MASK = PWM_Servo_backup.InterruptMaskValue;
 126:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* (PWM_Servo_UseStatus) */
 127:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 
 128:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if (PWM_Servo_Resolution == 8)
 129:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     /* Set FIFO 0 to 1 byte register for period*/
 130:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_AUX_CONTROLDP0 |= (PWM_Servo_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #else /* (PWM_Servo_Resolution == 16)*/
 132:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     /* Set FIFO 0 to 1 byte register for period */
 133:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_AUX_CONTROLDP0 |= (PWM_Servo_AUX_CTRL_FIFO0_CLR);
 134:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_AUX_CONTROLDP1 |= (PWM_Servo_AUX_CTRL_FIFO0_CLR);
 135:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* (PWM_Servo_Resolution == 8) */
 136:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 /* Exit Critical Region*/
 137:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 CyExitCriticalSection(PWM_Servo_interruptState);
 138:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 
 139:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_WriteCounter(PWM_Servo_backup.PWMUdb);
 140:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_WritePeriod(PWM_Servo_backup.PWMPeriod);
 141:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 
 142:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if(PWM_Servo_UseOneCompareMode)
 143:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteCompare(PWM_Servo_backup.PWMCompareValue);
 144:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #else
 145:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteCompare1(PWM_Servo_backup.PWMCompareValue1);
 146:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteCompare2(PWM_Servo_backup.PWMCompareValue2);
 147:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* (PWM_Servo_UseOneCompareMode) */
 148:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 
 149:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                #if(PWM_Servo_DeadBandMode == PWM_Servo__B_PWM__DBM_256_CLOCKS || \
 150:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                    PWM_Servo_DeadBandMode == PWM_Servo__B_PWM__DBM_2_4_CLOCKS)
 151:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteDeadTime(PWM_Servo_backup.PWMdeadBandValue);
 152:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 153:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
 154:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if ( PWM_Servo_KillModeMinTime)
 155:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteKillTime(PWM_Servo_backup.PWMKillCounterPeriod);
 156:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* ( PWM_Servo_KillModeMinTime) */
 157:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (CY_PSOC5A) */
 158:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
 159:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
 160:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if(!PWM_Servo_PWMModeIsCenterAligned)
 161:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WritePeriod(PWM_Servo_backup.PWMPeriod);
 104              		.loc 1 161 0
 105 0004 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
 106 0008 C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
 107 000c 9B88     		ldrh	r3, [r3, #4]
 108 000e 1846     		mov	r0, r3
 109 0010 FFF7FEFF 		bl	PWM_Servo_WritePeriod
 162:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* (!PWM_Servo_PWMModeIsCenterAligned) */
 163:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_WriteCounter(PWM_Servo_backup.PWMUdb);
 110              		.loc 1 163 0
 111 0014 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
 112 0018 C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
 113 001c 5B88     		ldrh	r3, [r3, #2]
 114 001e 1846     		mov	r0, r3
 115 0020 FFF7FEFF 		bl	PWM_Servo_WriteCounter
 164:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if (PWM_Servo_UseStatus)
 165:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_STATUS_MASK = PWM_Servo_backup.InterruptMaskValue;
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 6


 116              		.loc 1 165 0
 117 0024 46F28343 		movw	r3, #:lower16:1073767555
 118 0028 C4F20003 		movt	r3, #:upper16:1073767555
 119 002c 40F20002 		movw	r2, #:lower16:PWM_Servo_backup
 120 0030 C0F20002 		movt	r2, #:upper16:PWM_Servo_backup
 121 0034 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 122 0036 1A70     		strb	r2, [r3, #0]
 166:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* (PWM_Servo_UseStatus) */
 167:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 
 168:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if(PWM_Servo_DeadBandMode == PWM_Servo__B_PWM__DBM_256_CLOCKS || \
 169:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_DeadBandMode == PWM_Servo__B_PWM__DBM_2_4_CLOCKS)
 170:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteDeadTime(PWM_Servo_backup.PWMdeadBandValue);
 171:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 172:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 
 173:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #if(PWM_Servo_KillModeMinTime)
 174:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                     PWM_Servo_WriteKillTime(PWM_Servo_backup.PWMKillCounterPeriod);
 175:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 #endif /* (PWM_Servo_KillModeMinTime) */
 176:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 177:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             
 178:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #if(PWM_Servo_UseControl)
 179:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****                 PWM_Servo_WriteControlRegister(PWM_Servo_backup.PWMControlRegister); 
 123              		.loc 1 179 0
 124 0038 46F27343 		movw	r3, #:lower16:1073767539
 125 003c C4F20003 		movt	r3, #:upper16:1073767539
 126 0040 40F20002 		movw	r2, #:lower16:PWM_Servo_backup
 127 0044 C0F20002 		movt	r2, #:upper16:PWM_Servo_backup
 128 0048 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 129 004a 1A70     		strb	r2, [r3, #0]
 180:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             #endif /* (PWM_Servo_UseControl) */
 181:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         #endif  /* (!PWM_Servo_UsingFixedFunction) */
 182:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     }
 130              		.loc 1 182 0
 131 004c 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE1:
 134              		.size	PWM_Servo_RestoreConfig, .-PWM_Servo_RestoreConfig
 135 004e 00BF     		.section	.text.PWM_Servo_Sleep,"ax",%progbits
 136              		.align	2
 137              		.global	PWM_Servo_Sleep
 138              		.thumb
 139              		.thumb_func
 140              		.type	PWM_Servo_Sleep, %function
 141              	PWM_Servo_Sleep:
 142              	.LFB2:
 183:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
 184:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
 185:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** /*******************************************************************************
 186:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Function Name: PWM_Servo_Sleep
 187:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** ********************************************************************************
 188:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * 
 189:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Summary:
 190:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  Disables block's operation and saves the user configuration. Should be called 
 191:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  just prior to entering sleep.
 192:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  
 193:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Parameters:  
 194:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
 195:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 7


 196:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Return: 
 197:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
 198:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 199:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Global variables:
 200:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  PWM_Servo_backup.PWMEnableState:  Is modified depending on the enable 
 201:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  state of the block before entering sleep mode.
 202:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 203:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *******************************************************************************/
 204:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** void PWM_Servo_Sleep(void) 
 205:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** {
 143              		.loc 1 205 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              	.LCFI4:
 149              		.cfi_def_cfa_offset 8
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_offset 14, -4
 152              		.cfi_offset 7, -8
 153              	.LCFI5:
 154              		.cfi_def_cfa_register 7
 206:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     #if(PWM_Servo_UseControl)
 207:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         if(PWM_Servo_CTRL_ENABLE == (PWM_Servo_CONTROL & PWM_Servo_CTRL_ENABLE))
 155              		.loc 1 207 0
 156 0004 46F27343 		movw	r3, #:lower16:1073767539
 157 0008 C4F20003 		movt	r3, #:upper16:1073767539
 158 000c 1B78     		ldrb	r3, [r3, #0]
 159 000e DBB2     		uxtb	r3, r3
 160 0010 5BB2     		sxtb	r3, r3
 161 0012 002B     		cmp	r3, #0
 162 0014 07DA     		bge	.L6
 208:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         {
 209:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             /*Component is enabled */
 210:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             PWM_Servo_backup.PWMEnableState = 1u;
 163              		.loc 1 210 0
 164 0016 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
 165 001a C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
 166 001e 4FF00102 		mov	r2, #1
 167 0022 1A70     		strb	r2, [r3, #0]
 168 0024 06E0     		b	.L7
 169              	.L6:
 211:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         }
 212:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         else
 213:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         {
 214:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             /* Component is disabled */
 215:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****             PWM_Servo_backup.PWMEnableState = 0u;
 170              		.loc 1 215 0
 171 0026 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
 172 002a C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
 173 002e 4FF00002 		mov	r2, #0
 174 0032 1A70     		strb	r2, [r3, #0]
 175              	.L7:
 216:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         }
 217:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     #endif /* (PWM_Servo_UseControl) */
 218:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     /* Stop component */
 219:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     PWM_Servo_Stop();
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 8


 176              		.loc 1 219 0
 177 0034 FFF7FEFF 		bl	PWM_Servo_Stop
 220:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     
 221:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     /* Save registers configuration */
 222:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     PWM_Servo_SaveConfig();
 178              		.loc 1 222 0
 179 0038 FFF7FEFF 		bl	PWM_Servo_SaveConfig
 223:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** }
 180              		.loc 1 223 0
 181 003c 80BD     		pop	{r7, pc}
 182              		.cfi_endproc
 183              	.LFE2:
 184              		.size	PWM_Servo_Sleep, .-PWM_Servo_Sleep
 185 003e 00BF     		.section	.text.PWM_Servo_Wakeup,"ax",%progbits
 186              		.align	2
 187              		.global	PWM_Servo_Wakeup
 188              		.thumb
 189              		.thumb_func
 190              		.type	PWM_Servo_Wakeup, %function
 191              	PWM_Servo_Wakeup:
 192              	.LFB3:
 224:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
 225:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** 
 226:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Function Name: PWM_Servo_Wakeup
 228:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * 
 230:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Summary:
 231:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  Restores and enables the user configuration. Should be called just after 
 232:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  awaking from sleep.
 233:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  
 234:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Parameters:  
 235:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
 236:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 237:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Return: 
 238:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  void
 239:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 240:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** * Global variables:
 241:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  PWM_Servo_backup.pwmEnable:  Is used to restore the enable state of 
 242:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *  block on wakeup from sleep mode.
 243:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *
 244:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** *******************************************************************************/
 245:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** void PWM_Servo_Wakeup(void) 
 246:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** {
 193              		.loc 1 246 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 8
 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_offset 14, -4
 202              		.cfi_offset 7, -8
 203              	.LCFI7:
 204              		.cfi_def_cfa_register 7
 247:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****      /* Restore registers values */
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 9


 248:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     PWM_Servo_RestoreConfig();
 205              		.loc 1 248 0
 206 0004 FFF7FEFF 		bl	PWM_Servo_RestoreConfig
 249:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     
 250:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     if(PWM_Servo_backup.PWMEnableState != 0u)
 207              		.loc 1 250 0
 208 0008 40F20003 		movw	r3, #:lower16:PWM_Servo_backup
 209 000c C0F20003 		movt	r3, #:upper16:PWM_Servo_backup
 210 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 211 0012 002B     		cmp	r3, #0
 212 0014 01D0     		beq	.L11
 251:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     {
 252:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         /* Enable component's operation */
 253:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****         PWM_Servo_Enable();
 213              		.loc 1 253 0
 214 0016 FFF7FEFF 		bl	PWM_Servo_Enable
 215              	.L11:
 254:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     } /* Do nothing if component's block was disabled before */
 255:.\Generated_Source\PSoC5/PWM_Servo_PM.c ****     
 256:.\Generated_Source\PSoC5/PWM_Servo_PM.c **** }
 216              		.loc 1 256 0
 217 001a 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE3:
 220              		.size	PWM_Servo_Wakeup, .-PWM_Servo_Wakeup
 221              		.text
 222              	.Letext0:
 223              		.section	.debug_loc,"",%progbits
 224              	.Ldebug_loc0:
 225              	.LLST0:
 226 0000 00000000 		.4byte	.LFB0
 227 0004 02000000 		.4byte	.LCFI0
 228 0008 0100     		.2byte	0x1
 229 000a 5D       		.byte	0x5d
 230 000b 02000000 		.4byte	.LCFI0
 231 000f 04000000 		.4byte	.LCFI1
 232 0013 0200     		.2byte	0x2
 233 0015 7D       		.byte	0x7d
 234 0016 08       		.sleb128 8
 235 0017 04000000 		.4byte	.LCFI1
 236 001b 5A000000 		.4byte	.LFE0
 237 001f 0200     		.2byte	0x2
 238 0021 77       		.byte	0x77
 239 0022 08       		.sleb128 8
 240 0023 00000000 		.4byte	0x0
 241 0027 00000000 		.4byte	0x0
 242              	.LLST1:
 243 002b 00000000 		.4byte	.LFB1
 244 002f 02000000 		.4byte	.LCFI2
 245 0033 0100     		.2byte	0x1
 246 0035 5D       		.byte	0x5d
 247 0036 02000000 		.4byte	.LCFI2
 248 003a 04000000 		.4byte	.LCFI3
 249 003e 0200     		.2byte	0x2
 250 0040 7D       		.byte	0x7d
 251 0041 08       		.sleb128 8
 252 0042 04000000 		.4byte	.LCFI3
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 10


 253 0046 4E000000 		.4byte	.LFE1
 254 004a 0200     		.2byte	0x2
 255 004c 77       		.byte	0x77
 256 004d 08       		.sleb128 8
 257 004e 00000000 		.4byte	0x0
 258 0052 00000000 		.4byte	0x0
 259              	.LLST2:
 260 0056 00000000 		.4byte	.LFB2
 261 005a 02000000 		.4byte	.LCFI4
 262 005e 0100     		.2byte	0x1
 263 0060 5D       		.byte	0x5d
 264 0061 02000000 		.4byte	.LCFI4
 265 0065 04000000 		.4byte	.LCFI5
 266 0069 0200     		.2byte	0x2
 267 006b 7D       		.byte	0x7d
 268 006c 08       		.sleb128 8
 269 006d 04000000 		.4byte	.LCFI5
 270 0071 3E000000 		.4byte	.LFE2
 271 0075 0200     		.2byte	0x2
 272 0077 77       		.byte	0x77
 273 0078 08       		.sleb128 8
 274 0079 00000000 		.4byte	0x0
 275 007d 00000000 		.4byte	0x0
 276              	.LLST3:
 277 0081 00000000 		.4byte	.LFB3
 278 0085 02000000 		.4byte	.LCFI6
 279 0089 0100     		.2byte	0x1
 280 008b 5D       		.byte	0x5d
 281 008c 02000000 		.4byte	.LCFI6
 282 0090 04000000 		.4byte	.LCFI7
 283 0094 0200     		.2byte	0x2
 284 0096 7D       		.byte	0x7d
 285 0097 08       		.sleb128 8
 286 0098 04000000 		.4byte	.LCFI7
 287 009c 1C000000 		.4byte	.LFE3
 288 00a0 0200     		.2byte	0x2
 289 00a2 77       		.byte	0x77
 290 00a3 08       		.sleb128 8
 291 00a4 00000000 		.4byte	0x0
 292 00a8 00000000 		.4byte	0x0
 293              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 294              		.file 3 ".\\Generated_Source\\PSoC5\\/PWM_Servo.h"
 295              		.section	.debug_info
 296 0000 4F010000 		.4byte	0x14f
 297 0004 0200     		.2byte	0x2
 298 0006 00000000 		.4byte	.Ldebug_abbrev0
 299 000a 04       		.byte	0x4
 300 000b 01       		.uleb128 0x1
 301 000c D5000000 		.4byte	.LASF22
 302 0010 01       		.byte	0x1
 303 0011 AD000000 		.4byte	.LASF23
 304 0015 49000000 		.4byte	.LASF24
 305 0019 00000000 		.4byte	0x0
 306 001d 00000000 		.4byte	0x0
 307 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 308 0025 00000000 		.4byte	.Ldebug_line0
 309 0029 02       		.uleb128 0x2
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 11


 310 002a 01       		.byte	0x1
 311 002b 06       		.byte	0x6
 312 002c 78010000 		.4byte	.LASF0
 313 0030 02       		.uleb128 0x2
 314 0031 01       		.byte	0x1
 315 0032 08       		.byte	0x8
 316 0033 F9000000 		.4byte	.LASF1
 317 0037 02       		.uleb128 0x2
 318 0038 02       		.byte	0x2
 319 0039 05       		.byte	0x5
 320 003a 95010000 		.4byte	.LASF2
 321 003e 02       		.uleb128 0x2
 322 003f 02       		.byte	0x2
 323 0040 07       		.byte	0x7
 324 0041 65010000 		.4byte	.LASF3
 325 0045 02       		.uleb128 0x2
 326 0046 04       		.byte	0x4
 327 0047 05       		.byte	0x5
 328 0048 2E010000 		.4byte	.LASF4
 329 004c 02       		.uleb128 0x2
 330 004d 04       		.byte	0x4
 331 004e 07       		.byte	0x7
 332 004f 4C010000 		.4byte	.LASF5
 333 0053 02       		.uleb128 0x2
 334 0054 08       		.byte	0x8
 335 0055 05       		.byte	0x5
 336 0056 00000000 		.4byte	.LASF6
 337 005a 02       		.uleb128 0x2
 338 005b 08       		.byte	0x8
 339 005c 07       		.byte	0x7
 340 005d 86000000 		.4byte	.LASF7
 341 0061 03       		.uleb128 0x3
 342 0062 04       		.byte	0x4
 343 0063 05       		.byte	0x5
 344 0064 696E7400 		.ascii	"int\000"
 345 0068 02       		.uleb128 0x2
 346 0069 04       		.byte	0x4
 347 006a 07       		.byte	0x7
 348 006b 0E000000 		.4byte	.LASF8
 349 006f 02       		.uleb128 0x2
 350 0070 01       		.byte	0x1
 351 0071 08       		.byte	0x8
 352 0072 16010000 		.4byte	.LASF9
 353 0076 04       		.uleb128 0x4
 354 0077 43000000 		.4byte	.LASF10
 355 007b 02       		.byte	0x2
 356 007c 60       		.byte	0x60
 357 007d 30000000 		.4byte	0x30
 358 0081 04       		.uleb128 0x4
 359 0082 9F010000 		.4byte	.LASF11
 360 0086 02       		.byte	0x2
 361 0087 61       		.byte	0x61
 362 0088 3E000000 		.4byte	0x3e
 363 008c 05       		.uleb128 0x5
 364 008d 04       		.byte	0x4
 365 008e 07       		.byte	0x7
 366 008f 06       		.uleb128 0x6
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 12


 367 0090 1B000000 		.4byte	.LASF17
 368 0094 08       		.byte	0x8
 369 0095 03       		.byte	0x3
 370 0096 67       		.byte	0x67
 371 0097 E2000000 		.4byte	0xe2
 372 009b 07       		.uleb128 0x7
 373 009c 07010000 		.4byte	.LASF12
 374 00a0 03       		.byte	0x3
 375 00a1 69       		.byte	0x69
 376 00a2 76000000 		.4byte	0x76
 377 00a6 02       		.byte	0x2
 378 00a7 23       		.byte	0x23
 379 00a8 00       		.uleb128 0x0
 380 00a9 07       		.uleb128 0x7
 381 00aa 5E010000 		.4byte	.LASF13
 382 00ae 03       		.byte	0x3
 383 00af 87       		.byte	0x87
 384 00b0 81000000 		.4byte	0x81
 385 00b4 02       		.byte	0x2
 386 00b5 23       		.byte	0x23
 387 00b6 02       		.uleb128 0x2
 388 00b7 07       		.uleb128 0x7
 389 00b8 B9010000 		.4byte	.LASF14
 390 00bc 03       		.byte	0x3
 391 00bd 89       		.byte	0x89
 392 00be 81000000 		.4byte	0x81
 393 00c2 02       		.byte	0x2
 394 00c3 23       		.byte	0x23
 395 00c4 04       		.uleb128 0x4
 396 00c5 07       		.uleb128 0x7
 397 00c6 A6010000 		.4byte	.LASF15
 398 00ca 03       		.byte	0x3
 399 00cb 8C       		.byte	0x8c
 400 00cc 76000000 		.4byte	0x76
 401 00d0 02       		.byte	0x2
 402 00d1 23       		.byte	0x23
 403 00d2 06       		.uleb128 0x6
 404 00d3 07       		.uleb128 0x7
 405 00d4 1B010000 		.4byte	.LASF16
 406 00d8 03       		.byte	0x3
 407 00d9 9E       		.byte	0x9e
 408 00da 76000000 		.4byte	0x76
 409 00de 02       		.byte	0x2
 410 00df 23       		.byte	0x23
 411 00e0 07       		.uleb128 0x7
 412 00e1 00       		.byte	0x0
 413 00e2 04       		.uleb128 0x4
 414 00e3 1B000000 		.4byte	.LASF17
 415 00e7 03       		.byte	0x3
 416 00e8 A3       		.byte	0xa3
 417 00e9 8F000000 		.4byte	0x8f
 418 00ed 08       		.uleb128 0x8
 419 00ee 01       		.byte	0x1
 420 00ef 37010000 		.4byte	.LASF18
 421 00f3 01       		.byte	0x1
 422 00f4 2A       		.byte	0x2a
 423 00f5 01       		.byte	0x1
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 13


 424 00f6 00000000 		.4byte	.LFB0
 425 00fa 5A000000 		.4byte	.LFE0
 426 00fe 00000000 		.4byte	.LLST0
 427 0102 08       		.uleb128 0x8
 428 0103 01       		.byte	0x1
 429 0104 E1000000 		.4byte	.LASF19
 430 0108 01       		.byte	0x1
 431 0109 71       		.byte	0x71
 432 010a 01       		.byte	0x1
 433 010b 00000000 		.4byte	.LFB1
 434 010f 4E000000 		.4byte	.LFE1
 435 0113 2B000000 		.4byte	.LLST1
 436 0117 08       		.uleb128 0x8
 437 0118 01       		.byte	0x1
 438 0119 9D000000 		.4byte	.LASF20
 439 011d 01       		.byte	0x1
 440 011e CC       		.byte	0xcc
 441 011f 01       		.byte	0x1
 442 0120 00000000 		.4byte	.LFB2
 443 0124 3E000000 		.4byte	.LFE2
 444 0128 56000000 		.4byte	.LLST2
 445 012c 08       		.uleb128 0x8
 446 012d 01       		.byte	0x1
 447 012e 84010000 		.4byte	.LASF21
 448 0132 01       		.byte	0x1
 449 0133 F5       		.byte	0xf5
 450 0134 01       		.byte	0x1
 451 0135 00000000 		.4byte	.LFB3
 452 0139 1C000000 		.4byte	.LFE3
 453 013d 81000000 		.4byte	.LLST3
 454 0141 09       		.uleb128 0x9
 455 0142 32000000 		.4byte	.LASF25
 456 0146 01       		.byte	0x1
 457 0147 14       		.byte	0x14
 458 0148 E2000000 		.4byte	0xe2
 459 014c 05       		.byte	0x5
 460 014d 03       		.byte	0x3
 461 014e 00000000 		.4byte	PWM_Servo_backup
 462 0152 00       		.byte	0x0
 463              		.section	.debug_abbrev
 464 0000 01       		.uleb128 0x1
 465 0001 11       		.uleb128 0x11
 466 0002 01       		.byte	0x1
 467 0003 25       		.uleb128 0x25
 468 0004 0E       		.uleb128 0xe
 469 0005 13       		.uleb128 0x13
 470 0006 0B       		.uleb128 0xb
 471 0007 03       		.uleb128 0x3
 472 0008 0E       		.uleb128 0xe
 473 0009 1B       		.uleb128 0x1b
 474 000a 0E       		.uleb128 0xe
 475 000b 11       		.uleb128 0x11
 476 000c 01       		.uleb128 0x1
 477 000d 52       		.uleb128 0x52
 478 000e 01       		.uleb128 0x1
 479 000f 55       		.uleb128 0x55
 480 0010 06       		.uleb128 0x6
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 14


 481 0011 10       		.uleb128 0x10
 482 0012 06       		.uleb128 0x6
 483 0013 00       		.byte	0x0
 484 0014 00       		.byte	0x0
 485 0015 02       		.uleb128 0x2
 486 0016 24       		.uleb128 0x24
 487 0017 00       		.byte	0x0
 488 0018 0B       		.uleb128 0xb
 489 0019 0B       		.uleb128 0xb
 490 001a 3E       		.uleb128 0x3e
 491 001b 0B       		.uleb128 0xb
 492 001c 03       		.uleb128 0x3
 493 001d 0E       		.uleb128 0xe
 494 001e 00       		.byte	0x0
 495 001f 00       		.byte	0x0
 496 0020 03       		.uleb128 0x3
 497 0021 24       		.uleb128 0x24
 498 0022 00       		.byte	0x0
 499 0023 0B       		.uleb128 0xb
 500 0024 0B       		.uleb128 0xb
 501 0025 3E       		.uleb128 0x3e
 502 0026 0B       		.uleb128 0xb
 503 0027 03       		.uleb128 0x3
 504 0028 08       		.uleb128 0x8
 505 0029 00       		.byte	0x0
 506 002a 00       		.byte	0x0
 507 002b 04       		.uleb128 0x4
 508 002c 16       		.uleb128 0x16
 509 002d 00       		.byte	0x0
 510 002e 03       		.uleb128 0x3
 511 002f 0E       		.uleb128 0xe
 512 0030 3A       		.uleb128 0x3a
 513 0031 0B       		.uleb128 0xb
 514 0032 3B       		.uleb128 0x3b
 515 0033 0B       		.uleb128 0xb
 516 0034 49       		.uleb128 0x49
 517 0035 13       		.uleb128 0x13
 518 0036 00       		.byte	0x0
 519 0037 00       		.byte	0x0
 520 0038 05       		.uleb128 0x5
 521 0039 24       		.uleb128 0x24
 522 003a 00       		.byte	0x0
 523 003b 0B       		.uleb128 0xb
 524 003c 0B       		.uleb128 0xb
 525 003d 3E       		.uleb128 0x3e
 526 003e 0B       		.uleb128 0xb
 527 003f 00       		.byte	0x0
 528 0040 00       		.byte	0x0
 529 0041 06       		.uleb128 0x6
 530 0042 13       		.uleb128 0x13
 531 0043 01       		.byte	0x1
 532 0044 03       		.uleb128 0x3
 533 0045 0E       		.uleb128 0xe
 534 0046 0B       		.uleb128 0xb
 535 0047 0B       		.uleb128 0xb
 536 0048 3A       		.uleb128 0x3a
 537 0049 0B       		.uleb128 0xb
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 15


 538 004a 3B       		.uleb128 0x3b
 539 004b 0B       		.uleb128 0xb
 540 004c 01       		.uleb128 0x1
 541 004d 13       		.uleb128 0x13
 542 004e 00       		.byte	0x0
 543 004f 00       		.byte	0x0
 544 0050 07       		.uleb128 0x7
 545 0051 0D       		.uleb128 0xd
 546 0052 00       		.byte	0x0
 547 0053 03       		.uleb128 0x3
 548 0054 0E       		.uleb128 0xe
 549 0055 3A       		.uleb128 0x3a
 550 0056 0B       		.uleb128 0xb
 551 0057 3B       		.uleb128 0x3b
 552 0058 0B       		.uleb128 0xb
 553 0059 49       		.uleb128 0x49
 554 005a 13       		.uleb128 0x13
 555 005b 38       		.uleb128 0x38
 556 005c 0A       		.uleb128 0xa
 557 005d 00       		.byte	0x0
 558 005e 00       		.byte	0x0
 559 005f 08       		.uleb128 0x8
 560 0060 2E       		.uleb128 0x2e
 561 0061 00       		.byte	0x0
 562 0062 3F       		.uleb128 0x3f
 563 0063 0C       		.uleb128 0xc
 564 0064 03       		.uleb128 0x3
 565 0065 0E       		.uleb128 0xe
 566 0066 3A       		.uleb128 0x3a
 567 0067 0B       		.uleb128 0xb
 568 0068 3B       		.uleb128 0x3b
 569 0069 0B       		.uleb128 0xb
 570 006a 27       		.uleb128 0x27
 571 006b 0C       		.uleb128 0xc
 572 006c 11       		.uleb128 0x11
 573 006d 01       		.uleb128 0x1
 574 006e 12       		.uleb128 0x12
 575 006f 01       		.uleb128 0x1
 576 0070 40       		.uleb128 0x40
 577 0071 06       		.uleb128 0x6
 578 0072 00       		.byte	0x0
 579 0073 00       		.byte	0x0
 580 0074 09       		.uleb128 0x9
 581 0075 34       		.uleb128 0x34
 582 0076 00       		.byte	0x0
 583 0077 03       		.uleb128 0x3
 584 0078 0E       		.uleb128 0xe
 585 0079 3A       		.uleb128 0x3a
 586 007a 0B       		.uleb128 0xb
 587 007b 3B       		.uleb128 0x3b
 588 007c 0B       		.uleb128 0xb
 589 007d 49       		.uleb128 0x49
 590 007e 13       		.uleb128 0x13
 591 007f 02       		.uleb128 0x2
 592 0080 0A       		.uleb128 0xa
 593 0081 00       		.byte	0x0
 594 0082 00       		.byte	0x0
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 16


 595 0083 00       		.byte	0x0
 596              		.section	.debug_pubnames,"",%progbits
 597 0000 6C000000 		.4byte	0x6c
 598 0004 0200     		.2byte	0x2
 599 0006 00000000 		.4byte	.Ldebug_info0
 600 000a 53010000 		.4byte	0x153
 601 000e ED000000 		.4byte	0xed
 602 0012 50574D5F 		.ascii	"PWM_Servo_SaveConfig\000"
 602      53657276 
 602      6F5F5361 
 602      7665436F 
 602      6E666967 
 603 0027 02010000 		.4byte	0x102
 604 002b 50574D5F 		.ascii	"PWM_Servo_RestoreConfig\000"
 604      53657276 
 604      6F5F5265 
 604      73746F72 
 604      65436F6E 
 605 0043 17010000 		.4byte	0x117
 606 0047 50574D5F 		.ascii	"PWM_Servo_Sleep\000"
 606      53657276 
 606      6F5F536C 
 606      65657000 
 607 0057 2C010000 		.4byte	0x12c
 608 005b 50574D5F 		.ascii	"PWM_Servo_Wakeup\000"
 608      53657276 
 608      6F5F5761 
 608      6B657570 
 608      00
 609 006c 00000000 		.4byte	0x0
 610              		.section	.debug_aranges,"",%progbits
 611 0000 34000000 		.4byte	0x34
 612 0004 0200     		.2byte	0x2
 613 0006 00000000 		.4byte	.Ldebug_info0
 614 000a 04       		.byte	0x4
 615 000b 00       		.byte	0x0
 616 000c 0000     		.2byte	0x0
 617 000e 0000     		.2byte	0x0
 618 0010 00000000 		.4byte	.LFB0
 619 0014 5A000000 		.4byte	.LFE0-.LFB0
 620 0018 00000000 		.4byte	.LFB1
 621 001c 4E000000 		.4byte	.LFE1-.LFB1
 622 0020 00000000 		.4byte	.LFB2
 623 0024 3E000000 		.4byte	.LFE2-.LFB2
 624 0028 00000000 		.4byte	.LFB3
 625 002c 1C000000 		.4byte	.LFE3-.LFB3
 626 0030 00000000 		.4byte	0x0
 627 0034 00000000 		.4byte	0x0
 628              		.section	.debug_ranges,"",%progbits
 629              	.Ldebug_ranges0:
 630 0000 00000000 		.4byte	.Ltext0
 631 0004 00000000 		.4byte	.Letext0
 632 0008 00000000 		.4byte	.LFB0
 633 000c 5A000000 		.4byte	.LFE0
 634 0010 00000000 		.4byte	.LFB1
 635 0014 4E000000 		.4byte	.LFE1
 636 0018 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 17


 637 001c 3E000000 		.4byte	.LFE2
 638 0020 00000000 		.4byte	.LFB3
 639 0024 1C000000 		.4byte	.LFE3
 640 0028 00000000 		.4byte	0x0
 641 002c 00000000 		.4byte	0x0
 642              		.section	.debug_str,"MS",%progbits,1
 643              	.LASF6:
 644 0000 6C6F6E67 		.ascii	"long long int\000"
 644      206C6F6E 
 644      6720696E 
 644      7400
 645              	.LASF8:
 646 000e 756E7369 		.ascii	"unsigned int\000"
 646      676E6564 
 646      20696E74 
 646      00
 647              	.LASF17:
 648 001b 50574D5F 		.ascii	"PWM_Servo_backupStruct\000"
 648      53657276 
 648      6F5F6261 
 648      636B7570 
 648      53747275 
 649              	.LASF25:
 650 0032 50574D5F 		.ascii	"PWM_Servo_backup\000"
 650      53657276 
 650      6F5F6261 
 650      636B7570 
 650      00
 651              	.LASF10:
 652 0043 75696E74 		.ascii	"uint8\000"
 652      3800
 653              	.LASF24:
 654 0049 433A5C55 		.ascii	"C:\\Users\\Public\\Documents\\Carlab\\carlab_302\\c"
 654      73657273 
 654      5C507562 
 654      6C69635C 
 654      446F6375 
 655 0076 61726C61 		.ascii	"arlab_302.cydsn\000"
 655      625F3330 
 655      322E6379 
 655      64736E00 
 656              	.LASF7:
 657 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 657      206C6F6E 
 657      6720756E 
 657      7369676E 
 657      65642069 
 658              	.LASF20:
 659 009d 50574D5F 		.ascii	"PWM_Servo_Sleep\000"
 659      53657276 
 659      6F5F536C 
 659      65657000 
 660              	.LASF23:
 661 00ad 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_Servo_PM.c\000"
 661      6E657261 
 661      7465645F 
 661      536F7572 
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 18


 661      63655C50 
 662              	.LASF22:
 663 00d5 474E5520 		.ascii	"GNU C 4.4.1\000"
 663      4320342E 
 663      342E3100 
 664              	.LASF19:
 665 00e1 50574D5F 		.ascii	"PWM_Servo_RestoreConfig\000"
 665      53657276 
 665      6F5F5265 
 665      73746F72 
 665      65436F6E 
 666              	.LASF1:
 667 00f9 756E7369 		.ascii	"unsigned char\000"
 667      676E6564 
 667      20636861 
 667      7200
 668              	.LASF12:
 669 0107 50574D45 		.ascii	"PWMEnableState\000"
 669      6E61626C 
 669      65537461 
 669      746500
 670              	.LASF9:
 671 0116 63686172 		.ascii	"char\000"
 671      00
 672              	.LASF16:
 673 011b 50574D43 		.ascii	"PWMControlRegister\000"
 673      6F6E7472 
 673      6F6C5265 
 673      67697374 
 673      657200
 674              	.LASF4:
 675 012e 6C6F6E67 		.ascii	"long int\000"
 675      20696E74 
 675      00
 676              	.LASF18:
 677 0137 50574D5F 		.ascii	"PWM_Servo_SaveConfig\000"
 677      53657276 
 677      6F5F5361 
 677      7665436F 
 677      6E666967 
 678              	.LASF5:
 679 014c 6C6F6E67 		.ascii	"long unsigned int\000"
 679      20756E73 
 679      69676E65 
 679      6420696E 
 679      7400
 680              	.LASF13:
 681 015e 50574D55 		.ascii	"PWMUdb\000"
 681      646200
 682              	.LASF3:
 683 0165 73686F72 		.ascii	"short unsigned int\000"
 683      7420756E 
 683      7369676E 
 683      65642069 
 683      6E7400
 684              	.LASF0:
 685 0178 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\dwguo\AppData\Local\Temp\ccK59eIC.s 			page 19


 685      65642063 
 685      68617200 
 686              	.LASF21:
 687 0184 50574D5F 		.ascii	"PWM_Servo_Wakeup\000"
 687      53657276 
 687      6F5F5761 
 687      6B657570 
 687      00
 688              	.LASF2:
 689 0195 73686F72 		.ascii	"short int\000"
 689      7420696E 
 689      7400
 690              	.LASF11:
 691 019f 75696E74 		.ascii	"uint16\000"
 691      313600
 692              	.LASF15:
 693 01a6 496E7465 		.ascii	"InterruptMaskValue\000"
 693      72727570 
 693      744D6173 
 693      6B56616C 
 693      756500
 694              	.LASF14:
 695 01b9 50574D50 		.ascii	"PWMPeriod\000"
 695      6572696F 
 695      6400
 696              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
