C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.lst)
                    - CD DB NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.1 SP1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0
  26          #define CYCLOCKSTART_XTAL_ERROR  1
  27          #define CYCLOCKSTART_32KHZ_ERROR 2
  28          #define CYCLOCKSTART_PLL_ERROR   3
  29          
  30          /*******************************************************************************
  31          * Function Name: CyClockStartupError
  32          ********************************************************************************
  33          * Summary:
  34          *  If an error is encountered during clock configuration (crystal startup error,
  35          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  36          *  the customer, an infinite loop will be encountered.
  37          *
  38          * Parameters:  
  39          *   void
  40          *
  41          * Return:
  42          *   void
  43          *
  44          *******************************************************************************/
  45          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  48          static void CyClockStartupError(uint8 errorCode)
  49          {
  50   1          /* To remove the compiler warning if errorCode not used.                */
  51   1          errorCode = errorCode;
  52   1      
  53   1          /* `#START CyClockStartupError` */
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 2   

  54   1      
  55   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  56   1          /* we will end up here to allow the customer to implement something to  */
  57   1          /* deal with the clock condition.                                       */
  58   1      
  59   1          /* `#END` */
  60   1      
  61   1          /* If nothing else, stop here since the clocks have not started         */
  62   1          /* correctly.                                                           */
  63   1          while(1) {}
  64   1      }
  65          
  66          
  67          #undef CYCODE
  68          #undef CYDATA
  69          #undef CYXDATA
  70          #undef CYFAR
  71          #if defined(__C51__) || defined(__CX51__)
  72                  #define CYCODE code
  73                  #define CYDATA data
  74                  #define CYXDATA xdata
  75                  #define CYFAR far
  76          
  77                  #define CYPACKED
  78                  #define CYALIGNED
  79              
  80                  #define CY_CFG_MEMORY_BARRIER()
  81          
  82                  #ifndef CYCONFIGCPY_DECLARED
                              extern void cymemzero(void CYFAR *addr, uint16 size);
                              extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
                              extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
                      #endif
  87          
  88          
  89                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  90                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  91                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  92          #else
                      #error Unsupported toolchain
              #endif
  95          
  96          /* Defines the layout and meaning of each entry in the cfg_memset_list used for clearing registers */
  97          typedef struct {
  98                  void CYFAR *address;
  99                  uint16 size;
 100          } CYPACKED cfg_memset_t;
 101          
 102          /* Defines the layout and meaning of each entry in the cfg_memcpy_list used for initializing registers */
 103          typedef struct {
 104                  void CYFAR *dest;
 105                  const void CYFAR *src;
 106                  uint16 size;
 107          } CYPACKED cfg_memcpy_t;
 108          
 109          /* Contains the regions of memory that must be set to 0 during configuration */
 110          #define CFG_MEMSET_COUNT (sizeof(cfg_memset_list)/sizeof(*cfg_memset_list))
 111          static const cfg_memset_t CYCODE cfg_memset_list [] = {
 112                  /* address, size */
 113                  {(void CYFAR *)(CYREG_PRT0_DR), 32},
 114                  {(void CYFAR *)(CYREG_PRT3_DR), 16},
 115                  {(void CYFAR *)(CYREG_PRT5_DR), 16},
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 3   

 116                  {(void CYFAR *)(CYREG_PRT12_DR), 16},
 117                  {(void CYFAR *)(CYREG_PRT15_DR), 16},
 118                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096},
 119                  {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048},
 120                  {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560},
 121                  {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512},
 122                  {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32},
 123          };
 124          
 125          #define cfg_byte_table ((const void CYFAR *)0x080000)
 126          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 127          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000800CC)
 128          
 129          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
 130          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x000800D4)
 131          
 132          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
 133          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x000800DC)
 134          
 135          
 136          extern void cfg_write_bytes_code(void CYCODE *table);
 137          extern void cfg_write_bytes(void CYFAR *table);
 138          
 139          /*******************************************************************************
 140          * Function Name: ClockSetup
 141          ********************************************************************************
 142          *
 143          * Summary:
 144          *  Performs the initialization of all of the clocks in the device based on the
 145          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 146          *  clocks and setting the necessary dividers to produce the desired frequency. 
 147          *
 148          * Parameters:
 149          *  void
 150          *
 151          * Return:
 152          *  void
 153          *
 154          *******************************************************************************/
 155          static void ClockSetup(void)
 156          {
 157   1              reg32  timeout;
 158   1              reg32* timeout_p = &timeout;
 159   1              reg8   pllLock;
 160   1      
 161   1      
 162   1              /* Configure Digital Clocks based on settings from Clock DWR */
 163   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x19012B);
 164   1      
 165   1              /* Configure ILO based on settings from Clock DWR */
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 168   1      
 169   1              /* Configure IMO based on settings from Clock DWR */
 170   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 172   1      
 173   1              /* Configure PLL based on settings from Clock DWR */
 174   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 175   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 176   1              /* Wait up to 250us for the PLL to lock */
 177   1              pllLock = 0;
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 4   

 178   1              for (timeout = 250 / 10; *timeout_p && (pllLock != 0x03u); timeout--) { 
 179   2                      pllLock = 0x03u & ((pllLock << 1) | ((CY_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0));
 180   2                      CyDelayCycles(10 * 48); /* Delay 10us based on 48MHz clock */
 181   2              }
 182   1      
 183   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 184   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100);
 185   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 186   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 187   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 188   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 189   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 190   1      
 191   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0x01)));
 192   1      }
 193          
 194          
 195          /* Analog API Functions */
 196          
 197          /*******************************************************************************
 198          * Function Name: AnalogSetDefault
 199          ********************************************************************************
 200          *
 201          * Summary:
 202          *  Sets up the analog portions of the chip to default values based on chip
 203          *  configuration options from the project.
 204          *
 205          * Parameters:
 206          *  void
 207          *
 208          * Return:
 209          *  void
 210          *
 211          *******************************************************************************/
 212          void AnalogSetDefault(void)
 213          {
 214   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 215   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 216   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
 217   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x44);
 218   1      }
 219          
 220          
 221          /*******************************************************************************
 222          * Function Name: SetAnalogRoutingPumps
 223          ********************************************************************************
 224          *
 225          * Summary:
 226          * Enables or disables the analog pumps feeding analog routing switches.
 227          * Intended to be called at startup, based on the Vdda system configuration;
 228          * may be called during operation when the user informs us that the Vdda voltage crossed the pump threshold
             -.
 229          *
 230          * Parameters:
 231          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 232          *
 233          * Return:
 234          *  void
 235          *
 236          *******************************************************************************/
 237          void SetAnalogRoutingPumps(uint8 enabled)
 238          {
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 5   

 239   1              uint8 regValue = CY_GET_REG8(CYREG_PUMP_CR0);
 240   1              if (enabled)
 241   1                      regValue |= 0x00;
 242   1              else
 243   1                      regValue &= ~0x00;
 244   1              CY_SET_REG8(CYREG_PUMP_CR0, regValue);
 245   1      }
 246          
 247          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 248          
 249          
 250          /*******************************************************************************
 251          * Function Name: cyfitter_cfg
 252          ********************************************************************************
 253          * Summary:
 254          *  This function is called by the start-up code for the selected device. It
 255          *  performs all of the necessary device configuration based on the design
 256          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 257          *  as Clocks and Pins as well as any component configuration that is necessary.
 258          *
 259          * Parameters:  
 260          *   void
 261          *
 262          * Return:
 263          *   void
 264          *
 265          *******************************************************************************/
 266          void cyfitter_cfg(void)
 267          {
 268   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 269   1              CY_SET_XTND_REG8(CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8(CYREG_MLOGIC_DEBUG) | 0x05));
 270   1      
 271   1              {
 272   2                      uint8 CYDATA i;
 273   2      
 274   2                      /* Zero out critical memory blocks before beginning configuration */
 275   2                      for (i = 0; i < CFG_MEMSET_COUNT; i++)
 276   2                      {
 277   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 278   3                              CYMEMZERO(ms->address, ms->size);
 279   3                      }
 280   2      
 281   2                      cfg_write_bytes(cfg_byte_table);
 282   2      
 283   2                      /* Enable digital routing */
 284   2                      CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 285   2                      CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 286   2      
 287   2                      /* Enable UDB array */
 288   2                      CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 289   2                      CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 290   2              }
 291   1      
 292   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 293   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (void CYFAR *)(BS_IOPINS0_2_VAL), 8);
 294   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (void CYFAR *)(BS_IOPINS0_4_VAL), 8);
 295   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DR), (void CYFAR *)(BS_IOPINS0_6_VAL), 10);
 296   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01);
 297   1      
 298   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 299   1              CY_SET_REG8(CYDEV_BOOST_CR2, (CY_GET_REG8(CYDEV_BOOST_CR2) | 0x08));
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 6   

 300   1              if (CYDEV_CHIP_REV_ACTUAL < 5)
 301   1              {
 302   2                      CY_SET_REG8(CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3A);
 303   2              }
 304   1      
 305   1      
 306   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 307   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 308   1              /* Setup clocks based on selections from Clock DWR */
 309   1              ClockSetup();
 310   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 311   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 312   1      
 313   1              /* Perform basic analog initialization to defaults */
 314   1              AnalogSetDefault();
 315   1      
 316   1              /* Configure alternate active mode */
 317   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
 318   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 319   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 48
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 63
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 158
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F2B              MOV     R7,#02BH
0014 7E01              MOV     R6,#01H
0016 7D19              MOV     R5,#019H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 166
001D 904300            MOV     DPTR,#04300H
0020 7402              MOV     A,#02H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 167
0023 904000            MOV     DPTR,#04000H
0026 7408              MOV     A,#08H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0029 904200            MOV     DPTR,#04200H
002C 7403              MOV     A,#03H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
002F 7B0C              MOV     R3,#0CH
0031 7A01              MOV     R2,#01H
0033 7908              MOV     R1,#08H
0035 120000      E     LCALL   _cyread8
0038 9046A1            MOV     DPTR,#046A1H
003B EF                MOV     A,R7
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 8   

003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
003D 7B00              MOV     R3,#00H
003F 7A42              MOV     R2,#042H
0041 7922              MOV     R1,#022H
0043 7D08              MOV     R5,#08H
0045 7C00              MOV     R4,#00H
0047 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 175
004A 7B00              MOV     R3,#00H
004C 7A42              MOV     R2,#042H
004E 7920              MOV     R1,#020H
0050 7D51              MOV     R5,#051H
0052 7C10              MOV     R4,#010H
0054 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 177
0057 900000      R     MOV     DPTR,#pllLock
005A E4                CLR     A
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
005C 7F19              MOV     R7,#019H
005E 7E00              MOV     R6,#00H
0060 7D00              MOV     R5,#00H
0062 7C00              MOV     R4,#00H
0064 900000      R     MOV     DPTR,#timeout
0067 120000      E     LCALL   ?C?LSTXDATA
006A         ?C0004:
006A 900000      R     MOV     DPTR,#timeout_p
006D E0                MOVX    A,@DPTR
006E FE                MOV     R6,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 8F82              MOV     DPL,R7
0074 8E83              MOV     DPH,R6
0076 120000      E     LCALL   ?C?LLDXDATA
0079 EC                MOV     A,R4
007A 4D                ORL     A,R5
007B 4E                ORL     A,R6
007C 4F                ORL     A,R7
007D 604E              JZ      ?C0005
007F 900000      R     MOV     DPTR,#pllLock
0082 E0                MOVX    A,@DPTR
0083 FF                MOV     R7,A
0084 EF                MOV     A,R7
0085 6403              XRL     A,#03H
0087 6044              JZ      ?C0005
                                           ; SOURCE LINE # 179
0089 904225            MOV     DPTR,#04225H
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E EF                MOV     A,R7
008F 5401              ANL     A,#01H
0091 FF                MOV     R7,A
0092 7E00              MOV     R6,#00H
0094 900000      R     MOV     DPTR,#pllLock
0097 E0                MOVX    A,@DPTR
0098 FE                MOV     R6,A
0099 EE                MOV     A,R6
009A 25E0              ADD     A,ACC
009C FE                MOV     R6,A
009D EE                MOV     A,R6
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 9   

009E 4F                ORL     A,R7
009F FF                MOV     R7,A
00A0 EF                MOV     A,R7
00A1 5403              ANL     A,#03H
00A3 FF                MOV     R7,A
00A4 900000      R     MOV     DPTR,#pllLock
00A7 EF                MOV     A,R7
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
00A9 7FE0              MOV     R7,#0E0H
00AB 7E01              MOV     R6,#01H
00AD 7D00              MOV     R5,#00H
00AF 7C00              MOV     R4,#00H
00B1 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 181
00B4 900000      R     MOV     DPTR,#timeout
00B7 120000      E     LCALL   ?C?LLDXDATA
00BA 7BFF              MOV     R3,#0FFH
00BC 7AFF              MOV     R2,#0FFH
00BE 79FF              MOV     R1,#0FFH
00C0 78FF              MOV     R0,#0FFH
00C2 120000      E     LCALL   ?C?LADD
00C5 900000      R     MOV     DPTR,#timeout
00C8 120000      E     LCALL   ?C?LSTXDATA
00CB 809D              SJMP    ?C0004
00CD         ?C0005:
                                           ; SOURCE LINE # 184
00CD 7B00              MOV     R3,#00H
00CF 7A40              MOV     R2,#040H
00D1 7904              MOV     R1,#04H
00D3 7D00              MOV     R5,#00H
00D5 7C01              MOV     R4,#01H
00D7 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 185
00DA 904004            MOV     DPTR,#04004H
00DD 7407              MOV     A,#07H
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
00E0 904006            MOV     DPTR,#04006H
00E3 E4                CLR     A
00E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
00E5 904008            MOV     DPTR,#04008H
00E8 7448              MOV     A,#048H
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
00EB 904004            MOV     DPTR,#04004H
00EE E4                CLR     A
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
00F0 904001            MOV     DPTR,#04001H
00F3 7402              MOV     A,#02H
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
00F6 9043A2            MOV     DPTR,#043A2H
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EF                MOV     A,R7
00FC 4401              ORL     A,#01H
00FE FF                MOV     R7,A
00FF EF                MOV     A,R7
0100 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 10  

                                           ; SOURCE LINE # 192
0101 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 237
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
000F 900000      R     MOV     DPTR,#enabled
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 11  

0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0009
                                           ; SOURCE LINE # 241
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
0025 800E              SJMP    ?C0010
0027         ?C0009:
                                           ; SOURCE LINE # 243
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
0035         ?C0010:
                                           ; SOURCE LINE # 244
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 269
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 275
0016 750000      R     MOV     i,#00H
0019         ?C0012:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 940A              SUBB    A,#0AH
001E 503A              JNC     ?C0013
                                           ; SOURCE LINE # 276
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 12  

                                           ; SOURCE LINE # 277
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 278
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 279
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0012
005A         ?C0013:
                                           ; SOURCE LINE # 281
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 284
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 285
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 13  

008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 288
008F 9043A0            MOV     DPTR,#043A0H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 4440              ORL     A,#040H
0097 FF                MOV     R7,A
0098 9043A0            MOV     DPTR,#043A0H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 289
009D 9043C2            MOV     DPTR,#043C2H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 EF                MOV     A,R7
00A3 4410              ORL     A,#010H
00A5 FF                MOV     R7,A
00A6 9043C2            MOV     DPTR,#043C2H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 293
00AB 7B08              MOV     R3,#08H
00AD 7A00              MOV     R2,#00H
00AF 79CC              MOV     R1,#0CCH
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 7922              MOV     R1,#022H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F08              MOV     R7,#08H
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 294
00D0 7B08              MOV     R3,#08H
00D2 7A00              MOV     R2,#00H
00D4 79D4              MOV     R1,#0D4H
00D6 C003              PUSH    AR3
00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 7942              MOV     R1,#042H
00E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 D001              POP     AR1
00EA D002              POP     AR2
00EC D003              POP     AR3
00EE 7F08              MOV     R7,#08H
00F0 7E00              MOV     R6,#00H
00F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 295
00F5 7B08              MOV     R3,#08H
00F7 7A00              MOV     R2,#00H
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 14  

00F9 79DC              MOV     R1,#0DCH
00FB C003              PUSH    AR3
00FD C002              PUSH    AR2
00FF C001              PUSH    AR1
0101 7B00              MOV     R3,#00H
0103 7A51              MOV     R2,#051H
0105 7960              MOV     R1,#060H
0107 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010A 120000      E     LCALL   ?C?PSTXDATA
010D D001              POP     AR1
010F D002              POP     AR2
0111 D003              POP     AR3
0113 7F0A              MOV     R7,#0AH
0115 7E00              MOV     R6,#00H
0117 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 296
011A 9044F4            MOV     DPTR,#044F4H
011D 7401              MOV     A,#01H
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
0120 904322            MOV     DPTR,#04322H
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 EF                MOV     A,R7
0126 4408              ORL     A,#08H
0128 FF                MOV     R7,A
0129 EF                MOV     A,R7
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 300
012B 9046EC            MOV     DPTR,#046ECH
012E E0                MOVX    A,@DPTR
012F FF                MOV     R7,A
0130 EF                MOV     A,R7
0131 C3                CLR     C
0132 9405              SUBB    A,#05H
0134 5006              JNC     ?C0015
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
0136 904689            MOV     DPTR,#04689H
0139 743A              MOV     A,#03AH
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
013C         ?C0015:
                                           ; SOURCE LINE # 307
013C 904800            MOV     DPTR,#04800H
013F 74F1              MOV     A,#0F1H
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0142 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 311
0145 904800            MOV     DPTR,#04800H
0148 74B1              MOV     A,#0B1H
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
014B 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 317
014E 7B00              MOV     R3,#00H
0150 7A43              MOV     R2,#043H
0152 79A0              MOV     R1,#0A0H
0154 C003              PUSH    AR3
0156 C002              PUSH    AR2
0158 C001              PUSH    AR1
C51 COMPILER V9.03   CYFITTER_CFG                                                          02/24/2017 20:36:47 PAGE 15  

015A 7B00              MOV     R3,#00H
015C 7A43              MOV     R2,#043H
015E 79B0              MOV     R1,#0B0H
0160 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0163 120000      E     LCALL   ?C?PSTXDATA
0166 D001              POP     AR1
0168 D002              POP     AR2
016A D003              POP     AR3
016C 7F0E              MOV     R7,#0EH
016E 7E00              MOV     R6,#00H
0170 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 318
0173 9043B0            MOV     DPTR,#043B0H
0176 E0                MOVX    A,@DPTR
0177 FF                MOV     R7,A
0178 EF                MOV     A,R7
0179 54FD              ANL     A,#0FDH
017B FF                MOV     R7,A
017C 9043B0            MOV     DPTR,#043B0H
017F EF                MOV     A,R7
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
0181 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    780    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
