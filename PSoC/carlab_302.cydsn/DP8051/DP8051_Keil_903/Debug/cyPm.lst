C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYPM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\cyPm.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyPm.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\cyPm.lst) CD DB NOIP OT(2
                    -,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\cyPm.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyPm.c
   3          * Version 3.20
   4          *
   5          * Description:
   6          *  Provides an API for the power management.
   7          *
   8          * Note:
   9          *  Documentation of the API's in this file is located in the
  10          *  System Reference Guide provided with PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions,
  15          * disclaimers, and limitations in the end user license agreement accompanying
  16          * the software package with which this file was provided.
  17          *******************************************************************************/
  18          
  19          #include "cyPm.h"
  20          
  21          static CY_PM_BACKUP_STRUCT          cyPmBackup;
  22          static CY_PM_CLOCK_BACKUP_STRUCT    cyPmClockBackup;
  23          
  24          /* Convertion table between register's values and frequency in MHz  */
  25          static const uint8 CYCODE cyPmImoFreqReg2Mhz[7u] = {12u, 6u, 24u, 3u, 48u, 62u, 74u};
  26          
  27          /* Function Prototypes */
  28          static void CyPmHibSaveSet(void);
  29          static void CyPmHibRestore(void) ;
  30          
  31          static void CyPmSlpSaveSet(void) ;
  32          static void CyPmSlpRestore(void) ;
  33          
  34          static void CyPmHibSlpSaveSet(void) ;
  35          static void CyPmHibSlpRestore(void) ;
  36          
  37          static void CyPmHviLviSaveDisable(void) ;
  38          static void CyPmHviLviRestore(void) ;
  39          
  40          #if(CY_PSOC5A)
              
                  /***************************************************************************
                  * The PICU interupt event is not allowed to act as wakeup source for PSoC 5.
                  * To prevent accidental wakeup all the PICU interrupts are disabled before
                  * Sleep and Hibernate low power modes entry. In case of Sleep mode registers
                  * values must be restored on wakeup, but in case of Hibernate low power mode
                  * there is no sense in saving/restoring registers values as the only wakeup
                  * source for this mode is external reset (XRES). For more information refer
                  * to the PSoC 5 device TRM.
                  ***************************************************************************/
              
                  static void CyPmSavePicuInterrupts(void);
                  static void CyPmDisablePicuInterrupts(void) ;
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 2   

                  static void CyPmRestorePicuInterrupts(void) ;
              
              #endif  /* (CY_PSOC5A) */
  57          
  58          
  59          /*******************************************************************************
  60          * Function Name: CyPmSaveClocks
  61          ********************************************************************************
  62          *
  63          * Summary:
  64          *  This function is called in preparation for entering sleep or hibernate low
  65          *  power modes. Saves all state of the clocking system that does not persist
  66          *  during sleep/hibernate or that needs to be altered in preparation for
  67          *  sleep/hibernate. Shutdowns all the digital and analog clock dividers for the
  68          *  active power mode configuration.
  69          *
  70          *  Switches the master clock over to the IMO and shuts down the PLL and MHz
  71          *  Crystal. The IMO frequency is set to either 12 MHz or 48 MHz to match the
  72          *  Design-Wide Resources System Editor "Enable Fast IMO During Startup" setting.
  73          *  The ILO and 32 KHz oscillators are not impacted. The current Flash wait state
  74          *  setting is saved and the Flash wait state setting is set for the current IMO
  75          *  speed.
  76          *
  77          *  Note If the Master Clock source is routed through the DSI inputs, then it
  78          *  must be set manually to another source before using the
  79          *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
  80          *
  81          * Parameters:
  82          *  None
  83          *
  84          * Return:
  85          *  None
  86          *
  87          * Side Effects:
  88          *  All peripheral clocks are going to be off after this API method call.
  89          *
  90          *******************************************************************************/
  91          void CyPmSaveClocks(void) 
  92          {
  93   1          /* Digital and analog clocks - save enable state and disable them all */
  94   1          cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
  95   1          cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
  96   1          CY_PM_ACT_CFG1_REG &= ~CY_PM_ACT_EN_CLK_A_MASK;
  97   1          CY_PM_ACT_CFG2_REG &= ~CY_PM_ACT_EN_CLK_D_MASK;
  98   1      
  99   1          /* Save current flash wait cycles and set the maximum value */
 100   1          cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
 101   1          CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 102   1      
 103   1          /* IMO - save current IMO MHz OSC frequency and USB mode is on bit */
 104   1          cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 105   1          cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
 106   1      
 107   1          /* IMO doubler - save enable state */
 108   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 109   1          {
 110   2              /* IMO doubler enabled - save and disable */
 111   2              cyPmClockBackup.imo2x = CY_PM_ENABLED;
 112   2          }
 113   1          else
 114   1          {
 115   2              /* IMO doubler disabled */
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 3   

 116   2              cyPmClockBackup.imo2x = CY_PM_DISABLED;
 117   2          }
 118   1      
 119   1          /* IMO - set appropriate frequency for LPM */
 120   1          CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 121   1      
 122   1          /* IMO - save enable state and enable without wait to settle */
 123   1          if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 124   1          {
 125   2              /* IMO - save enabled state */
 126   2              cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 127   2          }
 128   1          else
 129   1          {
 130   2              /* IMO - save disabled state */
 131   2              cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 132   2      
 133   2              /* IMO - enable */
 134   2              CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 135   2          }
 136   1      
 137   1          /* IMO - save the current IMOCLK source and set to IMO if not yet */
 138   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 139   1          {
 140   2              /* DSI or XTAL CLK */
 141   2              cyPmClockBackup.imoClkSrc =
 142   2                  (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_SOURCE_X
             -TAL;
 143   2      
 144   2              /* IMO -  set IMOCLK source to MHz OSC */
 145   2              CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 146   2          }
 147   1          else
 148   1          {
 149   2              /* IMO */
 150   2              cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 151   2          }
 152   1      
 153   1          /* Save clk_imo source */
 154   1          cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 155   1      
 156   1          /* If IMOCLK2X or SPC OSC is source for clk_imo, set it to IMOCLK */
 157   1          if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 158   1          {
 159   2              /* Set IMOCLK to source for clk_imo */
 160   2              CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ~CY_PM_CLKDIST_IMO_OUT_MASK) |
 161   2                                      CY_PM_CLKDIST_IMO_OUT_IMO;
 162   2          }    /* Need to change nothing if IMOCLK is source clk_imo */
 163   1      
 164   1          /* IMO doubler - disable it (saved above) */
 165   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 166   1          {
 167   2              CyIMO_DisableDoubler();
 168   2          }
 169   1      
 170   1          /* Master clock - save divider and set it to divide-by-one (if no yet) */
 171   1          cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 172   1          if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 173   1          {
 174   2              CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 175   2          }    /* Need to change nothing if master clock divider is 1 */
 176   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 4   

 177   1          /* Master clock - save current source */
 178   1          cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 179   1      
 180   1          /* Master clock source - set it to IMO if not yet. */
 181   1          if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 182   1          {
 183   2              CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 184   2          }    /* Need to change nothing if master clock source is IMO */
 185   1      
 186   1          /* Bus clock - save divider and set it, if needed, to divide-by-one */
 187   1          cyPmClockBackup.clkBusDiv = ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u) | CY_PM_CLK_BUS_LSB_DIV_REG;
 188   1          if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 189   1          {
 190   2              CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 191   2          }    /* Do nothing if saved and actual values are equal */
 192   1      
 193   1          /* Set number of wait cycles for the flash according CPU frequency in MHz */
 194   1          CyFlash_SetWaitCycles(CY_PM_GET_CPU_FREQ_MHZ);
 195   1      
 196   1          /* PLL - check enable state, disable if needed */
 197   1          if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 198   1          {
 199   2              /* PLL is enabled - save state and disable */
 200   2              cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 201   2              CyPLL_OUT_Stop();
 202   2          }
 203   1          else
 204   1          {
 205   2              /* PLL is disabled - save state */
 206   2              cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 207   2          }
 208   1      
 209   1          /* MHz ECO - check enable state and disable if needed */
 210   1          if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 211   1          {
 212   2              /* MHz ECO is enabled - save state and disable */
 213   2              cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 214   2              CyXTAL_Stop();
 215   2          }
 216   1          else
 217   1          {
 218   2              /* MHz ECO is disabled - save state */
 219   2              cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 220   2          }
 221   1      }
 222          
 223          
 224          /*******************************************************************************
 225          * Function Name: CyPmRestoreClocks
 226          ********************************************************************************
 227          *
 228          * Summary:
 229          *  Restores any state that was preserved by the last call to CyPmSaveClocks().
 230          *  The Flash wait state setting is also restored.
 231          *
 232          *  Note If the Master Clock source is routed through the DSI inputs, then it
 233          *  must be set manually to another source before using the
 234          *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
 235          *
 236          *  PSoC 3 and PSoC 5LP:
 237          *  The merge region could be used to process state when the megahertz crystal is
 238          *  not ready after the hold-off timeout.
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 5   

 239          *
 240          *  PSoC 5:
 241          *  The 130 ms is given for the megahertz crystal to stabilize. It's readiness is
 242          *  not verified after the hold-off timeout.
 243          *
 244          * Parameters:
 245          *  None
 246          *
 247          * Return:
 248          *  None
 249          *
 250          *******************************************************************************/
 251          void CyPmRestoreClocks(void) 
 252          {
 253   1          #if (!CY_PSOC5A)
 254   1      
 255   1              cystatus status = CYRET_TIMEOUT;
 256   1              uint16 i;
 257   1      
 258   1          #endif  /* (!CY_PSOC5A) */
 259   1      
 260   1      
 261   1          /* Convertion table between CyIMO_SetFreq() parameters and register's value */
 262   1          const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 263   1              CY_IMO_FREQ_12MHZ, CY_IMO_FREQ_6MHZ,  CY_IMO_FREQ_24MHZ, CY_IMO_FREQ_3MHZ,
 264   1              CY_IMO_FREQ_48MHZ, 5, 6};
 265   1      
 266   1      
 267   1          /* MHz ECO restore state */
 268   1          if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 269   1          {
 270   2              /***********************************************************************
 271   2              * Enabling XMHZ XTAL. The actual CyXTAL_Start() with non zero wait
 272   2              * period uses FTW for period measurement. This could cause a problem
 273   2              * if CTW/FTW is used as a wake up time in the low power modes APIs.
 274   2              * So, the XTAL wait procedure is implemented with a software delay.
 275   2              ***********************************************************************/
 276   2      
 277   2              /* Enable XMHZ XTAL with no wait */
 278   2              (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 279   2      
 280   2              #if(CY_PSOC5A)
              
                          /* Make a 130 milliseconds delay */
                          CyDelayCycles(CY_PM_WAIT_200_US * CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US * CY_PM_GET_CPU_FREQ_MHZ);
              
                      #else
 286   2      
 287   2                  /* Read XERR bit to clear it */
 288   2                  (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 289   2      
 290   2                  /* Wait */
 291   2                  for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 292   2                  {
 293   3                      /* Make a 200 microseconds delay */
 294   3                      CyDelayCycles(CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 295   3      
 296   3                      /* High output indicates oscillator failure */
 297   3                      if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 298   3                      {
 299   4                          status = CYRET_SUCCESS;
 300   4                          break;
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 6   

 301   4                      }
 302   3                  }
 303   2      
 304   2                  if(CYRET_TIMEOUT == status)
 305   2                  {
 306   3                      /*******************************************************************
 307   3                      * Process the situation when megahertz crystal is not ready.
 308   3                      * Time to stabialize value is crystal specific.
 309   3                      *******************************************************************/
 310   3      
 311   3                      /* `#START_MHZ_ECO_TIMEOUT` */
 312   3      
 313   3                      /* `#END` */
 314   3                  }
 315   2      
 316   2              #endif  /* (CY_PSOC5A) */
 317   2      
 318   2          }   /* (CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState) */
 319   1      
 320   1      
 321   1          /* Temprorary set the maximum flash wait cycles */
 322   1          CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 323   1      
 324   1          /* The XTAL and DSI clocks are ready to be source for Master clock. */
 325   1          if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 326   1             (CY_PM_MASTER_CLK_SRC_DSI  == cyPmClockBackup.masterClkSrc))
 327   1          {
 328   2              /* Restore Master clock's divider */
 329   2              if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 330   2              {
 331   3                  /* Restore Master clock divider */
 332   3                  CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 333   3              }
 334   2      
 335   2              /* Restore Master clock source */
 336   2              CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 337   2          }
 338   1      
 339   1          /* IMO - restore IMO frequency */
 340   1          if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 341   1              (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 342   1          {
 343   2              /* Restore IMO frequency (24 MHz) and trim it for USB */
 344   2              CyIMO_SetFreq(CY_IMO_FREQ_USB);
 345   2          }
 346   1          else
 347   1          {
 348   2              /* Restore IMO frequency */
 349   2              CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 350   2      
 351   2              if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 352   2              {
 353   3                  CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 354   3              }
 355   2              else
 356   2              {
 357   3                  CY_PM_FASTCLK_IMO_CR_REG &= ~CY_PM_FASTCLK_IMO_CR_USB;
 358   3              }
 359   2          }
 360   1      
 361   1          /* IMO - restore enable state if needed */
 362   1          if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 7   

 363   1             (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 364   1          {
 365   2              /* IMO - restore enabled state */
 366   2              CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 367   2          }
 368   1      
 369   1          /* IMO - restore disable state if needed */
 370   1          if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 371   1             (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 372   1          {
 373   2              CyIMO_Stop();
 374   2          }
 375   1      
 376   1          /* IMO - restore IMOCLK source */
 377   1          CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 378   1      
 379   1          /* Restore IMO doubler enable state (turned off by CyPmSaveClocks()) */
 380   1          if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 381   1          {
 382   2              CyIMO_EnableDoubler();
 383   2          }
 384   1      
 385   1          /* IMO - restore clk_imo source, if needed */
 386   1          if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 387   1          {
 388   2              CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ~CY_PM_CLKDIST_IMO_OUT_MASK) |
 389   2                                      cyPmClockBackup.clkImoSrc;
 390   2          }
 391   1      
 392   1          /* PLL restore state */
 393   1          if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 394   1          {
 395   2              /***********************************************************************
 396   2              * Enable PLL. The actual CyPLL_OUT_Start() without wait period uses FTW
 397   2              * for period measurement. This could cause a problem if CTW/FTW is used
 398   2              * as a wakeup time in the low power modes APIs. To omit this issue PLL
 399   2              * wait procedure is implemented with a software delay.
 400   2              ***********************************************************************/
 401   2      
 402   2              /* Enable PLL */
 403   2              (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 404   2      
 405   2              /* Make a 250 us delay */
 406   2              CyDelayCycles(CY_PM_WAIT_250_US * CY_PM_GET_CPU_FREQ_MHZ);
 407   2          }   /* (CY_PM_ENABLED == cyPmClockBackup.pllEnableState) */
 408   1      
 409   1      
 410   1          /* PLL and IMO is ready to be source for Master clock */
 411   1          if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 412   1             (CY_PM_MASTER_CLK_SRC_PLL == cyPmClockBackup.masterClkSrc))
 413   1          {
 414   2              /* Restore Master clock divider */
 415   2              if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 416   2              {
 417   3                  CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 418   3              }
 419   2      
 420   2              /* Restore Master clock source */
 421   2              CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 422   2          }
 423   1      
 424   1          /* Bus clock - restore divider, if needed */
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 8   

 425   1          if(cyPmClockBackup.clkBusDiv != (((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u) | CY_PM_CLK_BUS_LSB_DIV_RE
             -G))
 426   1          {
 427   2              CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 428   2          }
 429   1      
 430   1          /* Restore flash wait cycles */
 431   1          CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ~CY_PM_CACHE_CR_CYCLES_MASK) |
 432   1                                 cyPmClockBackup.flashWaitCycles);
 433   1      
 434   1          /* Digital and analog clocks - restore state */
 435   1          CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 436   1          CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 437   1      }
 438          
 439          
 440          /*******************************************************************************
 441          * Function Name: CyPmAltAct
 442          ********************************************************************************
 443          *
 444          * Summary:
 445          *  Puts the part into the Alternate Active (Standby) state. The Alternate Active
 446          *  state can allow for any of the capabilities of the device to be active, but
 447          *  the operation of this function is dependent on the CPU being disabled during
 448          *  the Alternate Active state. The configuration code and the component APIs
 449          *  will configure the template for the Alternate Active state to be the same as
 450          *  the Active state with the exception that the CPU will be disabled during
 451          *  Alternate Active.
 452          *
 453          *  Note Before calling this function, you must manually configure the power mode
 454          *  of the source clocks for the timer that is used as the wakeup timer.
 455          *
 456          *  PSoC 3:
 457          *  Before switching to Alternate Active, if a wakeupTime other than NONE is
 458          *  specified, then the appropriate timer state is configured as specified with
 459          *  the interrupt for that timer disabled.  The wakeup source will be the
 460          *  combination of the values specified in the wakeupSource and any timer
 461          *  specified in the wakeupTime argument.  Once the wakeup condition is
 462          *  satisfied, then all saved state is restored and the function returns in the
 463          *  Active state.
 464          *
 465          *  Note that if the wakeupTime is made with a different value, the period before
 466          *  the wakeup occurs can be significantly shorter than the specified time.  If
 467          *  the next call is made with the same wakeupTime value, then the wakeup will
 468          *  occur the specified period after the previous wakeup occurred.
 469          *
 470          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 471          *  specified timer will be left as specified by wakeupTime with the timer
 472          *  enabled and the interrupt disabled.  If the CTW, FTW or One PPS is already
 473          *  configured for wakeup, for example with the SleepTimer or RTC components,
 474          *  then specify NONE for the wakeupTime and include the appropriate source for
 475          *  wakeupSource.
 476          *
 477          *  PSoC 5:
 478          *  This function is used to both enter the Alternate Active mode and halt the
 479          *  processor.  For PSoC 3 these two actions must be paired together.  With
 480          *  PSoC 5 the processor can be halted independently with the __WFI() function
 481          *  from the CMSIS library that is included in Creator.  This function should be
 482          *  used instead when the action required is just to halt the processor until an
 483          *  enabled interrupt occurs.
 484          *
 485          *  Neither of the parameters to the CyPmAltAct() function are used. The
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 9   

 486          *  parameters must be set to 0 (PM_ALT_ACT_TIME_NONE and PM_ALT_ACT_SRC_NONE).
 487          *  The wake up time configuration can be done by a separate component: the CTW
 488          *  wakeup interval should be configured with the Sleep Timer component and one
 489          *  second interval should be configured with the RTC component.
 490          *
 491          *  Upon function execution the device will be switched from Active to Alternate
 492          *  Active mode and the CPU will be halted. When an enabled interrupt occurs the
 493          *  device will be switched to Active mode and the CPU will be started. Note that
 494          *  if a wakeup event occurs and the associated interrupt is not enabled, then
 495          *  the device will switch to Active mode with the CPU still halted. The CPU will
 496          *  remain halted until an enabled interrupt occurs.
 497          *
 498          *  PSoC 5LP:
 499          *  This function is used to both enter the Alternate Active mode and halt the
 500          *  processor.  For PSoC 3 these two actions must be paired together.  With PSoC
 501          *  5LP the processor can be halted independently with the __WFI() function from
 502          *  the CMSIS library that is included in Creator.  This function should be used
 503          *  instead when the action required is just to halt the processor until an
 504          *  enabled interrupt occurs.
 505          *
 506          *  The wakeupTime parameter is not used for this device. It must be set to zero
 507          *  (PM_ALT_ACT_TIME_NONE). The wake up time configuration can be done by a
 508          *  separate component: the CTW wakeup interval should be configured with the
 509          *  Sleep Timer component and one second interval should be configured with the
 510          *  RTC component.
 511          *
 512          *  The wakeup behavior depends on wakeupSource parameter in the following
 513          *  manner: upon function execution the device will be switched from Active to
 514          *  Alternate Active mode and then the CPU will be halted. When an enabled wakeup
 515          *  event occurs the device will return to Active mode.  Similarly when an
 516          *  enabled interrupt occurs the CPU will be started. These two actions will
 517          *  occur together provided that the event that occurs is an enabled wakeup
 518          *  source and also generates an interrupt. If just the wakeup event occurs then
 519          *  the device will be in Active mode, but the CPU will remain halted waiting for
 520          *  an interrupt. If an interrupt occurs from something other than a wakeup
 521          *  source, then the CPU will restart with the device in Alternate Active mode
 522          *  until a wakeup event occurs.
 523          *
 524          *  For example, if CyPmAltAct(PM_ALT_ACT_TIME_NONE, PM_ALT_ACT_SRC_PICU) is
 525          *  called and PICU interrupt occurs, the CPU will be started and device will be
 526          *  switched into Active mode. And if CyPmAltAct(PM_ALT_ACT_TIME_NONE,
 527          *  PM_ALT_ACT_SRC_NONE) is called and PICU interrupt occurs, the CPU will be
 528          *  started while device remains in Alternate Active mode.
 529          *
 530          * Parameters:
 531          *  wakeupTime: Specifies a timer wakeup source and the frequency of that
 532          *              source. For PSoC 5 and PSoC 5LP this parameter is ignored.
 533          *
 534          *           Define                      Time
 535          *  PM_ALT_ACT_TIME_NONE             None
 536          *  PM_ALT_ACT_TIME_ONE_PPS          One PPS: 1 second
 537          *  PM_ALT_ACT_TIME_CTW_2MS          CTW: 2 ms
 538          *  PM_ALT_ACT_TIME_CTW_4MS          CTW: 4 ms
 539          *  PM_ALT_ACT_TIME_CTW_8MS          CTW: 8 ms
 540          *  PM_ALT_ACT_TIME_CTW_16MS         CTW: 16 ms
 541          *  PM_ALT_ACT_TIME_CTW_32MS         CTW: 32 ms
 542          *  PM_ALT_ACT_TIME_CTW_64MS         CTW: 64 ms
 543          *  PM_ALT_ACT_TIME_CTW_128MS        CTW: 128 ms
 544          *  PM_ALT_ACT_TIME_CTW_256MS        CTW: 256 ms
 545          *  PM_ALT_ACT_TIME_CTW_512MS        CTW: 512 ms
 546          *  PM_ALT_ACT_TIME_CTW_1024MS       CTW: 1024 ms
 547          *  PM_ALT_ACT_TIME_CTW_2048MS       CTW: 2048 ms
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 10  

 548          *  PM_ALT_ACT_TIME_CTW_4096MS       CTW: 4096 ms
 549          *  PM_ALT_ACT_TIME_FTW(1-256)*       FTW: 10us to 2.56 ms
 550          *
 551          *  *Note:   PM_ALT_ACT_TIME_FTW() is a macro that takes an argument that
 552          *           specifies how many increments of 10 us to delay.
 553                      For PSoC 3 silicon the valid range of  values is 1 to 256.
 554          *
 555          *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 556          *                   a wakeupTime has been specified the associated timer will be
 557          *                   included as a wakeup source. For PSoC 5 this parameter is
 558          *                   ignored.
 559          *
 560          *           Define                      Source
 561          *  PM_ALT_ACT_SRC_NONE              None
 562          *  PM_ALT_ACT_SRC_COMPARATOR0       Comparator 0
 563          *  PM_ALT_ACT_SRC_COMPARATOR1       Comparator 1
 564          *  PM_ALT_ACT_SRC_COMPARATOR2       Comparator 2
 565          *  PM_ALT_ACT_SRC_COMPARATOR3       Comparator 3
 566          *  PM_ALT_ACT_SRC_INTERRUPT         Interrupt
 567          *  PM_ALT_ACT_SRC_PICU              PICU
 568          *  PM_ALT_ACT_SRC_I2C               I2C
 569          *  PM_ALT_ACT_SRC_BOOSTCONVERTER    Boost Converter
 570          *  PM_ALT_ACT_SRC_FTW               Fast Timewheel*
 571          *  PM_ALT_ACT_SRC_VD                High and Low Voltage Detection (HVI, LVI)*
 572          *  PM_ALT_ACT_SRC_CTW               Central Timewheel**
 573          *  PM_ALT_ACT_SRC_ONE_PPS           One PPS**
 574          *  PM_ALT_ACT_SRC_LCD               LCD
 575          *
 576          *  *Note : FTW and HVI/LVI wakeup signals are in the same mask bit.
 577          *  **Note: CTW and One PPS wakeup signals are in the same mask bit.
 578          *
 579          *  When specifying a Comparator as the wakeupSource an instance specific define
 580          *  should be used that will track with the specific comparator that the instance
 581          *  is placed into. As an example, for a Comparator instance named MyComp the
 582          *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 583          *
 584          *  When CTW, FTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 585          *  function must be called upon wakeup with corresponding parameter. Please
 586          *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 587          *  information.
 588          *
 589          * Return:
 590          *  None
 591          *
 592          * Reentrant:
 593          *  No
 594          *
 595          * Side Effects:
 596          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 597          *  specified timer will be left as specified by wakeupTime with the timer
 598          *  enabled and the interrupt disabled.  Also, the ILO 1 KHz (if CTW timer is
 599          *  used as wakeup time) or ILO 100 KHz (if FTW timer is used as wakeup time)
 600          *  will be left started.
 601          *
 602          *******************************************************************************/
 603          void CyPmAltAct(uint16 wakeupTime, uint16 wakeupSource) 
 604          {
 605   1          #if(CY_PSOC5)
              
                      /* Arguments expected to be 0 */
                      CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
              
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 11  

                      #if(CY_PSOC5A)
              
                          /* The wakeupSource argument expected to be 0 */
                          CYASSERT(PM_ALT_ACT_SRC_NONE  == wakeupSource);
              
                          /* To remove unreferenced local variable warning */
                          wakeupSource = wakeupSource;
              
                      #endif /* (CY_PSOC5A) */
              
                      /* To remove unreferenced local variable warning */
                      wakeupTime = wakeupTime;
              
                  #endif /* (CY_PSOC5) */
 624   1      
 625   1      
 626   1          #if(CY_PSOC3)
 627   1      
 628   1              /* FTW - save current and set new configuration */
 629   1              if((wakeupTime >= PM_ALT_ACT_TIME_FTW(1u)) && (wakeupTime <= PM_ALT_ACT_TIME_FTW(256u)))
 630   1              {
 631   2                  CyPmFtwSetInterval(PM_ALT_ACT_FTW_INTERVAL(wakeupTime));
 632   2      
 633   2                  /* Include associated timer to the wakeupSource */
 634   2                  wakeupSource |= PM_ALT_ACT_SRC_FTW;
 635   2              }
 636   1      
 637   1              /* CTW - save current and set new configuration */
 638   1              if((wakeupTime >= PM_ALT_ACT_TIME_CTW_2MS) && (wakeupTime <= PM_ALT_ACT_TIME_CTW_4096MS))
 639   1              {
 640   2                  /* Save current CTW configuration and set new one */
 641   2                  CyPmCtwSetInterval((wakeupTime - 1u) & CY_PM_CTW_INTERVAL_MASK);
 642   2      
 643   2                  /* Include associated timer to the wakeupSource */
 644   2                  wakeupSource |= PM_ALT_ACT_SRC_CTW;
 645   2              }
 646   1      
 647   1              /* 1PPS - save current and set new configuration */
 648   1              if(PM_ALT_ACT_TIME_ONE_PPS == wakeupTime)
 649   1              {
 650   2                  /* Save current 1PPS configuration and set new one */
 651   2                  CyPmOppsSet();
 652   2      
 653   2                  /* Include associated timer to the wakeupSource */
 654   2                  wakeupSource |= PM_ALT_ACT_SRC_ONE_PPS;
 655   2              }
 656   1      
 657   1          #endif /* (CY_PSOC3) */
 658   1      
 659   1      
 660   1          #if(CY_PSOC3 || CY_PSOC5LP)
 661   1      
 662   1              /* Save and set new wake up configuration */
 663   1      
 664   1              /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 665   1              cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 666   1              CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 667   1      
 668   1              /* Comparators */
 669   1              cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 670   1              CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 671   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 12  

 672   1              /* LCD */
 673   1              cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 674   1              CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 675   1      
 676   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
 677   1      
 678   1      
 679   1          /* Switch to the Alternate Active mode */
 680   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ~CY_PM_MODE_CSR_MASK) | CY_PM_MODE_CSR_ALT_ACT);
 681   1      
 682   1          /* Recommended readback. */
 683   1          (void) CY_PM_MODE_CSR_REG;
 684   1      
 685   1          /* Two recommended NOPs to get into the mode. */
 686   1          CY_NOP;
 687   1          CY_NOP;
 688   1      
 689   1          /* Execute WFI instruction (for ARM-based devices only) */
 690   1          CY_PM_WFI;
 691   1      
 692   1          /* Point of return from Alternate Active Mode */
 693   1      
 694   1          #if(CY_PSOC3 || CY_PSOC5LP)
 695   1      
 696   1              /* Restore wake up configuration */
 697   1              CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 698   1              CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 699   1              CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 700   1      
 701   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
 702   1      }
 703          
 704          
 705          /*******************************************************************************
 706          * Function Name: CyPmSleep
 707          ********************************************************************************
 708          *
 709          * Summary:
 710          *  Puts the part into the Sleep state.
 711          *
 712          *  Note Before calling this function, you must manually configure the power
 713          *  mode of the source clocks for the timer that is used as wakeup timer.
 714          *
 715          *  Note Before calling this function, you must prepare clock tree configuration
 716          *  for the low power mode by calling CyPmSaveClocks(). And restore clock
 717          *  configuration after CyPmSleep() execution by calling CyPmRestoreClocks(). See
 718          *  Power Management section, Clock Configuration subsection of the System
 719          *  Reference Guide for more information.
 720          *
 721          *  PSoC 3:
 722          *  Before switching to Sleep, if a wakeupTime other than NONE is specified,
 723          *  then the appropriate timer state is configured as specified with the
 724          *  interrupt for that timer disabled.  The wakeup source will be the combination
 725          *  of the values specified in the wakeupSource and any timer specified in the
 726          *  wakeupTime argument.  Once the wakeup condition is satisfied, then all saved
 727          *  state is restored and the function returns in the Active state.
 728          *
 729          *  Note that if the wakeupTime is made with a different value, the period before
 730          *  the wakeup occurs can be significantly shorter than the specified time.  If
 731          *  the next call is made with the same wakeupTime value, then the wakeup will
 732          *  occur the specified period after the previous wakeup occurred.
 733          *
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 13  

 734          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 735          *  specified timer will be left as specified by wakeupTime with the timer
 736          *  enabled and the interrupt disabled.  If the CTW or One PPS is already
 737          *  configured for wakeup, for example with the SleepTimer or RTC components,
 738          *  then specify NONE for the wakeupTime and include the appropriate source for
 739          *  wakeupSource.
 740          *
 741          *  PSoC 5:
 742          *  Neither parameter to this function is used for PSoC 5. The parameters must be
 743          *  set to 0 (PM_SLEEP_TIME_NONE and PM_SLEEP_SRC_NONE).  The device will go
 744          *  into Sleep mode until it is woken by an interrupt from the Central Time Wheel
 745          *  (CTW). The CTW must already be configured to generate an interrupt. It is
 746          *  configured using the SleepTimer component.  Only the CTW can be used to wake
 747          *  the device from sleep mode.  The other wakeup sources, Once per second or
 748          *  Port Interrupt Controller (PICU), cannot be used reliably with PSoC 5. This
 749          *  function automatically disables these interrupt sources and then restores
 750          *  them after the devices is woken by the CTW.
 751          *
 752          *  The duration of sleep needs to be controlled so that the device doesn't wake
 753          *  up too soon after going to sleep or remain asleep for too long.  Reliable
 754          *  sleep times of between 1 ms and 128 ms can be supported.  This requirement is
 755          *  satisfied with CTW settings of 4, 8, 16, 32, 64, 128 or 256 ms.  To control
 756          *  the sleep time the CTW is reset automatically just before putting the device
 757          *  to sleep.  The resulting wakeup time is half the duration programmed into the
 758          *  CTW with an uncertainty of 1 ms due to the arrival time of the first ILO
 759          *  clock edge. For example, the setting of 4 ms will result in a sleep time
 760          *  between 1 ms and 2 ms.
 761          *
 762          *  PSoC 5LP:
 763          *  The wakeupTime parameter is not used and the only NONE can be specified.
 764          *  The wakeup time must be configured with the component, SleepTimer for CTW
 765          *  intervals and RTC for 1PPS interval. The component must be configured to
 766          *  generate an interrrupt.
 767          *
 768          * Parameters:
 769          *  wakeupTime:      Specifies a timer wakeup source and the frequency of that
 770          *                   source. For PSoC 5 and PSoC 5LP, this parameter is ignored.
 771          *
 772          *           Define                      Time
 773          *  PM_SLEEP_TIME_NONE               None
 774          *  PM_SLEEP_TIME_ONE_PPS            One PPS: 1 second
 775          *  PM_SLEEP_TIME_CTW_2MS            CTW: 2 ms
 776          *  PM_SLEEP_TIME_CTW_4MS            CTW: 4 ms
 777          *  PM_SLEEP_TIME_CTW_8MS            CTW: 8 ms
 778          *  PM_SLEEP_TIME_CTW_16MS           CTW: 16 ms
 779          *  PM_SLEEP_TIME_CTW_32MS           CTW: 32 ms
 780          *  PM_SLEEP_TIME_CTW_64MS           CTW: 64 ms
 781          *  PM_SLEEP_TIME_CTW_128MS          CTW: 128 ms
 782          *  PM_SLEEP_TIME_CTW_256MS          CTW: 256 ms
 783          *  PM_SLEEP_TIME_CTW_512MS          CTW: 512 ms
 784          *  PM_SLEEP_TIME_CTW_1024MS         CTW: 1024 ms
 785          *  PM_SLEEP_TIME_CTW_2048MS         CTW: 2048 ms
 786          *  PM_SLEEP_TIME_CTW_4096MS         CTW: 4096 ms
 787          *
 788          *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 789          *                   a wakeupTime has been specified the associated timer will be
 790          *                   included as a wakeup source. For PSoC 5 this parameter is
 791          *                   ignored.
 792          *
 793          *           Define                      Source
 794          *  PM_SLEEP_SRC_NONE                None
 795          *  PM_SLEEP_SRC_COMPARATOR0         Comparator 0
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 14  

 796          *  PM_SLEEP_SRC_COMPARATOR1         Comparator 1
 797          *  PM_SLEEP_SRC_COMPARATOR2         Comparator 2
 798          *  PM_SLEEP_SRC_COMPARATOR3         Comparator 3
 799          *  PM_SLEEP_SRC_PICU                PICU
 800          *  PM_SLEEP_SRC_I2C                 I2C
 801          *  PM_SLEEP_SRC_BOOSTCONVERTER      Boost Converter
 802          *  PM_SLEEP_SRC_VD                  High and Low Voltage Detection (HVI, LVI)
 803          *  PM_SLEEP_SRC_CTW                 Central Timewheel*
 804          *  PM_SLEEP_SRC_ONE_PPS             One PPS*
 805          *  PM_SLEEP_SRC_LCD                 LCD
 806          *
 807          *  *Note:   CTW and One PPS wakeup signals are in the same mask bit.
 808          *           For PSoC 5, these are in a different bit (value 1024).
 809          *
 810          *  When specifying a Comparator as the wakeupSource an instance specific define
 811          *  should be used that will track with the specific comparator that the instance
 812          *  is placed into. As an example for a Comparator instance named MyComp the
 813          *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 814          *
 815          *  When CTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 816          *  function must be called upon wakeup with corresponding parameter. Please
 817          *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 818          *  information.
 819          *
 820          * Return:
 821          *  None
 822          *
 823          * Reentrant:
 824          *  No
 825          *
 826          * Side Effects:
 827          *  For PSoC 5 silicon the wakeup source is not selectable. In this case the
 828          *  wakeupSource argument is ignored and any of the available wakeup sources will
 829          *  wake the device.
 830          *
 831          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 832          *  specified timer will be left as specified by wakeupTime with the timer
 833          *  enabled and the interrupt disabled. Also, the ILO 1 KHz (if CTW timer is
 834          *  used as wake up time) will be left started.
 835          *
 836          *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
 837          *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 838          *  delay is measured using rising edges of the 1 kHz ILO.
 839          *
 840          *******************************************************************************/
 841          void CyPmSleep(uint8 wakeupTime, uint16 wakeupSource) 
 842          {
 843   1          uint8 interruptState;
 844   1      
 845   1          /* Save current global interrupt enable and disable it */
 846   1          interruptState = CyEnterCriticalSection();
 847   1      
 848   1      
 849   1          #if(CY_PSOC3 || CY_PSOC5LP)
 850   1      
 851   1              /***********************************************************************
 852   1              * The Hibernate/Sleep regulator has a settling time after a reset.
 853   1              * During this time, the system ignores requests to enter Sleep and
 854   1              * Hibernate modes. The holdoff delay is measured using rising edges of
 855   1              * the 1 kHz ILO.
 856   1              ***********************************************************************/
 857   1              if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 15  

 858   1              {
 859   2                  /* Disable hold off - no action on restore */
 860   2                  CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 861   2              }
 862   1              else
 863   1              {
 864   2                  /* Abort, device is not ready for low power mode entry */
 865   2                  
 866   2                  /* Restore global interrupt enable state */
 867   2                  CyExitCriticalSection(interruptState);
 868   2      
 869   2                  return;
 870   2              }
 871   1      
 872   1          #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 873   1      
 874   1      
 875   1          #if(CY_PSOC3)
 876   1      
 877   1              /* Hardware buzz expected to be disabled below for TO6 */
 878   1              if(CYDEV_CHIP_REV_ACTUAL < 5u)
 879   1              {
 880   2                  CYASSERT(0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ));
 881   2              }
 882   1      
 883   1          #endif /* (CY_PSOC3) */
 884   1      
 885   1      
 886   1          /*******************************************************************************
 887   1          * For ARM-based devices, an interrupt is required for the CPU to wake up. The
 888   1          * Power Management implementation assumes that wakeup time is configured with a
 889   1          * separate component (component-based wakeup time configuration) for an
 890   1          * interrupt to be issued on terminal count. For more information, refer to the
 891   1          * Wakeup Time Configuration section of System Reference Guide.
 892   1          *******************************************************************************/
 893   1          #if(CY_PSOC5)
              
                      /* Arguments expected to be 0 */
                      CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
              
                      #if(CY_PSOC5A)
              
                          /* The wakeupSource argument expected to be 0 */
                          CYASSERT(PM_SLEEP_SRC_NONE  == wakeupSource);
              
                          /* To remove unreferenced local variable warning */
                          wakeupSource = wakeupSource;
              
                      #endif /* (CY_PSOC5A) */
              
                      /* To remove unreferenced local variable warning */
                      wakeupTime = wakeupTime;
              
                  #endif /* (CY_PSOC5) */
 912   1      
 913   1      
 914   1          /* Prepare hardware for Sleep mode */
 915   1          CyPmSlpSaveSet();
 916   1      
 917   1      
 918   1          #if(CY_PSOC3)
 919   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 16  

 920   1              /* CTW - save current and set new configuration */
 921   1              if((wakeupTime >= PM_SLEEP_TIME_CTW_2MS) && (wakeupTime <= PM_SLEEP_TIME_CTW_4096MS))
 922   1              {
 923   2                  /* Save current and set new configuration of the CTW */
 924   2                  CyPmCtwSetInterval((wakeupTime - 1u) & CY_PM_CTW_INTERVAL_MASK);
 925   2      
 926   2                  /* Include associated timer to the wakeupSource */
 927   2                  wakeupSource |= PM_SLEEP_SRC_CTW;
 928   2              }
 929   1      
 930   1              /* 1PPS - save current and set new configuration */
 931   1              if(PM_SLEEP_TIME_ONE_PPS == wakeupTime)
 932   1              {
 933   2                  /* Save current and set new configuration of the 1PPS */
 934   2                  CyPmOppsSet();
 935   2      
 936   2                  /* Include associated timer to the wakeupSource */
 937   2                  wakeupSource |= PM_SLEEP_SRC_ONE_PPS;
 938   2              }
 939   1      
 940   1          #endif /* (CY_PSOC3) */
 941   1      
 942   1      
 943   1          #if(!CY_PSOC5A)
 944   1      
 945   1              /* Save and set new wake up configuration */
 946   1      
 947   1              /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 948   1              cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 949   1              CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 950   1      
 951   1              /* Comparators */
 952   1              cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 953   1              CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 954   1      
 955   1              /* LCD */
 956   1              cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 957   1              CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 958   1      
 959   1          #endif /* (!CY_PSOC5A) */
 960   1      
 961   1      
 962   1          /* Last moment IMO frequency change */
 963   1          if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 964   1          {
 965   2              /* IMO frequency is 12 MHz */
 966   2              cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 967   2          }
 968   1          else
 969   1          {
 970   2              /* IMO frequency is not 12 MHz */
 971   2              cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 972   2      
 973   2              /* Save IMO frequency */
 974   2              cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 975   2      
 976   2              /* Set IMO frequency to 12 MHz */
 977   2              CY_PM_FASTCLK_IMO_CR_REG &= ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 978   2          }
 979   1      
 980   1          /* Switch to the Sleep mode */
 981   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ~CY_PM_MODE_CSR_MASK) | CY_PM_MODE_CSR_SLEEP);
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 17  

 982   1      
 983   1          /* Recommended readback. */
 984   1          (void) CY_PM_MODE_CSR_REG;
 985   1      
 986   1          /* Two recommended NOPs to get into the mode. */
 987   1          CY_NOP;
 988   1          CY_NOP;
 989   1      
 990   1          /* Execute WFI instruction (for ARM-based devices only) */
 991   1          CY_PM_WFI;
 992   1      
 993   1          /* Point of return from Sleep Mode */
 994   1      
 995   1          /* Restore last moment IMO frequency change */
 996   1          if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 997   1          {
 998   2              CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK) |
 999   2                                          cyPmBackup.imoActFreq;
1000   2          }
1001   1      
1002   1      
1003   1          /* Restore hardware configuration */
1004   1          CyPmSlpRestore();
1005   1      
1006   1      
1007   1          #if(!CY_PSOC5A)
1008   1      
1009   1              /* Restore current wake up configuration */
1010   1              CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1011   1              CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1012   1              CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1013   1      
1014   1          #endif /* (!CY_PSOC5A) */
1015   1      
1016   1          /* Restore global interrupt enable state */
1017   1          CyExitCriticalSection(interruptState);
1018   1      }
1019          
1020          
1021          /*******************************************************************************
1022          * Function Name: CyPmHibernate
1023          ********************************************************************************
1024          *
1025          * Summary:
1026          *  Puts the part into the Hibernate state.
1027          *
1028          *  PSoC 3 and PSoC 5LP:
1029          *  Before switching to Hibernate, the current status of the PICU wakeup source
1030          *  bit is saved and then set. This configures the device to wake up from the
1031          *  PICU. Make sure you have at least one pin configured to generate a PICU
1032          *  interrupt. For pin Px.y, the register "PICU_INTTYPE_PICUx_INTTYPEy" controls
1033          *  the PICU behavior. In the TRM, this register is "PICU[0..15]_INTTYPE[0..7]."
1034          *  In the Pins component datasheet, this register is referred to as the IRQ
1035          *  option. Once the wakeup occurs, the PICU wakeup source bit is restored and
1036          *  the PSoC returns to the Active state.
1037          *
1038          *  PSoC 5:
1039          *  The only method supported for waking up from the Hibernate state is a
1040          *  hardware reset of the device.  The PICU wakeup source cannot be used
1041          *  reliably, so the PICU interrupt sources are automatically disabled by this
1042          *  function before putting the device into the Hibernate state.
1043          *
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 18  

1044          * Parameters:
1045          *  None
1046          *
1047          * Return:
1048          *  None
1049          *
1050          * Reentrant:
1051          *  No
1052          *
1053          * Side Effects:
1054          *  Applications must wait 20 us before re-entering hibernate or sleep after
1055          *  waking up from hibernate. The 20 us allows the sleep regulator time to
1056          *  stabilize before the next hibernate / sleep event occurs. The 20 us
1057          *  requirement begins when the device wakes up. There is no hardware check that
1058          *  this requirement is met. The specified delay should be done on ISR entry.
1059          *
1060          *  After wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin is
1061          *  instance name of the Pins component) function must be called to clear the
1062          *  latched pin events to allow proper Hibernate mode entry andd to enable
1063          *  detection of future events.
1064          *
1065          *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1066          *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1067          *  delay is measured using rising edges of the 1 kHz ILO.
1068          *
1069          *******************************************************************************/
1070          void CyPmHibernate(void) 
1071          {
1072   1          uint8 interruptState;
1073   1      
1074   1          /* Save current global interrupt enable and disable it */
1075   1          interruptState = CyEnterCriticalSection();
1076   1      
1077   1          #if(CY_PSOC3 || CY_PSOC5LP)
1078   1      
1079   1              /***********************************************************************
1080   1              * The Hibernate/Sleep regulator has a settling time after a reset.
1081   1              * During this time, the system ignores requests to enter Sleep and
1082   1              * Hibernate modes. The holdoff delay is measured using rising edges of
1083   1              * the 1 kHz ILO.
1084   1              ***********************************************************************/
1085   1              if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
1086   1              {
1087   2                  /* Disable hold off - no action on restore */
1088   2                  CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
1089   2              }
1090   1              else
1091   1              {
1092   2                  /* Abort, device is not ready for low power mode entry */
1093   2      
1094   2                  /* Restore global interrupt enable state */
1095   2                  CyExitCriticalSection(interruptState);
1096   2      
1097   2                  return;
1098   2              }
1099   1      
1100   1          #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1101   1      
1102   1          /* Prepare device for proper Hibernate mode entry */
1103   1          CyPmHibSaveSet();
1104   1      
1105   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 19  

1106   1          #if(!CY_PSOC5A)
1107   1      
1108   1              /* Save and enable only wakeup on PICU */
1109   1              cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
1110   1              CY_PM_WAKEUP_CFG0_REG = CY_PM_WAKEUP_PICU;
1111   1      
1112   1              cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
1113   1              CY_PM_WAKEUP_CFG1_REG = 0x00u;
1114   1      
1115   1              cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
1116   1              CY_PM_WAKEUP_CFG2_REG = 0x00u;
1117   1      
1118   1          #endif  /* (!CY_PSOC5A) */
1119   1      
1120   1      
1121   1          /* Last moment IMO frequency change */
1122   1          if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1123   1          {
1124   2              /* IMO frequency is 12 MHz */
1125   2              cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1126   2          }
1127   1          else
1128   1          {
1129   2              /* IMO frequency is not 12 MHz */
1130   2              cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1131   2      
1132   2              /* Save IMO frequency */
1133   2              cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1134   2      
1135   2              /* Set IMO frequency to 12 MHz */
1136   2              CY_PM_FASTCLK_IMO_CR_REG &= ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1137   2          }
1138   1      
1139   1      
1140   1          /* Switch to Hibernate Mode */
1141   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ~CY_PM_MODE_CSR_MASK) | CY_PM_MODE_CSR_HIBERNATE);
1142   1      
1143   1          /* Recommended readback. */
1144   1          (void) CY_PM_MODE_CSR_REG;
1145   1      
1146   1          /* Two recommended NOPs to get into the mode. */
1147   1          CY_NOP;
1148   1          CY_NOP;
1149   1      
1150   1          /* Execute WFI instruction (for ARM-based devices only) */
1151   1          CY_PM_WFI;
1152   1      
1153   1          /* Point of return from Hibernate mode */
1154   1      
1155   1      
1156   1          /* Restore last moment IMO frequency change */
1157   1          if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1158   1          {
1159   2              CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK) |
1160   2                                          cyPmBackup.imoActFreq;
1161   2          }
1162   1      
1163   1      
1164   1          /* Restore device for proper Hibernate mode exit*/
1165   1          CyPmHibRestore();
1166   1      
1167   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 20  

1168   1          #if(!CY_PSOC5A)
1169   1      
1170   1              /* Restore current wake up configuration */
1171   1              CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1172   1              CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1173   1              CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1174   1      
1175   1          #endif /* (!CY_PSOC5A) */
1176   1      
1177   1          /* Restore global interrupt enable state */
1178   1          CyExitCriticalSection(interruptState);
1179   1      }
1180          
1181          
1182          /*******************************************************************************
1183          * Function Name: CyPmReadStatus
1184          ********************************************************************************
1185          *
1186          * Summary:
1187          *  Manages the Power Manager Interrupt Status Register.  This register has the
1188          *  interrupt status for the one pulse per second, central timewheel and fast
1189          *  timewheel timers.  This hardware register clears on read.  To allow for only
1190          *  clearing the bits of interest and preserving the other bits, this function
1191          *  uses a shadow register that retains the state.  This function reads the
1192          *  status register and ORs that value with the shadow register.  That is the
1193          *  value that is returned.  Then the bits in the mask that are set are cleared
1194          *  from this value and written back to the shadow register.
1195          *
1196          *  Note You must call this function within 1 ms (1 clock cycle of the ILO)
1197          *  after a CTW event has occurred.
1198          *
1199          * Parameters:
1200          *  mask: Bits in the shadow register to clear.
1201          *
1202          *       Define                      Source
1203          *  CY_PM_FTW_INT                Fast Timewheel
1204          *  CY_PM_CTW_INT                Central Timewheel
1205          *  CY_PM_ONEPPS_INT             One Pulse Per Second
1206          *
1207          * Return:
1208          *  Status.  Same bits values as the mask parameter.
1209          *
1210          *******************************************************************************/
1211          uint8 CyPmReadStatus(uint8 mask) 
1212          {
1213   1          static uint8 interruptStatus;
1214   1          uint8 interruptState;
1215   1          uint8 tmpStatus;
1216   1      
1217   1          /* Enter critical section */
1218   1          interruptState = CyEnterCriticalSection();
1219   1      
1220   1          /* Save value of the register, copy it and clear desired bit */
1221   1          interruptStatus |= CY_PM_INT_SR_REG;
1222   1          tmpStatus = interruptStatus;
1223   1          interruptStatus &= ~mask;
1224   1      
1225   1          /* Exit critical section */
1226   1          CyExitCriticalSection(interruptState);
1227   1      
1228   1          return(tmpStatus);
1229   1      }
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 21  

1230          
1231          
1232          /*******************************************************************************
1233          * Function Name: CyPmHibSaveSet
1234          ********************************************************************************
1235          *
1236          * Summary:
1237          *  Prepare device for proper Hibernate low power mode entry:
1238          *  - Disables I2C backup regulator
1239          *  - Save state of I2C backup regulator (PSoC 5)
1240          *  - Saves ILO power down mode state and enable it (all but PSoC 5)
1241          *  - Saves state of 1 kHz and 100 kHz ILO and disable them (all but PSoC 5)
1242          *  - Disables sleep regulator and shorts vccd to vpwrsleep (all but PSoC 5)
1243          *  - Save LVI/HVI configuration and disable them - CyPmHviLviSaveDisable()
1244          *  - CyPmHibSlpSaveSet() function is called
1245          *
1246          * Parameters:
1247          *  None
1248          *
1249          * Return:
1250          *  None
1251          *
1252          * Reentrant:
1253          *  No
1254          *
1255          *******************************************************************************/
1256          static void CyPmHibSaveSet(void) 
1257          {
1258   1          /* I2C backup reg must be off when the sleep regulator is unavailable */
1259   1          if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
1260   1          {
1261   2              /***********************************************************************
1262   2              * If I2C backup regulator is enabled, all the fixed-function registers
1263   2              * store their values while device is in low power mode, otherwise their
1264   2              * configuration is lost. The I2C API makes a decision to restore or not
1265   2              * to restore I2C registers based on this. If this regulator will be
1266   2              * disabled and then enabled, I2C API will suppose that I2C block
1267   2              * registers preserved their values, while this is not true. So, the
1268   2              * backup regulator is disabled. And its value is restored only for
1269   2              * and PSoC 5 devices. The I2C sleep APIs is responsible for restoration.
1270   2              ***********************************************************************/
1271   2      
1272   2              #if(CY_PSOC5A)
              
                          cyPmBackup.i2cRegBackup = CY_PM_ENABLED;
              
                      #endif /* (CY_PSOC5A) */
1277   2      
1278   2              /* Disable I2C backup register */
1279   2              CY_PM_PWRSYS_CR1_REG &= ~CY_PM_PWRSYS_CR1_I2CREG_BACKUP;
1280   2          }
1281   1          else
1282   1          {
1283   2              #if(CY_PSOC5A)
              
                          /* Save disabled state of the I2C backup regulator */
                          cyPmBackup.i2cRegBackup = CY_PM_DISABLED;
              
                      #endif /* (CY_PSOC5A) */
1289   2          }
1290   1      
1291   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 22  

1292   1          #if(!CY_PSOC5A)
1293   1      
1294   1              /* Save current ILO power mode and ensure low power mode */
1295   1              cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
1296   1      
1297   1              /* Save current 1kHz ILO enable state. Disabled automatically. */
1298   1              cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
1299   1                                          CY_PM_DISABLED : CY_PM_ENABLED;
1300   1      
1301   1              /* Save current 100kHz ILO enable state. Disabled automatically. */
1302   1              cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
1303   1                                          CY_PM_DISABLED : CY_PM_ENABLED;
1304   1      
1305   1      
1306   1              /* Disable the sleep regulator and shorts vccd to vpwrsleep */
1307   1              if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
1308   1              {
1309   2                  /* Save current bypass state */
1310   2                  cyPmBackup.slpTrBypass = CY_PM_DISABLED;
1311   2                  CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
1312   2              }
1313   1              else
1314   1              {
1315   2                  cyPmBackup.slpTrBypass = CY_PM_ENABLED;
1316   2              }
1317   1      
1318   1              /* LPCOMPs are always enabled (even when BOTH ext_vccd=1 and ext_vcca=1)*/
1319   1      
1320   1          #endif /* (!CY_PSOC5A) */
1321   1      
1322   1      
1323   1          /* Device is PSoC 5 and the revision is ES1 or earlier. */
1324   1          #if(CY_PSOC5A)
              
                      /* Disable all the PICU interrupts */
                      CyPmDisablePicuInterrupts();
              
                  #endif  /* (CY_PSOC5A) */
1330   1      
1331   1      
1332   1          /***************************************************************************
1333   1          * LVI/HVI must be disabled in Hibernate
1334   1          ***************************************************************************/
1335   1      
1336   1          /* Save LVI/HVI configuration and disable them */
1337   1          CyPmHviLviSaveDisable();
1338   1          
1339   1      
1340   1          /* Make the same preparations for Hibernate and Sleep modes */
1341   1          CyPmHibSlpSaveSet();
1342   1      }
1343          
1344          
1345          /*******************************************************************************
1346          * Function Name: CyPmHibRestore
1347          ********************************************************************************
1348          *
1349          * Summary:
1350          *  Restore device for proper Hibernate mode exit:
1351          *  - Restore LVI/HVI configuration - call CyPmHviLviRestore()
1352          *  - CyPmHibSlpSaveRestore() function is called
1353          *  - Restores state of I2C backup regulator (PSoC 5)
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 23  

1354          *  - Restores ILO power down mode state and enable it (all but PSoC 5)
1355          *  - Restores state of 1 kHz and 100 kHz ILO and disable them (all but PSoC 5)
1356          *  - Restores sleep regulator settings (all but PSoC 5)
1357          *
1358          * Parameters:
1359          *  None
1360          *
1361          * Return:
1362          *  None
1363          *
1364          *******************************************************************************/
1365          static void CyPmHibRestore(void) 
1366          {
1367   1          /* Restore LVI/HVI configuration */
1368   1          CyPmHviLviRestore();
1369   1      
1370   1          /* Restore the same configuration for Hibernate and Sleep modes */
1371   1          CyPmHibSlpRestore();
1372   1      
1373   1          #if(CY_PSOC5A)
              
                      /* Restore I2C backup regulator configuration */
                      if(CY_PM_ENABLED == cyPmBackup.i2cRegBackup)
                      {
                          /* Enable I2C backup regulator state */
                          CY_PM_PWRSYS_CR1_REG |= CY_PM_PWRSYS_CR1_I2CREG_BACKUP;
                      }
              
                  #endif /* (CY_PSOC5A) */
1383   1      
1384   1      
1385   1          #if(!CY_PSOC5A)
1386   1      
1387   1              /* Restore 1kHz ILO enable state */
1388   1              if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
1389   1              {
1390   2                  /* Enable 1kHz ILO */
1391   2                  CyILO_Start1K();
1392   2              }
1393   1      
1394   1              /* Restore 100kHz ILO enable state */
1395   1              if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
1396   1              {
1397   2                  /* Enable 100kHz ILO */
1398   2                  CyILO_Start100K();
1399   2              }
1400   1      
1401   1              /* Restore ILO power mode */
1402   1              (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
1403   1      
1404   1      
1405   1              if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
1406   1              {
1407   2                  /* Enable the sleep regulator */
1408   2                  CY_PM_PWRSYS_SLP_TR_REG &= ~CY_PM_PWRSYS_SLP_TR_BYPASS;
1409   2              }
1410   1      
1411   1          #endif /* (!CY_PSOC5A) */
1412   1      }
1413          
1414          
1415          /*******************************************************************************
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 24  

1416          * Function Name: CyPmCtwSetInterval
1417          ********************************************************************************
1418          *
1419          * Summary:
1420          *  Performs CTW configuration:
1421          *  - Disables CTW interrupt
1422          *  - Enables 1 kHz ILO
1423          *  - Sets new CTW interval
1424          *
1425          * Parameters:
1426          *  ctwInterval: the CTW interval to be set.
1427          *
1428          * Return:
1429          *  None
1430          *
1431          * Side Effects:
1432          *  Enables ILO 1 KHz clock and leaves it enabled.
1433          *
1434          *******************************************************************************/
1435          void CyPmCtwSetInterval(uint8 ctwInterval) 
1436          {
1437   1          /* Disable CTW interrupt enable */
1438   1          CY_PM_TW_CFG2_REG &= ~CY_PM_CTW_IE;
1439   1      
1440   1          /* Enable 1kHz ILO (required for CTW operation) */
1441   1          CyILO_Start1K();
1442   1      
1443   1          /* Interval could be set only while CTW is disabled */
1444   1          if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
1445   1          {
1446   2              /* Set CTW interval if needed */
1447   2              if(CY_PM_TW_CFG1_REG != ctwInterval)
1448   2              {
1449   3                  /* Disable the CTW, set new CTW interval and enable it again */
1450   3                  CY_PM_TW_CFG2_REG &= ~CY_PM_CTW_EN;
1451   3                  CY_PM_TW_CFG1_REG = ctwInterval;
1452   3                  CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1453   3              }   /* Required interval is already set */
1454   2          }
1455   1          else
1456   1          {
1457   2              /* Set CTW interval if needed */
1458   2              if(CY_PM_TW_CFG1_REG != ctwInterval)
1459   2              {
1460   3                  /* Set the new CTW interval. Could be changed if CTW is disabled */
1461   3                  CY_PM_TW_CFG1_REG = ctwInterval;
1462   3              }   /* Required interval is already set */
1463   2      
1464   2              /* Enable the CTW */
1465   2              CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1466   2          }
1467   1      }
1468          
1469          
1470          /*******************************************************************************
1471          * Function Name: CyPmOppsSet
1472          ********************************************************************************
1473          *
1474          * Summary:
1475          *  Performs 1PPS configuration:
1476          *  - Starts 32 KHz XTAL
1477          *  - Disables 1PPS interupts
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 25  

1478          *  - Enables 1PPS
1479          *
1480          * Parameters:
1481          *  None
1482          *
1483          * Return:
1484          *  None
1485          *
1486          *******************************************************************************/
1487          void CyPmOppsSet(void) 
1488          {
1489   1          /* Enable 32kHz XTAL if needed */
1490   1          if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
1491   1          {
1492   2              /* Enable 32kHz XTAL */
1493   2              CyXTAL_32KHZ_Start();
1494   2          }
1495   1      
1496   1          /* Disable 1PPS interrupt enable */
1497   1          CY_PM_TW_CFG2_REG &= ~CY_PM_1PPS_IE;
1498   1      
1499   1          /* Enable 1PPS operation */
1500   1          CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
1501   1      }
1502          
1503          
1504          /*******************************************************************************
1505          * Function Name: CyPmFtwSetInterval
1506          ********************************************************************************
1507          *
1508          * Summary:
1509          *  Performs FTW configuration:
1510          *  - Disables FTW interrupt
1511          *  - Enables 100 kHz ILO
1512          *  - Sets new FTW interval.
1513          *
1514          * Parameters:
1515          *  ftwInterval - FTW counter interval.
1516          *
1517          * Return:
1518          *  None
1519          *
1520          * Side Effects:
1521          *  Enables ILO 100 KHz clock and leaves it enabled.
1522          *
1523          *******************************************************************************/
1524          void CyPmFtwSetInterval(uint8 ftwInterval) 
1525          {
1526   1          /* Disable FTW interrupt enable */
1527   1          CY_PM_TW_CFG2_REG &= ~CY_PM_FTW_IE;
1528   1      
1529   1          /* Enable 100kHz ILO */
1530   1          CyILO_Start100K();
1531   1      
1532   1          /* Iterval could be set only while FTW is disabled */
1533   1          if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
1534   1          {
1535   2              /* Disable FTW, set new FTW interval if needed and enable it again */
1536   2              if(CY_PM_TW_CFG0_REG != ftwInterval)
1537   2              {
1538   3                  /* Disable the CTW, set new CTW interval and enable it again */
1539   3                  CY_PM_TW_CFG2_REG &= ~CY_PM_FTW_EN;
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 26  

1540   3                  CY_PM_TW_CFG0_REG = ftwInterval;
1541   3                  CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1542   3              }   /* Required interval is already set */
1543   2          }
1544   1          else
1545   1          {
1546   2              /* Set new FTW counter interval if needed. FTW is disabled. */
1547   2              if(CY_PM_TW_CFG0_REG != ftwInterval)
1548   2              {
1549   3                  /* Set the new CTW interval. Could be changed if CTW is disabled */
1550   3                  CY_PM_TW_CFG0_REG = ftwInterval;
1551   3              }   /* Required interval is already set */
1552   2      
1553   2              /* Enable the FTW */
1554   2              CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1555   2          }
1556   1      }
1557          
1558          
1559          #if(CY_PSOC5A)
              
                  /*******************************************************************************
                  * Function Name: CyPmSavePicuInterrupts
                  ********************************************************************************
                  *
                  * Summary:
                  *  Saves PICU interrupt type registers to the backup structure.
                  *
                  * Parameters:
                  *  None
                  *
                  * Return:
                  *  None
                  *
                  * Reentrant:
                  *  No
                  *
                  *******************************************************************************/
                  static void CyPmSavePicuInterrupts(void) 
                  {
                      /* Save all the PICU interrupt type */
                      memcpy((void *) &cyPmBackup.picuIntType[0u],
                             (void *) CY_PM_PICU_0_6_INT_BASE,
                             CY_PM_PICU_0_6_INT_SIZE);
              
                      memcpy((void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE],
                             (void *) CY_PM_PICU_12_INT_BASE,
                             CY_PM_PICU_12_INT_SIZE);
              
                      memcpy((void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE + CY_PM_PICU_12_INT_SIZE],
                             (void *) CY_PM_PICU_15_INT_BASE,
                             CY_PM_PICU_15_INT_SIZE);
              
                  }
              
              
                  /*******************************************************************************
                  * Function Name: CyPmDisablePicuInterrupts
                  ********************************************************************************
                  *
                  * Summary:
                  *  Disableds PICU interrupts.
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 27  

                  *
                  * Parameters:
                  *  None
                  *
                  * Return:
                  *  None
                  *
                  *******************************************************************************/
                  static void CyPmDisablePicuInterrupts(void) 
                  {
                      /* Disable all the PICU interrupts */
                      memset((void *) CY_PM_PICU_0_6_INT_BASE, 0, CY_PM_PICU_0_6_INT_SIZE);
                      memset((void *) CY_PM_PICU_12_INT_BASE,  0, CY_PM_PICU_12_INT_SIZE );
                      memset((void *) CY_PM_PICU_15_INT_BASE,  0, CY_PM_PICU_15_INT_SIZE );
                  }
              
              
                  /*******************************************************************************
                  * Function Name: CyPmRestorePicuInterrupts
                  ********************************************************************************
                  *
                  * Summary:
                  *  Restores PICU interrupt type registers from the backup structure.
                  *
                  * Parameters:
                  *  None
                  *
                  * Return:
                  *  None
                  *
                  *******************************************************************************/
                  static void CyPmRestorePicuInterrupts(void) 
                  {
                      /* Save all the PICU interrupt type */
                      memcpy((void *) CY_PM_PICU_0_6_INT_BASE,
                             (void *) &cyPmBackup.picuIntType[0u],
                             CY_PM_PICU_0_6_INT_SIZE);
              
                      memcpy((void *) CY_PM_PICU_12_INT_BASE,
                             (void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE],
                             CY_PM_PICU_12_INT_SIZE);
              
                      memcpy((void *) CY_PM_PICU_15_INT_BASE,
                             (void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE + CY_PM_PICU_12_INT_SIZE],
                             CY_PM_PICU_15_INT_SIZE);
              
                  }
              
              #endif  /* (CY_PSOC5A) */
1651          
1652          
1653          /*******************************************************************************
1654          * Function Name: CyPmSlpSaveSet
1655          ********************************************************************************
1656          *
1657          * Summary:
1658          *  Prepare device for proper Sleep low power mode entry:
1659          *  - Prepare CTW for Sleep mode entry (PSoC 5)
1660          *    * Save timewheels configuration
1661          *    * Disable FTW and 1PPS (enable and interrupt)
1662          *    * Reset CTW
1663          *    * Save and disable PICU interrupts (PSoC 5)
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 28  

1664          *    * Save and disable PRES-A and PRES-D (PSoC 5)
1665          *  - Save and disable LVI/HVI configuration (PSoC 5)
1666          *  - Save and set to max buzz interval (PSoC 5)
1667          *  - If LVI/HVI is enabled than hardware buzz in required (PSoC 3):
1668          *    * Prepare wake trim registers
1669          *    * Disable LDO-A in proper way
1670          *  - If LVI/HVI is disabled than hardware buzz in not required (PSoC 3):
1671          *    * Disabled hardware buzz
1672          *  - CyPmHibSlpSaveSet() function is called
1673          *
1674          * Parameters:
1675          *  None
1676          *
1677          * Return:
1678          *  None
1679          *
1680          * Reentrant:
1681          *  No
1682          *
1683          *******************************************************************************/
1684          static void CyPmSlpSaveSet(void) 
1685          {
1686   1          #if(CY_PSOC5A)
              
                      /* Preserve the Timewheel Configuration Register 2 */
                      cyPmBackup.pmTwCfg2 = CY_PM_TW_CFG2_REG;
              
                      /*  Clear the enable and interrupt enables for the FTW and ONEPPS */
                      CY_PM_TW_CFG2_REG &= ~(CY_PM_FTW_IE | CY_PM_FTW_EN | CY_PM_1PPS_EN | CY_PM_1PPS_IE);
              
                      /* Reset free-running CTW counter to 0 and held it there */
                      CY_PM_WDT_CFG_REG |= CY_PM_WDT_CFG_CTW_RESET;
              
                      /* Exit CTW counter reset state */
                      CY_PM_WDT_CFG_REG &= ~CY_PM_WDT_CFG_CTW_RESET;
              
                      /* Save and disable PICU interrupts  */
                      CyPmSavePicuInterrupts();
                      CyPmDisablePicuInterrupts();
              
                      /* Save and disable PRES-A and PRES-D */
                      cyPmBackup.pres1 = CY_PM_RESET_CR1_REG & CY_PM_RESET_CR1_DIS_PRES1;
                      cyPmBackup.pres2 = CY_PM_RESET_CR3_REG & CY_PM_RESET_CR3_DIS_PRES2;
                      CY_PM_RESET_CR1_REG &= ~CY_PM_RESET_CR1_DIS_PRES1;
                      CY_PM_RESET_CR3_REG &= ~CY_PM_RESET_CR3_DIS_PRES2;
              
                  #endif /* (CY_PSOC5A) */
1711   1      
1712   1      
1713   1          #if(CY_PSOC5A)
              
                      /***************************************************************************
                      * LVI/HVI must be disabled as it doesn't work during buzzing.
                      *
                      * Using hardware buzz in conjunction with other device wakeup sources
                      * can cause the device to lockup, halting further code execution. The
                      * hardware buzz provides power supply supervising capability in sleep.
                      * It is enabled by default and there is no way to disable it. So the buzz
                      * interval is set to maximum (512 ms). The CTW must be configured to wake up
                      * at a rate less than hardware buzz interval.
                      ***************************************************************************/
              
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 29  

                      /* Save and disable LVI/HVI */
                      CyPmHviLviSaveDisable();
              
                      /* Save buzz trim value */
                      cyPmBackup.buzzSleepTrim = CY_PM_PWRSYS_BUZZ_TR_REG & ~CY_PM_PWRSYS_BUZZ_TR_MASK;
              
                      /* Set buzz interval to maximum */
                      CY_PM_PWRSYS_BUZZ_TR_REG = CY_PM_PWRSYS_BUZZ_TR_512_TICKS |
                                                (CY_PM_PWRSYS_BUZZ_TR_REG & CY_PM_PWRSYS_BUZZ_TR_MASK);
              
                  #endif  /* (CY_PSOC5A) */
1737   1      
1738   1      
1739   1          #if(CY_PSOC3)
1740   1      
1741   1              /***************************************************************************
1742   1              * If LVI/HVI is enabled than hardware buzz in required:
1743   1              *  - Prepare wake trim registers
1744   1              *  - Disable LDO-A in proper way
1745   1              *
1746   1              * If LVI/HVI is disabled than hardware buzz in not required:
1747   1              *  - Disabled hardware buzz
1748   1              ***************************************************************************/
1749   1      
1750   1              cyPmBackup.wakeTr2 = CY_PM_PWRSYS_WAKE_TR2_REG;
1751   1      
1752   1              /* Reconfigure power mode wakeup trim registers */
1753   1              if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1754   1                        CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1755   1              {
1756   2                  /* HVI/LVI is enabled - hardware buzz is required */
1757   2                  if(CYDEV_CHIP_REV_ACTUAL < 5u)
1758   2                  {
1759   3                      /* Update entire register */
1760   3                      CY_PM_PWRSYS_WAKE_TR2_REG = 0x3Bu;
1761   3                      
1762   3                      /* Prepares for disabling LDO-A by moving bandgap reference to VCCD */
1763   3                      CY_PM_PWRSYS_CR1_REG = 0x01u;
1764   3      
1765   3                      /* Disables LDO-A */
1766   3                      CY_PM_PWRSYS_CR1_REG |= 0x02u;                
1767   3                  }
1768   2                  else
1769   2                  {
1770   3                      /* For later revisions, just enable buzz */
1771   3                      CY_PM_PWRSYS_WAKE_TR2_REG |= CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ;
1772   3                  }
1773   2              }
1774   1              else
1775   1              {
1776   2                  /* HVI/LVI is disabled - hardware buzz is not required */
1777   2                  if(CYDEV_CHIP_REV_ACTUAL < 5u)
1778   2                  {
1779   3                      /* Update entire register */
1780   3                      CY_PM_PWRSYS_WAKE_TR2_REG = 0x3Au;
1781   3                  }
1782   2              }
1783   1      
1784   1          #endif  /* (CY_PSOC3) */
1785   1      
1786   1          /* Apply configuration that are same for Sleep and Hibernate */
1787   1          CyPmHibSlpSaveSet();
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 30  

1788   1      }
1789          
1790          
1791          /*******************************************************************************
1792          * Function Name: CyPmSlpRestore
1793          ********************************************************************************
1794          *
1795          * Summary:
1796          *  Restore device for proper Sleep mode exit:
1797          *  - Restore timewheel configuration (PSoC 5)
1798          *  - Restore PRES-A and PRES-D (PSoC 5)
1799          *  - Restore PICU interrupts (PSoC 5)
1800          *  - Restore LVI/HVI configuration (PSoC 3)
1801          *  - Restore buzz sleep trim value (PSoC 5)
1802          *  - Call to CyPmHibSlpSaveRestore()
1803          *
1804          * Parameters:
1805          *  None
1806          *
1807          * Return:
1808          *  None
1809          *
1810          *******************************************************************************/
1811          static void CyPmSlpRestore(void) 
1812          {
1813   1          #if(CY_PSOC5A)
              
                      /* Restore the Timewheel Configuration Register 2 */
                      CY_PM_TW_CFG2_REG = cyPmBackup.pmTwCfg2;
              
                      /* Restore PICU interrupts */
                      CyPmRestorePicuInterrupts();
              
                      /* Restore PRES-A and PRES-D (assumed they were disabled) */
                      CY_PM_RESET_CR1_REG |= cyPmBackup.pres1;
                      CY_PM_RESET_CR3_REG |= cyPmBackup.pres2;
              
                  #endif /* (CY_PSOC5A) */
1826   1      
1827   1      
1828   1          #if(CY_PSOC5A)
              
                      /* Restore LVI/HVI configuration */
                      CyPmHviLviRestore();
              
                      /* Restore buzz sleep trim value */
                      CY_PM_PWRSYS_BUZZ_TR_REG = cyPmBackup.buzzSleepTrim |
                                                (CY_PM_PWRSYS_BUZZ_TR_REG & CY_PM_PWRSYS_BUZZ_TR_MASK);
              
                  #endif  /* (CY_PSOC5A) */
1838   1      
1839   1      
1840   1          #if(CY_PSOC3)
1841   1      
1842   1              CY_PM_PWRSYS_WAKE_TR2_REG = cyPmBackup.wakeTr2;
1843   1      
1844   1              /* HVI/LVI is enabled - hardware buzz is required */
1845   1              if(CYDEV_CHIP_REV_ACTUAL < 5u)
1846   1              {
1847   2                  /* Reconfigure power mode wakeup trim registers */
1848   2                  if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1849   2                            CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 31  

1850   2                  {
1851   3                      /* Enables LDO-A */
1852   3                      CY_PM_PWRSYS_CR1_REG &= ~0x02u;
1853   3      
1854   3                      /* Moves bandgap reference back to VCCA */
1855   3                      CY_PM_PWRSYS_CR1_REG &= ~0x01u;
1856   3                  }
1857   2              }
1858   1      
1859   1          #endif  /* (CY_PSOC3) */
1860   1      
1861   1      
1862   1          /* Restore configuration that are same for Sleep and Hibernate */
1863   1          CyPmHibSlpRestore();
1864   1      }
1865          
1866          
1867          /*******************************************************************************
1868          * Function Name: CyPmHibSlpSaveSet
1869          ********************************************************************************
1870          *
1871          * Summary:
1872          *  This API is used for preparing device for Sleep and Hibernate low power
1873          *  modes entry:
1874          *  - Saves COMP, VIDAC, DSM and SAR routing connections (PSoC 5)
1875          *  - Saves SC/CT routing connections (PSoC 3 and PSoC 5)
1876          *  - Disables Serial Wire Viewer (SWV) (PSoC 3)
1877          *  - Saves enable state of delay between the system bus and analog clocks
1878          *
1879          * Parameters:
1880          *  None
1881          *
1882          * Return:
1883          *  None
1884          *
1885          * Reentrant:
1886          *  No
1887          *
1888          *******************************************************************************/
1889          static void CyPmHibSlpSaveSet(void) 
1890          {
1891   1          #if(CY_PSOC5A)
              
                      /* Save CMP routing registers */
                      cyPmBackup.cmpData[0u]  = CY_GET_REG8(CYREG_CMP0_SW0);
                      cyPmBackup.cmpData[1u]  = CY_GET_REG8(CYREG_CMP0_SW2);
                      cyPmBackup.cmpData[2u]  = CY_GET_REG8(CYREG_CMP0_SW3);
                      cyPmBackup.cmpData[3u]  = CY_GET_REG8(CYREG_CMP0_SW4);
                      cyPmBackup.cmpData[4u]  = CY_GET_REG8(CYREG_CMP0_SW6);
              
                      cyPmBackup.cmpData[5u]  = CY_GET_REG8(CYREG_CMP1_SW0);
                      cyPmBackup.cmpData[6u]  = CY_GET_REG8(CYREG_CMP1_SW2);
                      cyPmBackup.cmpData[7u]  = CY_GET_REG8(CYREG_CMP1_SW3);
                      cyPmBackup.cmpData[8u]  = CY_GET_REG8(CYREG_CMP1_SW4);
                      cyPmBackup.cmpData[9u]  = CY_GET_REG8(CYREG_CMP1_SW6);
              
                      cyPmBackup.cmpData[10u] = CY_GET_REG8(CYREG_CMP2_SW0);
                      cyPmBackup.cmpData[11u] = CY_GET_REG8(CYREG_CMP2_SW2);
                      cyPmBackup.cmpData[12u] = CY_GET_REG8(CYREG_CMP2_SW3);
                      cyPmBackup.cmpData[13u] = CY_GET_REG8(CYREG_CMP2_SW4);
                      cyPmBackup.cmpData[14u] = CY_GET_REG8(CYREG_CMP2_SW6);
              
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 32  

                      cyPmBackup.cmpData[15u] = CY_GET_REG8(CYREG_CMP3_SW0);
                      cyPmBackup.cmpData[16u] = CY_GET_REG8(CYREG_CMP3_SW2);
                      cyPmBackup.cmpData[17u] = CY_GET_REG8(CYREG_CMP3_SW3);
                      cyPmBackup.cmpData[18u] = CY_GET_REG8(CYREG_CMP3_SW4);
                      cyPmBackup.cmpData[19u] = CY_GET_REG8(CYREG_CMP3_SW6);
              
              
                      /* Clear CMP routing registers */
                      CY_SET_REG8(CYREG_CMP0_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_CMP1_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_CMP2_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_CMP3_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW6 , 0u);
              
              
                      /* Save DAC routing registers */
                      cyPmBackup.dacData[0u]  = CY_GET_REG8(CYREG_DAC0_SW0);
                      cyPmBackup.dacData[1u]  = CY_GET_REG8(CYREG_DAC0_SW2);
                      cyPmBackup.dacData[2u]  = CY_GET_REG8(CYREG_DAC0_SW3);
                      cyPmBackup.dacData[3u]  = CY_GET_REG8(CYREG_DAC0_SW4);
              
                      cyPmBackup.dacData[4u]  = CY_GET_REG8(CYREG_DAC1_SW0);
                      cyPmBackup.dacData[5u]  = CY_GET_REG8(CYREG_DAC1_SW2);
                      cyPmBackup.dacData[6u]  = CY_GET_REG8(CYREG_DAC1_SW3);
                      cyPmBackup.dacData[7u]  = CY_GET_REG8(CYREG_DAC1_SW4);
              
                      cyPmBackup.dacData[8u]  = CY_GET_REG8(CYREG_DAC2_SW0);
                      cyPmBackup.dacData[9u]  = CY_GET_REG8(CYREG_DAC2_SW2);
                      cyPmBackup.dacData[10u] = CY_GET_REG8(CYREG_DAC2_SW3);
                      cyPmBackup.dacData[11u] = CY_GET_REG8(CYREG_DAC2_SW4);
              
                      cyPmBackup.dacData[12u] = CY_GET_REG8(CYREG_DAC3_SW0);
                      cyPmBackup.dacData[13u] = CY_GET_REG8(CYREG_DAC3_SW2);
                      cyPmBackup.dacData[14u] = CY_GET_REG8(CYREG_DAC3_SW3);
                      cyPmBackup.dacData[15u] = CY_GET_REG8(CYREG_DAC3_SW4);
              
                      /* Clear DAC routing registers */
                      CY_SET_REG8(CYREG_DAC0_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC0_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC0_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC0_SW4 , 0u);
              
                      CY_SET_REG8(CYREG_DAC1_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC1_SW2 , 0u);
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 33  

                      CY_SET_REG8(CYREG_DAC1_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC1_SW4 , 0u);
              
                      CY_SET_REG8(CYREG_DAC2_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC2_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC2_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC2_SW4 , 0u);
              
                      CY_SET_REG8(CYREG_DAC3_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC3_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC3_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC3_SW4 , 0u);
              
              
                      /* Save DSM routing registers */
                      cyPmBackup.dsmData[0u]  = CY_GET_REG8(CYREG_DSM0_SW0);
                      cyPmBackup.dsmData[1u]  = CY_GET_REG8(CYREG_DSM0_SW2);
                      cyPmBackup.dsmData[2u]  = CY_GET_REG8(CYREG_DSM0_SW3);
                      cyPmBackup.dsmData[3u]  = CY_GET_REG8(CYREG_DSM0_SW4);
                      cyPmBackup.dsmData[4u]  = CY_GET_REG8(CYREG_DSM0_SW6);
              
                      /* Clear DSM routing registers */
                      CY_SET_REG8(CYREG_DSM0_SW0 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW2 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW3 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW4 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW6 , 0u);
              
              
                      /* Save SAR routing registers */
                      cyPmBackup.sarData[0u]  = CY_GET_REG8(CYREG_SAR0_SW0);
                      cyPmBackup.sarData[1u]  = CY_GET_REG8(CYREG_SAR0_SW2);
                      cyPmBackup.sarData[2u]  = CY_GET_REG8(CYREG_SAR0_SW3);
                      cyPmBackup.sarData[3u]  = CY_GET_REG8(CYREG_SAR0_SW4);
                      cyPmBackup.sarData[4u]  = CY_GET_REG8(CYREG_SAR0_SW6);
              
                      cyPmBackup.sarData[5u]  = CY_GET_REG8(CYREG_SAR1_SW0);
                      cyPmBackup.sarData[6u]  = CY_GET_REG8(CYREG_SAR1_SW2);
                      cyPmBackup.sarData[7u]  = CY_GET_REG8(CYREG_SAR1_SW3);
                      cyPmBackup.sarData[8u]  = CY_GET_REG8(CYREG_SAR1_SW4);
                      cyPmBackup.sarData[9u]  = CY_GET_REG8(CYREG_SAR1_SW6);
              
              
                      /* Clear SAR routing registers */
                      CY_SET_REG8(CYREG_SAR0_SW0 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW2 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW3 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW4 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_SAR1_SW0 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW2 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW3 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW4 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW6 , 0u);
              
                  #endif  /* (CY_PSOC5A) */
2031   1      
2032   1      
2033   1          #if(CY_PSOC3 || CY_PSOC5A)
2034   1      
2035   1              /* Save SC/CT routing registers */
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 34  

2036   1              cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
2037   1              cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
2038   1              cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
2039   1              cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
2040   1              cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
2041   1              cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
2042   1              cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
2043   1      
2044   1              cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
2045   1              cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
2046   1              cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
2047   1              cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
2048   1              cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
2049   1              cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
2050   1              cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
2051   1      
2052   1              cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
2053   1              cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
2054   1              cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
2055   1              cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
2056   1              cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
2057   1              cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
2058   1              cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
2059   1      
2060   1              cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
2061   1              cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
2062   1              cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
2063   1              cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
2064   1              cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
2065   1              cyPmBackup.scctData[26u]  = CY_GET_REG8(CYREG_SC3_SW8 );
2066   1              cyPmBackup.scctData[27u]  = CY_GET_REG8(CYREG_SC3_SW10);
2067   1      
2068   1              CY_SET_REG8(CYREG_SC0_SW0 , 0u);
2069   1              CY_SET_REG8(CYREG_SC0_SW2 , 0u);
2070   1              CY_SET_REG8(CYREG_SC0_SW3 , 0u);
2071   1              CY_SET_REG8(CYREG_SC0_SW4 , 0u);
2072   1              CY_SET_REG8(CYREG_SC0_SW6 , 0u);
2073   1              CY_SET_REG8(CYREG_SC0_SW8 , 0u);
2074   1              CY_SET_REG8(CYREG_SC0_SW10, 0u);
2075   1      
2076   1              CY_SET_REG8(CYREG_SC1_SW0 , 0u);
2077   1              CY_SET_REG8(CYREG_SC1_SW2 , 0u);
2078   1              CY_SET_REG8(CYREG_SC1_SW3 , 0u);
2079   1              CY_SET_REG8(CYREG_SC1_SW4 , 0u);
2080   1              CY_SET_REG8(CYREG_SC1_SW6 , 0u);
2081   1              CY_SET_REG8(CYREG_SC1_SW8 , 0u);
2082   1              CY_SET_REG8(CYREG_SC1_SW10, 0u);
2083   1      
2084   1              CY_SET_REG8(CYREG_SC2_SW0 , 0u);
2085   1              CY_SET_REG8(CYREG_SC2_SW2 , 0u);
2086   1              CY_SET_REG8(CYREG_SC2_SW3 , 0u);
2087   1              CY_SET_REG8(CYREG_SC2_SW4 , 0u);
2088   1              CY_SET_REG8(CYREG_SC2_SW6 , 0u);
2089   1              CY_SET_REG8(CYREG_SC2_SW8 , 0u);
2090   1              CY_SET_REG8(CYREG_SC2_SW10, 0u);
2091   1      
2092   1              CY_SET_REG8(CYREG_SC3_SW0 , 0u);
2093   1              CY_SET_REG8(CYREG_SC3_SW2 , 0u);
2094   1              CY_SET_REG8(CYREG_SC3_SW3 , 0u);
2095   1              CY_SET_REG8(CYREG_SC3_SW4 , 0u);
2096   1              CY_SET_REG8(CYREG_SC3_SW6 , 0u);
2097   1              CY_SET_REG8(CYREG_SC3_SW8 , 0u);
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 35  

2098   1              CY_SET_REG8(CYREG_SC3_SW10, 0u);
2099   1      
2100   1          #endif  /* (CY_PSOC3 || CY_PSOC5A) */
2101   1      
2102   1          /* Device is PSoC 3 and the revision is ES3 or later */
2103   1          #if(CY_PSOC3)
2104   1      
2105   1              /* Serial Wire Viewer (SWV) workaround */
2106   1      
2107   1              /* Disable SWV before entering low power mode */
2108   1              if(0u != (CY_PM_MLOGIC_DBG_REG & CY_PM_MLOGIC_DBG_SWV_CLK_EN))
2109   1              {
2110   2                  /* Save SWV clock enabled state */
2111   2                  cyPmBackup.swvClkEnabled = CY_PM_ENABLED;
2112   2      
2113   2                  /* Save current ports drive mode settings */
2114   2                  cyPmBackup.prt1Dm = CY_PM_PRT1_PC3_REG & ~CY_PM_PRT1_PC3_DM_MASK;
2115   2      
2116   2                  /* Set drive mode to strong output */
2117   2                  CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
2118   2                                      CY_PM_PRT1_PC3_DM_STRONG;
2119   2      
2120   2                  /* Disable SWV clocks */
2121   2                  CY_PM_MLOGIC_DBG_REG &= ~CY_PM_MLOGIC_DBG_SWV_CLK_EN;
2122   2              }
2123   1              else
2124   1              {
2125   2                  /* Save SWV clock disabled state */
2126   2                  cyPmBackup.swvClkEnabled = CY_PM_DISABLED;
2127   2              }
2128   1      
2129   1          #endif  /* (CY_PSOC3) */
2130   1      
2131   1      
2132   1          /***************************************************************************
2133   1          * Save enable state of delay between the system bus clock and each of the
2134   1          * 4 individual analog clocks. This bit non-retention and it's value should
2135   1          * be restored on wakeup.
2136   1          ***************************************************************************/
2137   1          if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
2138   1          {
2139   2              cyPmBackup.clkDistDelay = CY_PM_ENABLED;
2140   2          }
2141   1          else
2142   1          {
2143   2              cyPmBackup.clkDistDelay = CY_PM_DISABLED;
2144   2          }
2145   1      
2146   1      
2147   1          /***************************************************************************
2148   1          * Save boost reference and set it to boost's internal by clearing the bit.
2149   1          * External (chip bandgap) reference is not available in Sleep and Hibernate.
2150   1          ***************************************************************************/
2151   1          if(0u != (CY_PM_BOOST_CR2_REG & CY_PM_BOOST_CR2_EREFSEL_EXT))
2152   1          {
2153   2              cyPmBackup.boostRefExt = CY_PM_ENABLED;
2154   2              CY_PM_BOOST_CR2_REG &= ~CY_PM_BOOST_CR2_EREFSEL_EXT;
2155   2          }
2156   1          else
2157   1          {
2158   2              cyPmBackup.boostRefExt = CY_PM_DISABLED;
2159   2          }
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 36  

2160   1      }
2161          
2162          
2163          /*******************************************************************************
2164          * Function Name: CyPmHibSlpRestore
2165          ********************************************************************************
2166          *
2167          * Summary:
2168          *  This API is used for restoring device configurations after wakeup from Sleep
2169          *  and Hibernate low power modes:
2170          *  - Restores COMP, VIDAC, DSM and SAR routing connections (PSoC 5)
2171          *  - Restores SC/CT routing connections (PSoC 3 and PSoC 5)
2172          *  - Restores enable state of Serial Wire Viewer (SWV) (PSoC 3)
2173          *  - Restores initial buzz rate (PSoC 5)
2174          *  - Restores enable state of delay between the system bus and analog clocks
2175          *
2176          * Parameters:
2177          *  None
2178          *
2179          * Return:
2180          *  None
2181          *
2182          *******************************************************************************/
2183          static void CyPmHibSlpRestore(void) 
2184          {
2185   1          #if(CY_PSOC5A)
              
                      /* Restore COMP routing registers */
                      CY_SET_REG8(CYREG_CMP0_SW0 , cyPmBackup.cmpData[0u] );
                      CY_SET_REG8(CYREG_CMP0_SW2 , cyPmBackup.cmpData[1u] );
                      CY_SET_REG8(CYREG_CMP0_SW3 , cyPmBackup.cmpData[2u] );
                      CY_SET_REG8(CYREG_CMP0_SW4 , cyPmBackup.cmpData[3u] );
                      CY_SET_REG8(CYREG_CMP0_SW6 , cyPmBackup.cmpData[4u] );
              
                      CY_SET_REG8(CYREG_CMP1_SW0 , cyPmBackup.cmpData[5u] );
                      CY_SET_REG8(CYREG_CMP1_SW2 , cyPmBackup.cmpData[6u] );
                      CY_SET_REG8(CYREG_CMP1_SW3 , cyPmBackup.cmpData[7u] );
                      CY_SET_REG8(CYREG_CMP1_SW4 , cyPmBackup.cmpData[8u] );
                      CY_SET_REG8(CYREG_CMP1_SW6 , cyPmBackup.cmpData[9u] );
              
                      CY_SET_REG8(CYREG_CMP2_SW0 , cyPmBackup.cmpData[10u]);
                      CY_SET_REG8(CYREG_CMP2_SW2 , cyPmBackup.cmpData[11u]);
                      CY_SET_REG8(CYREG_CMP2_SW3 , cyPmBackup.cmpData[12u]);
                      CY_SET_REG8(CYREG_CMP2_SW4 , cyPmBackup.cmpData[13u]);
                      CY_SET_REG8(CYREG_CMP2_SW6 , cyPmBackup.cmpData[14u]);
              
                      CY_SET_REG8(CYREG_CMP3_SW0 , cyPmBackup.cmpData[15u]);
                      CY_SET_REG8(CYREG_CMP3_SW2 , cyPmBackup.cmpData[16u]);
                      CY_SET_REG8(CYREG_CMP3_SW3 , cyPmBackup.cmpData[17u]);
                      CY_SET_REG8(CYREG_CMP3_SW4 , cyPmBackup.cmpData[18u]);
                      CY_SET_REG8(CYREG_CMP3_SW6 , cyPmBackup.cmpData[19u]);
              
                      /* Restore DAC routing registers */
                      CY_SET_REG8(CYREG_DAC0_SW0 , cyPmBackup.dacData[0u] );
                      CY_SET_REG8(CYREG_DAC0_SW2 , cyPmBackup.dacData[1u] );
                      CY_SET_REG8(CYREG_DAC0_SW3 , cyPmBackup.dacData[2u] );
                      CY_SET_REG8(CYREG_DAC0_SW4 , cyPmBackup.dacData[3u] );
              
                      CY_SET_REG8(CYREG_DAC1_SW0 , cyPmBackup.dacData[4u] );
                      CY_SET_REG8(CYREG_DAC1_SW2 , cyPmBackup.dacData[5u] );
                      CY_SET_REG8(CYREG_DAC1_SW3 , cyPmBackup.dacData[6u] );
                      CY_SET_REG8(CYREG_DAC1_SW4 , cyPmBackup.dacData[7u] );
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 37  

              
                      CY_SET_REG8(CYREG_DAC2_SW0 , cyPmBackup.dacData[8u] );
                      CY_SET_REG8(CYREG_DAC2_SW2 , cyPmBackup.dacData[9u] );
                      CY_SET_REG8(CYREG_DAC2_SW3 , cyPmBackup.dacData[10u]);
                      CY_SET_REG8(CYREG_DAC2_SW4 , cyPmBackup.dacData[11u]);
              
                      CY_SET_REG8(CYREG_DAC3_SW0 , cyPmBackup.dacData[12u]);
                      CY_SET_REG8(CYREG_DAC3_SW2 , cyPmBackup.dacData[13u]);
                      CY_SET_REG8(CYREG_DAC3_SW3 , cyPmBackup.dacData[14u]);
                      CY_SET_REG8(CYREG_DAC3_SW4 , cyPmBackup.dacData[15u]);
              
              
                      /* Restore DSM routing registers */
                      CY_SET_REG8(CYREG_DSM0_SW0 , cyPmBackup.dsmData[0u]);
                      CY_SET_REG8(CYREG_DSM0_SW2 , cyPmBackup.dsmData[1u]);
                      CY_SET_REG8(CYREG_DSM0_SW3 , cyPmBackup.dsmData[2u]);
                      CY_SET_REG8(CYREG_DSM0_SW4 , cyPmBackup.dsmData[3u]);
                      CY_SET_REG8(CYREG_DSM0_SW6 , cyPmBackup.dsmData[4u]);
              
              
                      /* Restore SAR routing registers */
                      CY_SET_REG8(CYREG_SAR0_SW0 , cyPmBackup.sarData[0u]);
                      CY_SET_REG8(CYREG_SAR0_SW2 , cyPmBackup.sarData[1u]);
                      CY_SET_REG8(CYREG_SAR0_SW3 , cyPmBackup.sarData[2u]);
                      CY_SET_REG8(CYREG_SAR0_SW4 , cyPmBackup.sarData[3u]);
                      CY_SET_REG8(CYREG_SAR0_SW6 , cyPmBackup.sarData[4u]);
              
                      CY_SET_REG8(CYREG_SAR1_SW0 , cyPmBackup.sarData[5u]);
                      CY_SET_REG8(CYREG_SAR1_SW2 , cyPmBackup.sarData[6u]);
                      CY_SET_REG8(CYREG_SAR1_SW3 , cyPmBackup.sarData[7u]);
                      CY_SET_REG8(CYREG_SAR1_SW4 , cyPmBackup.sarData[8u]);
                      CY_SET_REG8(CYREG_SAR1_SW6 , cyPmBackup.sarData[9u]);
              
                  #endif  /* (CY_PSOC5A) */
2256   1      
2257   1          #if(CY_PSOC3 || CY_PSOC5A)
2258   1      
2259   1              /* Restore SC/CT routing registers */
2260   1              CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
2261   1              CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
2262   1              CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
2263   1              CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
2264   1              CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
2265   1              CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
2266   1              CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
2267   1      
2268   1              CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
2269   1              CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
2270   1              CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
2271   1              CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
2272   1              CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
2273   1              CY_SET_REG8(CYREG_SC1_SW8 , cyPmBackup.scctData[12u]);
2274   1              CY_SET_REG8(CYREG_SC1_SW10, cyPmBackup.scctData[13u]);
2275   1      
2276   1              CY_SET_REG8(CYREG_SC2_SW0 , cyPmBackup.scctData[14u]);
2277   1              CY_SET_REG8(CYREG_SC2_SW2 , cyPmBackup.scctData[15u]);
2278   1              CY_SET_REG8(CYREG_SC2_SW3 , cyPmBackup.scctData[16u]);
2279   1              CY_SET_REG8(CYREG_SC2_SW4 , cyPmBackup.scctData[17u]);
2280   1              CY_SET_REG8(CYREG_SC2_SW6 , cyPmBackup.scctData[18u]);
2281   1              CY_SET_REG8(CYREG_SC2_SW8 , cyPmBackup.scctData[19u]);
2282   1              CY_SET_REG8(CYREG_SC2_SW10, cyPmBackup.scctData[20u]);
2283   1      
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 38  

2284   1              CY_SET_REG8(CYREG_SC3_SW0 , cyPmBackup.scctData[21u]);
2285   1              CY_SET_REG8(CYREG_SC3_SW2 , cyPmBackup.scctData[22u]);
2286   1              CY_SET_REG8(CYREG_SC3_SW3 , cyPmBackup.scctData[23u]);
2287   1              CY_SET_REG8(CYREG_SC3_SW4 , cyPmBackup.scctData[24u]);
2288   1              CY_SET_REG8(CYREG_SC3_SW6 , cyPmBackup.scctData[25u]);
2289   1              CY_SET_REG8(CYREG_SC3_SW8 , cyPmBackup.scctData[26u]);
2290   1              CY_SET_REG8(CYREG_SC3_SW10, cyPmBackup.scctData[27u]);
2291   1      
2292   1          #endif  /* (CY_PSOC3 || CY_PSOC5A) */
2293   1      
2294   1      
2295   1          #if(CY_PSOC3)
2296   1      
2297   1              /* Serial Wire Viewer (SWV) workaround */
2298   1              if(CY_PM_ENABLED == cyPmBackup.swvClkEnabled)
2299   1              {
2300   2                  /* Restore ports drive mode */
2301   2                  CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
2302   2                                          cyPmBackup.prt1Dm;
2303   2      
2304   2                  /* Enable SWV clocks */
2305   2                  CY_PM_MLOGIC_DBG_REG |= CY_PM_MLOGIC_DBG_SWV_CLK_EN;
2306   2              }
2307   1      
2308   1          #endif /* (CY_PSOC3) */
2309   1      
2310   1      
2311   1          #if(CY_PSOC5A)
              
                      /* Restore buzz sleep trim value */
                      CY_PM_PWRSYS_BUZZ_TR_REG = cyPmBackup.buzzSleepTrim | \
                                                (CY_PM_PWRSYS_BUZZ_TR_REG & CY_PM_PWRSYS_BUZZ_TR_MASK);
              
                  #endif  /* (CY_PSOC5A) */
2318   1      
2319   1      
2320   1          /* Restore enable state of delay between the system bus clock and ACLKs. */
2321   1          if(CY_PM_ENABLED == cyPmBackup.clkDistDelay)
2322   1          {
2323   2              /* Delay for both the bandgap and the delay line to settle out */
2324   2              CyDelayCycles(CY_PM_GET_CPU_FREQ_MHZ * (CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_S
             -ETTLE_US));
2325   2              CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
2326   2          }
2327   1      
2328   1              /* Restore boost reference */
2329   1          if(CY_PM_ENABLED == cyPmBackup.boostRefExt)
2330   1          {
2331   2              CY_PM_BOOST_CR2_REG |= CY_PM_BOOST_CR2_EREFSEL_EXT;
2332   2          }
2333   1      }
2334          
2335          
2336          /*******************************************************************************
2337          * Function Name: CyPmHviLviSaveDisable
2338          ********************************************************************************
2339          *
2340          * Summary:
2341          *  Saves analog and digital LVI and HVI configuration and disables them.
2342          *
2343          * Parameters:
2344          *  None
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 39  

2345          *
2346          * Return:
2347          *  None
2348          *
2349          * Reentrant:
2350          *  No
2351          *
2352          *******************************************************************************/
2353          static void CyPmHviLviSaveDisable(void) 
2354          {
2355   1          if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVID_EN))
2356   1          {
2357   2              cyPmBackup.lvidEn = CY_PM_ENABLED;
2358   2              cyPmBackup.lvidTrip = CY_VD_LVI_TRIP_REG & CY_VD_LVI_TRIP_LVID_MASK;
2359   2      
2360   2              /* Save state of reset device at a specified Vddd threshold */
2361   2              #if(CY_PSOC5A)
              
                          /* Not applicable PSoC 5 */
                          cyPmBackup.lvidRst = CY_PM_DISABLED;
              
                      #else
2367   2      
2368   2                  cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
2369   2                                          CY_PM_DISABLED : CY_PM_ENABLED;
2370   2      
2371   2              #endif  /* (CY_PSOC5A) */
2372   2              
2373   2              CyVdLvDigitDisable();
2374   2          }
2375   1          else
2376   1          {
2377   2              cyPmBackup.lvidEn = CY_PM_DISABLED;
2378   2          }
2379   1      
2380   1          if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVIA_EN))
2381   1          {
2382   2              cyPmBackup.lviaEn = CY_PM_ENABLED;
2383   2              cyPmBackup.lviaTrip = CY_VD_LVI_TRIP_REG >> 4u;
2384   2              
2385   2              /* Save state of reset device at a specified Vdda threshold */
2386   2              #if(CY_PSOC5A)
              
                          /* Not applicable PSoC 5 */
                          cyPmBackup.lviaRst = CY_PM_DISABLED;
              
                      #else
2392   2      
2393   2                  cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
2394   2                                          CY_PM_DISABLED : CY_PM_ENABLED;
2395   2      
2396   2              #endif  /* (CY_PSOC5A) */
2397   2              
2398   2              CyVdLvAnalogDisable();
2399   2          }
2400   1          else
2401   1          {
2402   2              cyPmBackup.lviaEn = CY_PM_DISABLED;
2403   2          }
2404   1      
2405   1          if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_HVIA_EN))
2406   1          {
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 40  

2407   2              cyPmBackup.hviaEn = CY_PM_ENABLED;
2408   2              CyVdHvAnalogDisable();
2409   2          }
2410   1          else
2411   1          {
2412   2              cyPmBackup.hviaEn = CY_PM_DISABLED;
2413   2          }
2414   1      }
2415          
2416          
2417          /*******************************************************************************
2418          * Function Name: CyPmHviLviRestore
2419          ********************************************************************************
2420          *
2421          * Summary:
2422          *  Restores analog and digital LVI and HVI configuration.
2423          *
2424          * Parameters:
2425          *  None
2426          *
2427          * Return:
2428          *  None
2429          *
2430          * Reentrant:
2431          *  No
2432          *
2433          *******************************************************************************/
2434          static void CyPmHviLviRestore(void) 
2435          {
2436   1          /* Restore LVI/HVI configuration */
2437   1          if(CY_PM_ENABLED == cyPmBackup.lvidEn)
2438   1          {
2439   2              CyVdLvDigitEnable(cyPmBackup.lvidRst, cyPmBackup.lvidTrip);
2440   2          }
2441   1      
2442   1          if(CY_PM_ENABLED == cyPmBackup.lviaEn)
2443   1          {
2444   2              CyVdLvAnalogEnable(cyPmBackup.lviaRst, cyPmBackup.lviaTrip);
2445   2          }
2446   1      
2447   1          if(CY_PM_ENABLED == cyPmBackup.hviaEn)
2448   1          {
2449   2              CyVdHvAnalogEnable();
2450   2          }
2451   1      }
2452          
2453          
2454          /* [] END OF FILE */
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 41  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION CyPmSaveClocks (BEGIN)
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 94
0000 9043A1            MOV     DPTR,#043A1H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 540F              ANL     A,#0FH
0008 FF                MOV     R7,A
0009 900000      R     MOV     DPTR,#cyPmClockBackup
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 95
000E 9043A2            MOV     DPTR,#043A2H
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900000      R     MOV     DPTR,#cyPmClockBackup+01H
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
0018 9043A1            MOV     DPTR,#043A1H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 54F0              ANL     A,#0F0H
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
0023 9043A2            MOV     DPTR,#043A2H
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5400              ANL     A,#00H
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
002E 904800            MOV     DPTR,#04800H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 54C0              ANL     A,#0C0H
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#cyPmClockBackup+05H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
003C 7F2D              MOV     R7,#02DH
003E 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 104
0041 904200            MOV     DPTR,#04200H
0044 E0                MOVX    A,@DPTR
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 5407              ANL     A,#07H
0049 FF                MOV     R7,A
004A 900000      R     MOV     DPTR,#cyPmClockBackup+03H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 42  

004D EF                MOV     A,R7
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 105
004F 904200            MOV     DPTR,#04200H
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 5440              ANL     A,#040H
0057 FF                MOV     R7,A
0058 900000      R     MOV     DPTR,#cyPmClockBackup+04H
005B EF                MOV     A,R7
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
005D 904200            MOV     DPTR,#04200H
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 5410              ANL     A,#010H
0065 FF                MOV     R7,A
0066 7E00              MOV     R6,#00H
0068 EF                MOV     A,R7
0069 4E                ORL     A,R6
006A 6008              JZ      ?C0001
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 111
006C 900000      R     MOV     DPTR,#cyPmClockBackup+09H
006F 7401              MOV     A,#01H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
0072 8005              SJMP    ?C0002
0074         ?C0001:
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 116
0074 900000      R     MOV     DPTR,#cyPmClockBackup+09H
0077 E4                CLR     A
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
0079         ?C0002:
                                           ; SOURCE LINE # 120
0079 7F04              MOV     R7,#04H
007B 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 123
007E 9043A0            MOV     DPTR,#043A0H
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 EF                MOV     A,R7
0084 5410              ANL     A,#010H
0086 FF                MOV     R7,A
0087 7E00              MOV     R6,#00H
0089 EF                MOV     A,R7
008A 4E                ORL     A,R6
008B 6008              JZ      ?C0003
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 126
008D 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0090 7401              MOV     A,#01H
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0093 800A              SJMP    ?C0004
0095         ?C0003:
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 131
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 43  

0095 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0098 E4                CLR     A
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
009A 7F00              MOV     R7,#00H
009C 120000      E     LCALL   _CyIMO_Start
                                           ; SOURCE LINE # 135
009F         ?C0004:
                                           ; SOURCE LINE # 138
009F 904200            MOV     DPTR,#04200H
00A2 E0                MOVX    A,@DPTR
00A3 FF                MOV     R7,A
00A4 EF                MOV     A,R7
00A5 5420              ANL     A,#020H
00A7 FF                MOV     R7,A
00A8 7E00              MOV     R6,#00H
00AA EF                MOV     A,R7
00AB 4E                ORL     A,R6
00AC 6021              JZ      ?C0005
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 142
00AE 904000            MOV     DPTR,#04000H
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 EF                MOV     A,R7
00B4 5440              ANL     A,#040H
00B6 FF                MOV     R7,A
00B7 7E00              MOV     R6,#00H
00B9 EF                MOV     A,R7
00BA 4E                ORL     A,R6
00BB 7004              JNZ     ?C0006
00BD 7F02              MOV     R7,#02H
00BF 8002              SJMP    ?C0007
00C1         ?C0006:
00C1 7F01              MOV     R7,#01H
00C3         ?C0007:
00C3 900000      R     MOV     DPTR,#cyPmClockBackup+07H
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
00C8 7F00              MOV     R7,#00H
00CA 120000      E     LCALL   _CyIMO_SetSource
                                           ; SOURCE LINE # 146
00CD 8005              SJMP    ?C0008
00CF         ?C0005:
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 150
00CF 900000      R     MOV     DPTR,#cyPmClockBackup+07H
00D2 E4                CLR     A
00D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
00D4         ?C0008:
                                           ; SOURCE LINE # 154
00D4 904000            MOV     DPTR,#04000H
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 EF                MOV     A,R7
00DA 5430              ANL     A,#030H
00DC FF                MOV     R7,A
00DD 900000      R     MOV     DPTR,#cyPmClockBackup+08H
00E0 EF                MOV     A,R7
00E1 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 44  

                                           ; SOURCE LINE # 157
00E2 900000      R     MOV     DPTR,#cyPmClockBackup+08H
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 EF                MOV     A,R7
00E8 600B              JZ      ?C0009
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 160
00EA 904000            MOV     DPTR,#04000H
00ED E0                MOVX    A,@DPTR
00EE FF                MOV     R7,A
00EF EF                MOV     A,R7
00F0 54CF              ANL     A,#0CFH
00F2 FF                MOV     R7,A
00F3 EF                MOV     A,R7
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
00F5         ?C0009:
                                           ; SOURCE LINE # 165
00F5 904200            MOV     DPTR,#04200H
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 5410              ANL     A,#010H
00FD FF                MOV     R7,A
00FE 7E00              MOV     R6,#00H
0100 EF                MOV     A,R7
0101 4E                ORL     A,R6
0102 6003              JZ      ?C0010
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
0104 120000      E     LCALL   CyIMO_DisableDoubler
                                           ; SOURCE LINE # 168
0107         ?C0010:
                                           ; SOURCE LINE # 171
0107 904004            MOV     DPTR,#04004H
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
010F EF                MOV     A,R7
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
0111 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116 EF                MOV     A,R7
0117 6005              JZ      ?C0011
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
0119 7F00              MOV     R7,#00H
011B 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 175
011E         ?C0011:
                                           ; SOURCE LINE # 178
011E 904005            MOV     DPTR,#04005H
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 EF                MOV     A,R7
0124 5403              ANL     A,#03H
0126 FF                MOV     R7,A
0127 900000      R     MOV     DPTR,#cyPmClockBackup+02H
012A EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 45  

012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
012C 900000      R     MOV     DPTR,#cyPmClockBackup+02H
012F E0                MOVX    A,@DPTR
0130 FF                MOV     R7,A
0131 EF                MOV     A,R7
0132 6005              JZ      ?C0012
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0134 7F00              MOV     R7,#00H
0136 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 184
0139         ?C0012:
                                           ; SOURCE LINE # 187
0139 904007            MOV     DPTR,#04007H
013C E0                MOVX    A,@DPTR
013D FF                MOV     R7,A
013E 7E00              MOV     R6,#00H
0140 EF                MOV     A,R7
0141 7F00              MOV     R7,#00H
0143 FE                MOV     R6,A
0144 904006            MOV     DPTR,#04006H
0147 E0                MOVX    A,@DPTR
0148 FD                MOV     R5,A
0149 7C00              MOV     R4,#00H
014B EE                MOV     A,R6
014C 4C                ORL     A,R4
014D FE                MOV     R6,A
014E EF                MOV     A,R7
014F 4D                ORL     A,R5
0150 FF                MOV     R7,A
0151 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
0154 EE                MOV     A,R6
0155 F0                MOVX    @DPTR,A
0156 A3                INC     DPTR
0157 EF                MOV     A,R7
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
0159 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
015C E0                MOVX    A,@DPTR
015D FE                MOV     R6,A
015E A3                INC     DPTR
015F E0                MOVX    A,@DPTR
0160 FF                MOV     R7,A
0161 EF                MOV     A,R7
0162 4E                ORL     A,R6
0163 6007              JZ      ?C0013
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
0165 7F00              MOV     R7,#00H
0167 7E00              MOV     R6,#00H
0169 120000      E     LCALL   _CyBusClk_SetDivider
                                           ; SOURCE LINE # 191
016C         ?C0013:
                                           ; SOURCE LINE # 194
016C 904005            MOV     DPTR,#04005H
016F E0                MOVX    A,@DPTR
0170 FF                MOV     R7,A
0171 EF                MOV     A,R7
0172 54F0              ANL     A,#0F0H
0174 FF                MOV     R7,A
0175 7E00              MOV     R6,#00H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 46  

0177 EE                MOV     A,R6
0178 C4                SWAP    A
0179 F8                MOV     R0,A
017A 54F0              ANL     A,#0F0H
017C C8                XCH     A,R0
017D 68                XRL     A,R0
017E FE                MOV     R6,A
017F EF                MOV     A,R7
0180 C4                SWAP    A
0181 540F              ANL     A,#0FH
0183 48                ORL     A,R0
0184 FF                MOV     R7,A
0185 EF                MOV     A,R7
0186 2401              ADD     A,#01H
0188 FD                MOV     R5,A
0189 EE                MOV     A,R6
018A 3400              ADDC    A,#00H
018C FC                MOV     R4,A
018D 904200            MOV     DPTR,#04200H
0190 E0                MOVX    A,@DPTR
0191 FF                MOV     R7,A
0192 EF                MOV     A,R7
0193 5407              ANL     A,#07H
0195 FF                MOV     R7,A
0196 EF                MOV     A,R7
0197 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
019A 93                MOVC    A,@A+DPTR
019B FF                MOV     R7,A
019C 7E00              MOV     R6,#00H
019E 120000      E     LCALL   ?C?UIDIV
01A1 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 197
01A4 904220            MOV     DPTR,#04220H
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
01AA 5401              ANL     A,#01H
01AC FF                MOV     R7,A
01AD 7E00              MOV     R6,#00H
01AF EF                MOV     A,R7
01B0 4E                ORL     A,R6
01B1 600B              JZ      ?C0014
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 200
01B3 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01B6 7401              MOV     A,#01H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
01B9 120000      E     LCALL   CyPLL_OUT_Stop
                                           ; SOURCE LINE # 202
01BC 8005              SJMP    ?C0015
01BE         ?C0014:
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 206
01BE 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01C1 E4                CLR     A
01C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
01C3         ?C0015:
                                           ; SOURCE LINE # 210
01C3 904210            MOV     DPTR,#04210H
01C6 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 47  

01C7 FF                MOV     R7,A
01C8 EF                MOV     A,R7
01C9 5401              ANL     A,#01H
01CB FF                MOV     R7,A
01CC 7E00              MOV     R6,#00H
01CE EF                MOV     A,R7
01CF 4E                ORL     A,R6
01D0 600A              JZ      ?C0016
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 213
01D2 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
01D5 7401              MOV     A,#01H
01D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
01D8 120000      E     LCALL   CyXTAL_Stop
                                           ; SOURCE LINE # 215
01DB 22                RET     
01DC         ?C0016:
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 219
01DC 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
01DF E4                CLR     A
01E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
01E1         ?C0018:
01E1 22                RET     
             ; FUNCTION CyPmSaveClocks (END)

             ; FUNCTION CyPmRestoreClocks (BEGIN)
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 255
0000 900000      R     MOV     DPTR,#status
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
0006 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B EF                MOV     A,R7
000C 6401              XRL     A,#01H
000E 6003              JZ      $ + 5H
0010 020000      R     LJMP    ?C0019
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 278
0013 7F00              MOV     R7,#00H
0015 120000      E     LCALL   _CyXTAL_Start
                                           ; SOURCE LINE # 288
0018 904210            MOV     DPTR,#04210H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
                                           ; SOURCE LINE # 291
001D 900000      R     MOV     DPTR,#i
0020 E4                CLR     A
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 7405              MOV     A,#05H
0025 F0                MOVX    @DPTR,A
0026         ?C0020:
0026 900000      R     MOV     DPTR,#i
0029 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 48  

002A FE                MOV     R6,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E D3                SETB    C
002F EF                MOV     A,R7
0030 9400              SUBB    A,#00H
0032 EE                MOV     A,R6
0033 9400              SUBB    A,#00H
0035 4065              JC      ?C0021
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 294
0037 904005            MOV     DPTR,#04005H
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C EF                MOV     A,R7
003D 54F0              ANL     A,#0F0H
003F FF                MOV     R7,A
0040 7E00              MOV     R6,#00H
0042 EE                MOV     A,R6
0043 C4                SWAP    A
0044 F8                MOV     R0,A
0045 54F0              ANL     A,#0F0H
0047 C8                XCH     A,R0
0048 68                XRL     A,R0
0049 FE                MOV     R6,A
004A EF                MOV     A,R7
004B C4                SWAP    A
004C 540F              ANL     A,#0FH
004E 48                ORL     A,R0
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 2401              ADD     A,#01H
0053 FD                MOV     R5,A
0054 EE                MOV     A,R6
0055 3400              ADDC    A,#00H
0057 FC                MOV     R4,A
0058 904200            MOV     DPTR,#04200H
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D EF                MOV     A,R7
005E 5407              ANL     A,#07H
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
0065 93                MOVC    A,@A+DPTR
0066 FF                MOV     R7,A
0067 7E00              MOV     R6,#00H
0069 120000      E     LCALL   ?C?UIDIV
006C 7C00              MOV     R4,#00H
006E 7DC8              MOV     R5,#0C8H
0070 120000      E     LCALL   ?C?IMUL
0073 E4                CLR     A
0074 FC                MOV     R4,A
0075 FD                MOV     R5,A
0076 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 297
0079 904210            MOV     DPTR,#04210H
007C E0                MOVX    A,@DPTR
007D FF                MOV     R7,A
007E EF                MOV     A,R7
007F 5480              ANL     A,#080H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 49  

0081 FF                MOV     R7,A
0082 7E00              MOV     R6,#00H
0084 EF                MOV     A,R7
0085 4E                ORL     A,R6
0086 7007              JNZ     ?C0022
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
0088 900000      R     MOV     DPTR,#status
008B E4                CLR     A
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 300
008D 800D              SJMP    ?C0021
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
008F         ?C0022:
008F 900000      R     MOV     DPTR,#i
0092 74FF              MOV     A,#0FFH
0094 75F0FF            MOV     B,#0FFH
0097 120000      E     LCALL   ?C?IILDX
009A 808A              SJMP    ?C0020
009C         ?C0021:
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 318
009C         ?C0019:
                                           ; SOURCE LINE # 322
009C 7F2D              MOV     R7,#02DH
009E 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 325
00A1 900000      R     MOV     DPTR,#cyPmClockBackup+02H
00A4 E0                MOVX    A,@DPTR
00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 6402              XRL     A,#02H
00A9 6009              JZ      ?C0026
00AB 900000      R     MOV     DPTR,#cyPmClockBackup+02H
00AE E0                MOVX    A,@DPTR
00AF FF                MOV     R7,A
00B0 EF                MOV     A,R7
00B1 B4031E            CJNE    A,#03H,?C0025
00B4         ?C0026:
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 329
00B4 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 904004            MOV     DPTR,#04004H
00BC E0                MOVX    A,@DPTR
00BD FE                MOV     R6,A
00BE EE                MOV     A,R6
00BF 6F                XRL     A,R7
00C0 6008              JZ      ?C0027
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 332
00C2 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
00C5 E0                MOVX    A,@DPTR
00C6 FF                MOV     R7,A
00C7 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 333
00CA         ?C0027:
                                           ; SOURCE LINE # 336
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 50  

00CA 900000      R     MOV     DPTR,#cyPmClockBackup+02H
00CD E0                MOVX    A,@DPTR
00CE FF                MOV     R7,A
00CF 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 337
00D2         ?C0025:
                                           ; SOURCE LINE # 340
00D2 900000      R     MOV     DPTR,#cyPmClockBackup+04H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 EF                MOV     A,R7
00D8 5440              ANL     A,#040H
00DA FF                MOV     R7,A
00DB 7E00              MOV     R6,#00H
00DD EF                MOV     A,R7
00DE 4E                ORL     A,R6
00DF 6016              JZ      ?C0028
00E1 900000      R     MOV     DPTR,#cyPmClockBackup+03H
00E4 E0                MOVX    A,@DPTR
00E5 FF                MOV     R7,A
00E6 EF                MOV     A,R7
00E7 900000      R     MOV     DPTR,#cyPmImoFreqMhz2Reg
00EA 93                MOVC    A,@A+DPTR
00EB FF                MOV     R7,A
00EC EF                MOV     A,R7
00ED B40307            CJNE    A,#03H,?C0028
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 344
00F0 7F08              MOV     R7,#08H
00F2 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 345
00F5 8035              SJMP    ?C0029
00F7         ?C0028:
                                           ; SOURCE LINE # 347
                                           ; SOURCE LINE # 349
00F7 900000      R     MOV     DPTR,#cyPmClockBackup+03H
00FA E0                MOVX    A,@DPTR
00FB FF                MOV     R7,A
00FC EF                MOV     A,R7
00FD 900000      R     MOV     DPTR,#cyPmImoFreqMhz2Reg
0100 93                MOVC    A,@A+DPTR
0101 FF                MOV     R7,A
0102 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 351
0105 900000      R     MOV     DPTR,#cyPmClockBackup+04H
0108 E0                MOVX    A,@DPTR
0109 FF                MOV     R7,A
010A EF                MOV     A,R7
010B 5440              ANL     A,#040H
010D FF                MOV     R7,A
010E 7E00              MOV     R6,#00H
0110 EF                MOV     A,R7
0111 4E                ORL     A,R6
0112 600D              JZ      ?C0030
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
0114 904200            MOV     DPTR,#04200H
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
0119 EF                MOV     A,R7
011A 4440              ORL     A,#040H
011C FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 51  

011D EF                MOV     A,R7
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 354
011F 800B              SJMP    ?C0029
0121         ?C0030:
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0121 904200            MOV     DPTR,#04200H
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 EF                MOV     A,R7
0127 54BF              ANL     A,#0BFH
0129 FF                MOV     R7,A
012A EF                MOV     A,R7
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
012C         ?C0029:
                                           ; SOURCE LINE # 363
012C 900000      R     MOV     DPTR,#cyPmClockBackup+06H
012F E0                MOVX    A,@DPTR
0130 FF                MOV     R7,A
0131 EF                MOV     A,R7
0132 B40114            CJNE    A,#01H,?C0032
0135 9043A0            MOV     DPTR,#043A0H
0138 E0                MOVX    A,@DPTR
0139 FF                MOV     R7,A
013A EF                MOV     A,R7
013B 5410              ANL     A,#010H
013D FF                MOV     R7,A
013E 7E00              MOV     R6,#00H
0140 EF                MOV     A,R7
0141 4E                ORL     A,R6
0142 7005              JNZ     ?C0032
                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 366
0144 7F00              MOV     R7,#00H
0146 120000      E     LCALL   _CyIMO_Start
                                           ; SOURCE LINE # 367
0149         ?C0032:
                                           ; SOURCE LINE # 371
0149 900000      R     MOV     DPTR,#cyPmClockBackup+06H
014C E0                MOVX    A,@DPTR
014D FF                MOV     R7,A
014E EF                MOV     A,R7
014F 7012              JNZ     ?C0033
0151 9043A0            MOV     DPTR,#043A0H
0154 E0                MOVX    A,@DPTR
0155 FF                MOV     R7,A
0156 EF                MOV     A,R7
0157 5410              ANL     A,#010H
0159 FF                MOV     R7,A
015A 7E00              MOV     R6,#00H
015C EF                MOV     A,R7
015D 4E                ORL     A,R6
015E 6003              JZ      ?C0033
                                           ; SOURCE LINE # 372
                                           ; SOURCE LINE # 373
0160 120000      E     LCALL   CyIMO_Stop
                                           ; SOURCE LINE # 374
0163         ?C0033:
                                           ; SOURCE LINE # 377
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 52  

0163 900000      R     MOV     DPTR,#cyPmClockBackup+07H
0166 E0                MOVX    A,@DPTR
0167 FF                MOV     R7,A
0168 120000      E     LCALL   _CyIMO_SetSource
                                           ; SOURCE LINE # 380
016B 900000      R     MOV     DPTR,#cyPmClockBackup+09H
016E E0                MOVX    A,@DPTR
016F FF                MOV     R7,A
0170 EF                MOV     A,R7
0171 B40103            CJNE    A,#01H,?C0034
                                           ; SOURCE LINE # 381
                                           ; SOURCE LINE # 382
0174 120000      E     LCALL   CyIMO_EnableDoubler
                                           ; SOURCE LINE # 383
0177         ?C0034:
                                           ; SOURCE LINE # 386
0177 904000            MOV     DPTR,#04000H
017A E0                MOVX    A,@DPTR
017B FF                MOV     R7,A
017C EF                MOV     A,R7
017D 5430              ANL     A,#030H
017F FF                MOV     R7,A
0180 7E00              MOV     R6,#00H
0182 900000      R     MOV     DPTR,#cyPmClockBackup+08H
0185 E0                MOVX    A,@DPTR
0186 FD                MOV     R5,A
0187 7C00              MOV     R4,#00H
0189 ED                MOV     A,R5
018A 6F                XRL     A,R7
018B 7002              JNZ     ?C0127
018D EC                MOV     A,R4
018E 6E                XRL     A,R6
018F         ?C0127:
018F 6016              JZ      ?C0035
                                           ; SOURCE LINE # 387
                                           ; SOURCE LINE # 388
0191 904000            MOV     DPTR,#04000H
0194 E0                MOVX    A,@DPTR
0195 FF                MOV     R7,A
0196 EF                MOV     A,R7
0197 54CF              ANL     A,#0CFH
0199 FF                MOV     R7,A
019A 900000      R     MOV     DPTR,#cyPmClockBackup+08H
019D E0                MOVX    A,@DPTR
019E FE                MOV     R6,A
019F EF                MOV     A,R7
01A0 4E                ORL     A,R6
01A1 FF                MOV     R7,A
01A2 904000            MOV     DPTR,#04000H
01A5 EF                MOV     A,R7
01A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 390
01A7         ?C0035:
                                           ; SOURCE LINE # 393
01A7 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01AA E0                MOVX    A,@DPTR
01AB FF                MOV     R7,A
01AC EF                MOV     A,R7
01AD 6401              XRL     A,#01H
01AF 7047              JNZ     ?C0036
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 403
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 53  

01B1 7F00              MOV     R7,#00H
01B3 120000      E     LCALL   _CyPLL_OUT_Start
                                           ; SOURCE LINE # 406
01B6 904005            MOV     DPTR,#04005H
01B9 E0                MOVX    A,@DPTR
01BA FF                MOV     R7,A
01BB EF                MOV     A,R7
01BC 54F0              ANL     A,#0F0H
01BE FF                MOV     R7,A
01BF 7E00              MOV     R6,#00H
01C1 EE                MOV     A,R6
01C2 C4                SWAP    A
01C3 F8                MOV     R0,A
01C4 54F0              ANL     A,#0F0H
01C6 C8                XCH     A,R0
01C7 68                XRL     A,R0
01C8 FE                MOV     R6,A
01C9 EF                MOV     A,R7
01CA C4                SWAP    A
01CB 540F              ANL     A,#0FH
01CD 48                ORL     A,R0
01CE FF                MOV     R7,A
01CF EF                MOV     A,R7
01D0 2401              ADD     A,#01H
01D2 FD                MOV     R5,A
01D3 EE                MOV     A,R6
01D4 3400              ADDC    A,#00H
01D6 FC                MOV     R4,A
01D7 904200            MOV     DPTR,#04200H
01DA E0                MOVX    A,@DPTR
01DB FF                MOV     R7,A
01DC EF                MOV     A,R7
01DD 5407              ANL     A,#07H
01DF FF                MOV     R7,A
01E0 EF                MOV     A,R7
01E1 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
01E4 93                MOVC    A,@A+DPTR
01E5 FF                MOV     R7,A
01E6 7E00              MOV     R6,#00H
01E8 120000      E     LCALL   ?C?UIDIV
01EB 7C00              MOV     R4,#00H
01ED 7DFA              MOV     R5,#0FAH
01EF 120000      E     LCALL   ?C?IMUL
01F2 E4                CLR     A
01F3 FC                MOV     R4,A
01F4 FD                MOV     R5,A
01F5 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 407
01F8         ?C0036:
                                           ; SOURCE LINE # 411
01F8 900000      R     MOV     DPTR,#cyPmClockBackup+02H
01FB E0                MOVX    A,@DPTR
01FC FF                MOV     R7,A
01FD EF                MOV     A,R7
01FE 6009              JZ      ?C0038
0200 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0203 E0                MOVX    A,@DPTR
0204 FF                MOV     R7,A
0205 EF                MOV     A,R7
0206 B4011E            CJNE    A,#01H,?C0037
0209         ?C0038:
                                           ; SOURCE LINE # 413
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 54  

                                           ; SOURCE LINE # 415
0209 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
020C E0                MOVX    A,@DPTR
020D FF                MOV     R7,A
020E 904004            MOV     DPTR,#04004H
0211 E0                MOVX    A,@DPTR
0212 FE                MOV     R6,A
0213 EE                MOV     A,R6
0214 6F                XRL     A,R7
0215 6008              JZ      ?C0039
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
0217 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
021A E0                MOVX    A,@DPTR
021B FF                MOV     R7,A
021C 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 418
021F         ?C0039:
                                           ; SOURCE LINE # 421
021F 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0222 E0                MOVX    A,@DPTR
0223 FF                MOV     R7,A
0224 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 422
0227         ?C0037:
                                           ; SOURCE LINE # 425
0227 904007            MOV     DPTR,#04007H
022A E0                MOVX    A,@DPTR
022B FF                MOV     R7,A
022C 7E00              MOV     R6,#00H
022E EF                MOV     A,R7
022F 7F00              MOV     R7,#00H
0231 FE                MOV     R6,A
0232 904006            MOV     DPTR,#04006H
0235 E0                MOVX    A,@DPTR
0236 FD                MOV     R5,A
0237 7C00              MOV     R4,#00H
0239 EE                MOV     A,R6
023A 4C                ORL     A,R4
023B FE                MOV     R6,A
023C EF                MOV     A,R7
023D 4D                ORL     A,R5
023E FF                MOV     R7,A
023F 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
0242 E0                MOVX    A,@DPTR
0243 FC                MOV     R4,A
0244 A3                INC     DPTR
0245 E0                MOVX    A,@DPTR
0246 FD                MOV     R5,A
0247 EF                MOV     A,R7
0248 6D                XRL     A,R5
0249 7002              JNZ     ?C0128
024B EE                MOV     A,R6
024C 6C                XRL     A,R4
024D         ?C0128:
024D 600B              JZ      ?C0040
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
024F 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
0252 E0                MOVX    A,@DPTR
0253 FE                MOV     R6,A
0254 A3                INC     DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 55  

0255 E0                MOVX    A,@DPTR
0256 FF                MOV     R7,A
0257 120000      E     LCALL   _CyBusClk_SetDivider
                                           ; SOURCE LINE # 428
025A         ?C0040:
                                           ; SOURCE LINE # 431
025A 904800            MOV     DPTR,#04800H
025D E0                MOVX    A,@DPTR
025E FF                MOV     R7,A
025F EF                MOV     A,R7
0260 543F              ANL     A,#03FH
0262 FF                MOV     R7,A
0263 900000      R     MOV     DPTR,#cyPmClockBackup+05H
0266 E0                MOVX    A,@DPTR
0267 FE                MOV     R6,A
0268 EF                MOV     A,R7
0269 4E                ORL     A,R6
026A FF                MOV     R7,A
026B 904800            MOV     DPTR,#04800H
026E EF                MOV     A,R7
026F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 435
0270 900000      R     MOV     DPTR,#cyPmClockBackup
0273 E0                MOVX    A,@DPTR
0274 FF                MOV     R7,A
0275 9043A1            MOV     DPTR,#043A1H
0278 EF                MOV     A,R7
0279 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 436
027A 900000      R     MOV     DPTR,#cyPmClockBackup+01H
027D E0                MOVX    A,@DPTR
027E FF                MOV     R7,A
027F 9043A2            MOV     DPTR,#043A2H
0282 EF                MOV     A,R7
0283 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 437
0284 22                RET     
             ; FUNCTION CyPmRestoreClocks (END)

             ; FUNCTION _CyPmAltAct (BEGIN)
                                           ; SOURCE LINE # 603
0000 900000      R     MOV     DPTR,#wakeupTime
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 900000      R     MOV     DPTR,#wakeupSource
000B EC                MOV     A,R4
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E ED                MOV     A,R5
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
                                           ; SOURCE LINE # 629
0010 900000      R     MOV     DPTR,#wakeupTime
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 C3                CLR     C
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 56  

0019 EF                MOV     A,R7
001A 940F              SUBB    A,#0FH
001C EE                MOV     A,R6
001D 9400              SUBB    A,#00H
001F 4038              JC      ?C0042
0021 900000      R     MOV     DPTR,#wakeupTime
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 D3                SETB    C
002A EF                MOV     A,R7
002B 940E              SUBB    A,#0EH
002D EE                MOV     A,R6
002E 9401              SUBB    A,#01H
0030 5027              JNC     ?C0042
                                           ; SOURCE LINE # 630
                                           ; SOURCE LINE # 631
0032 900000      R     MOV     DPTR,#wakeupTime
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 24F2              ADD     A,#0F2H
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 54FF              ANL     A,#0FFH
0041 FF                MOV     R7,A
0042 120000      R     LCALL   _CyPmFtwSetInterval
                                           ; SOURCE LINE # 634
0045 900000      R     MOV     DPTR,#wakeupSource
0048 E0                MOVX    A,@DPTR
0049 FE                MOV     R6,A
004A A3                INC     DPTR
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
004D EE                MOV     A,R6
004E 4404              ORL     A,#04H
0050 FE                MOV     R6,A
0051 900000      R     MOV     DPTR,#wakeupSource
0054 EE                MOV     A,R6
0055 F0                MOVX    @DPTR,A
0056 A3                INC     DPTR
0057 EF                MOV     A,R7
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
0059         ?C0042:
                                           ; SOURCE LINE # 638
0059 900000      R     MOV     DPTR,#wakeupTime
005C E0                MOVX    A,@DPTR
005D FE                MOV     R6,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 C3                CLR     C
0062 EF                MOV     A,R7
0063 9402              SUBB    A,#02H
0065 EE                MOV     A,R6
0066 9400              SUBB    A,#00H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 57  

0068 4037              JC      ?C0043
006A 900000      R     MOV     DPTR,#wakeupTime
006D E0                MOVX    A,@DPTR
006E FE                MOV     R6,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 D3                SETB    C
0073 EF                MOV     A,R7
0074 940D              SUBB    A,#0DH
0076 EE                MOV     A,R6
0077 9400              SUBB    A,#00H
0079 5026              JNC     ?C0043
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 641
007B 900000      R     MOV     DPTR,#wakeupTime
007E E0                MOVX    A,@DPTR
007F FE                MOV     R6,A
0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 EF                MOV     A,R7
0084 14                DEC     A
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 540F              ANL     A,#0FH
0089 FF                MOV     R7,A
008A 120000      R     LCALL   _CyPmCtwSetInterval
                                           ; SOURCE LINE # 644
008D 900000      R     MOV     DPTR,#wakeupSource
0090 E0                MOVX    A,@DPTR
0091 FE                MOV     R6,A
0092 A3                INC     DPTR
0093 E0                MOVX    A,@DPTR
0094 FF                MOV     R7,A
0095 EE                MOV     A,R6
0096 4408              ORL     A,#08H
0098 FE                MOV     R6,A
0099 900000      R     MOV     DPTR,#wakeupSource
009C EE                MOV     A,R6
009D F0                MOVX    @DPTR,A
009E A3                INC     DPTR
009F EF                MOV     A,R7
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
00A1         ?C0043:
                                           ; SOURCE LINE # 648
00A1 900000      R     MOV     DPTR,#wakeupTime
00A4 E0                MOVX    A,@DPTR
00A5 FE                MOV     R6,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA 6401              XRL     A,#01H
00AC 4E                ORL     A,R6
00AD 7017              JNZ     ?C0044
                                           ; SOURCE LINE # 649
                                           ; SOURCE LINE # 651
00AF 120000      R     LCALL   CyPmOppsSet
                                           ; SOURCE LINE # 654
00B2 900000      R     MOV     DPTR,#wakeupSource
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 58  

00B5 E0                MOVX    A,@DPTR
00B6 FE                MOV     R6,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EE                MOV     A,R6
00BB 4408              ORL     A,#08H
00BD FE                MOV     R6,A
00BE 900000      R     MOV     DPTR,#wakeupSource
00C1 EE                MOV     A,R6
00C2 F0                MOVX    @DPTR,A
00C3 A3                INC     DPTR
00C4 EF                MOV     A,R7
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 655
00C6         ?C0044:
                                           ; SOURCE LINE # 665
00C6 904398            MOV     DPTR,#04398H
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
00CB 900000      R     MOV     DPTR,#cyPmBackup+07H
00CE EF                MOV     A,R7
00CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 666
00D0 900000      R     MOV     DPTR,#wakeupSource
00D3 E0                MOVX    A,@DPTR
00D4 FE                MOV     R6,A
00D5 A3                INC     DPTR
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 EE                MOV     A,R6
00D9 C4                SWAP    A
00DA F8                MOV     R0,A
00DB 54F0              ANL     A,#0F0H
00DD C8                XCH     A,R0
00DE 68                XRL     A,R0
00DF FE                MOV     R6,A
00E0 EF                MOV     A,R7
00E1 C4                SWAP    A
00E2 540F              ANL     A,#0FH
00E4 48                ORL     A,R0
00E5 FF                MOV     R7,A
00E6 904398            MOV     DPTR,#04398H
00E9 EF                MOV     A,R7
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 669
00EB 904399            MOV     DPTR,#04399H
00EE E0                MOVX    A,@DPTR
00EF FF                MOV     R7,A
00F0 900000      R     MOV     DPTR,#cyPmBackup+08H
00F3 EF                MOV     A,R7
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 670
00F5 900000      R     MOV     DPTR,#wakeupSource
00F8 E0                MOVX    A,@DPTR
00F9 FE                MOV     R6,A
00FA A3                INC     DPTR
00FB E0                MOVX    A,@DPTR
00FC FF                MOV     R7,A
00FD EF                MOV     A,R7
00FE 540F              ANL     A,#0FH
0100 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 59  

0101 904399            MOV     DPTR,#04399H
0104 EF                MOV     A,R7
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 673
0106 90439A            MOV     DPTR,#0439AH
0109 E0                MOVX    A,@DPTR
010A FF                MOV     R7,A
010B 900000      R     MOV     DPTR,#cyPmBackup+09H
010E EF                MOV     A,R7
010F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 674
0110 900000      R     MOV     DPTR,#wakeupSource
0113 E0                MOVX    A,@DPTR
0114 FE                MOV     R6,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 EE                MOV     A,R6
0119 C4                SWAP    A
011A 540F              ANL     A,#0FH
011C FF                MOV     R7,A
011D 7E00              MOV     R6,#00H
011F EF                MOV     A,R7
0120 5401              ANL     A,#01H
0122 FF                MOV     R7,A
0123 90439A            MOV     DPTR,#0439AH
0126 EF                MOV     A,R7
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 680
0128 904393            MOV     DPTR,#04393H
012B E0                MOVX    A,@DPTR
012C FF                MOV     R7,A
012D EF                MOV     A,R7
012E 54F8              ANL     A,#0F8H
0130 FF                MOV     R7,A
0131 EF                MOV     A,R7
0132 4401              ORL     A,#01H
0134 FF                MOV     R7,A
0135 904393            MOV     DPTR,#04393H
0138 EF                MOV     A,R7
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 683
013A 904393            MOV     DPTR,#04393H
013D E0                MOVX    A,@DPTR
013E FF                MOV     R7,A
                                           ; SOURCE LINE # 686
013F 00                NOP     
                                           ; SOURCE LINE # 687
0140 00                NOP     
                                           ; SOURCE LINE # 697
0141 900000      R     MOV     DPTR,#cyPmBackup+07H
0144 E0                MOVX    A,@DPTR
0145 FF                MOV     R7,A
0146 904398            MOV     DPTR,#04398H
0149 EF                MOV     A,R7
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 698
014B 900000      R     MOV     DPTR,#cyPmBackup+08H
014E E0                MOVX    A,@DPTR
014F FF                MOV     R7,A
0150 904399            MOV     DPTR,#04399H
0153 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 60  

0154 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
0155 900000      R     MOV     DPTR,#cyPmBackup+09H
0158 E0                MOVX    A,@DPTR
0159 FF                MOV     R7,A
015A 90439A            MOV     DPTR,#0439AH
015D EF                MOV     A,R7
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 702
015F 22                RET     
             ; FUNCTION _CyPmAltAct (END)

             ; FUNCTION _CyPmSleep (BEGIN)
                                           ; SOURCE LINE # 841
0000 900000      R     MOV     DPTR,#wakeupTime
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#wakeupSource
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 842
                                           ; SOURCE LINE # 846
000D 120000      E     LCALL   CyEnterCriticalSection
0010 900000      R     MOV     DPTR,#interruptState
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 857
0015 904393            MOV     DPTR,#04393H
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 5408              ANL     A,#08H
001D FF                MOV     R7,A
001E 7E00              MOV     R6,#00H
0020 EF                MOV     A,R7
0021 4E                ORL     A,R6
0022 700D              JNZ     ?C0046
                                           ; SOURCE LINE # 858
                                           ; SOURCE LINE # 860
0024 904683            MOV     DPTR,#04683H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 541F              ANL     A,#01FH
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 861
002F 8009              SJMP    ?C0047
0031         ?C0046:
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 867
0031 900000      R     MOV     DPTR,#interruptState
0034 E0                MOVX    A,@DPTR
0035 FF                MOV     R7,A
0036 120000      E     LCALL   _CyExitCriticalSection
0039 22                RET     
                                           ; SOURCE LINE # 870
003A         ?C0047:
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 61  

                                           ; SOURCE LINE # 878
003A 9046EC            MOV     DPTR,#046ECH
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 C3                CLR     C
0041 9405              SUBB    A,#05H
0043 5039              JNC     ?C0049
                                           ; SOURCE LINE # 879
                                           ; SOURCE LINE # 880
0045 904689            MOV     DPTR,#04689H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 5401              ANL     A,#01H
004D FF                MOV     R7,A
004E 7E00              MOV     R6,#00H
0050 EF                MOV     A,R7
0051 4E                ORL     A,R6
0052 7003              JNZ     ?C0051
0054 D3                SETB    C
0055 8001              SJMP    ?C0052
0057         ?C0051:
0057 C3                CLR     C
0058         ?C0052:
0058 4024              JC      ?C0049
005A 904689            MOV     DPTR,#04689H
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F EF                MOV     A,R7
0060 5401              ANL     A,#01H
0062 FF                MOV     R7,A
0063 7E00              MOV     R6,#00H
0065 EF                MOV     A,R7
0066 4E                ORL     A,R6
0067 700A              JNZ     ?C0053
0069 7F01              MOV     R7,#01H
006B 7E00              MOV     R6,#00H
006D 7D00              MOV     R5,#00H
006F 7C00              MOV     R4,#00H
0071 8008              SJMP    ?C0054
0073         ?C0053:
0073 7F00              MOV     R7,#00H
0075 7E00              MOV     R6,#00H
0077 7D00              MOV     R5,#00H
0079 7C00              MOV     R4,#00H
007B         ?C0054:
007B 120000      E     LCALL   _?CyHalt
                                           ; SOURCE LINE # 881
007E         ?C0049:
                                           ; SOURCE LINE # 915
007E 120000      R     LCALL   CyPmSlpSaveSet
                                           ; SOURCE LINE # 921
0081 900000      R     MOV     DPTR,#wakeupTime
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 C3                CLR     C
0088 9402              SUBB    A,#02H
008A 402E              JC      ?C0055
008C 900000      R     MOV     DPTR,#wakeupTime
008F E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 62  

0090 FF                MOV     R7,A
0091 EF                MOV     A,R7
0092 D3                SETB    C
0093 940D              SUBB    A,#0DH
0095 5023              JNC     ?C0055
                                           ; SOURCE LINE # 922
                                           ; SOURCE LINE # 924
0097 900000      R     MOV     DPTR,#wakeupTime
009A E0                MOVX    A,@DPTR
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 14                DEC     A
009E FF                MOV     R7,A
009F EF                MOV     A,R7
00A0 540F              ANL     A,#0FH
00A2 FF                MOV     R7,A
00A3 120000      R     LCALL   _CyPmCtwSetInterval
                                           ; SOURCE LINE # 927
00A6 900000      R     MOV     DPTR,#wakeupSource
00A9 E0                MOVX    A,@DPTR
00AA FE                MOV     R6,A
00AB A3                INC     DPTR
00AC E0                MOVX    A,@DPTR
00AD FF                MOV     R7,A
00AE EE                MOV     A,R6
00AF 4408              ORL     A,#08H
00B1 FE                MOV     R6,A
00B2 900000      R     MOV     DPTR,#wakeupSource
00B5 EE                MOV     A,R6
00B6 F0                MOVX    @DPTR,A
00B7 A3                INC     DPTR
00B8 EF                MOV     A,R7
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 928
00BA         ?C0055:
                                           ; SOURCE LINE # 931
00BA 900000      R     MOV     DPTR,#wakeupTime
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF EF                MOV     A,R7
00C0 B40117            CJNE    A,#01H,?C0056
                                           ; SOURCE LINE # 932
                                           ; SOURCE LINE # 934
00C3 120000      R     LCALL   CyPmOppsSet
                                           ; SOURCE LINE # 937
00C6 900000      R     MOV     DPTR,#wakeupSource
00C9 E0                MOVX    A,@DPTR
00CA FE                MOV     R6,A
00CB A3                INC     DPTR
00CC E0                MOVX    A,@DPTR
00CD FF                MOV     R7,A
00CE EE                MOV     A,R6
00CF 4408              ORL     A,#08H
00D1 FE                MOV     R6,A
00D2 900000      R     MOV     DPTR,#wakeupSource
00D5 EE                MOV     A,R6
00D6 F0                MOVX    @DPTR,A
00D7 A3                INC     DPTR
00D8 EF                MOV     A,R7
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 938
00DA         ?C0056:
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 63  

                                           ; SOURCE LINE # 948
00DA 904398            MOV     DPTR,#04398H
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF 900000      R     MOV     DPTR,#cyPmBackup+07H
00E2 EF                MOV     A,R7
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 949
00E4 900000      R     MOV     DPTR,#wakeupSource
00E7 E0                MOVX    A,@DPTR
00E8 FE                MOV     R6,A
00E9 A3                INC     DPTR
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
00EC EE                MOV     A,R6
00ED C4                SWAP    A
00EE F8                MOV     R0,A
00EF 54F0              ANL     A,#0F0H
00F1 C8                XCH     A,R0
00F2 68                XRL     A,R0
00F3 FE                MOV     R6,A
00F4 EF                MOV     A,R7
00F5 C4                SWAP    A
00F6 540F              ANL     A,#0FH
00F8 48                ORL     A,R0
00F9 FF                MOV     R7,A
00FA 904398            MOV     DPTR,#04398H
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 952
00FF 904399            MOV     DPTR,#04399H
0102 E0                MOVX    A,@DPTR
0103 FF                MOV     R7,A
0104 900000      R     MOV     DPTR,#cyPmBackup+08H
0107 EF                MOV     A,R7
0108 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 953
0109 900000      R     MOV     DPTR,#wakeupSource
010C E0                MOVX    A,@DPTR
010D FE                MOV     R6,A
010E A3                INC     DPTR
010F E0                MOVX    A,@DPTR
0110 FF                MOV     R7,A
0111 EF                MOV     A,R7
0112 540F              ANL     A,#0FH
0114 FF                MOV     R7,A
0115 904399            MOV     DPTR,#04399H
0118 EF                MOV     A,R7
0119 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 956
011A 90439A            MOV     DPTR,#0439AH
011D E0                MOVX    A,@DPTR
011E FF                MOV     R7,A
011F 900000      R     MOV     DPTR,#cyPmBackup+09H
0122 EF                MOV     A,R7
0123 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 957
0124 900000      R     MOV     DPTR,#wakeupSource
0127 E0                MOVX    A,@DPTR
0128 FE                MOV     R6,A
0129 A3                INC     DPTR
012A E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 64  

012B FF                MOV     R7,A
012C EE                MOV     A,R6
012D C4                SWAP    A
012E 540F              ANL     A,#0FH
0130 FF                MOV     R7,A
0131 7E00              MOV     R6,#00H
0133 EF                MOV     A,R7
0134 5401              ANL     A,#01H
0136 FF                MOV     R7,A
0137 90439A            MOV     DPTR,#0439AH
013A EF                MOV     A,R7
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 963
013C 904200            MOV     DPTR,#04200H
013F E0                MOVX    A,@DPTR
0140 FF                MOV     R7,A
0141 EF                MOV     A,R7
0142 5407              ANL     A,#07H
0144 FF                MOV     R7,A
0145 7E00              MOV     R6,#00H
0147 EF                MOV     A,R7
0148 4E                ORL     A,R6
0149 7008              JNZ     ?C0057
                                           ; SOURCE LINE # 964
                                           ; SOURCE LINE # 966
014B 900000      R     MOV     DPTR,#cyPmBackup+02EH
014E 7401              MOV     A,#01H
0150 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 967
0151 801E              SJMP    ?C0058
0153         ?C0057:
                                           ; SOURCE LINE # 969
                                           ; SOURCE LINE # 971
0153 900000      R     MOV     DPTR,#cyPmBackup+02EH
0156 E4                CLR     A
0157 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 974
0158 904200            MOV     DPTR,#04200H
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D EF                MOV     A,R7
015E 5407              ANL     A,#07H
0160 FF                MOV     R7,A
0161 900000      R     MOV     DPTR,#cyPmBackup+02DH
0164 EF                MOV     A,R7
0165 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 977
0166 904200            MOV     DPTR,#04200H
0169 E0                MOVX    A,@DPTR
016A FF                MOV     R7,A
016B EF                MOV     A,R7
016C 54F8              ANL     A,#0F8H
016E FF                MOV     R7,A
016F EF                MOV     A,R7
0170 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 978
0171         ?C0058:
                                           ; SOURCE LINE # 981
0171 904393            MOV     DPTR,#04393H
0174 E0                MOVX    A,@DPTR
0175 FF                MOV     R7,A
0176 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 65  

0177 54F8              ANL     A,#0F8H
0179 FF                MOV     R7,A
017A EF                MOV     A,R7
017B 4403              ORL     A,#03H
017D FF                MOV     R7,A
017E 904393            MOV     DPTR,#04393H
0181 EF                MOV     A,R7
0182 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 984
0183 904393            MOV     DPTR,#04393H
0186 E0                MOVX    A,@DPTR
0187 FF                MOV     R7,A
                                           ; SOURCE LINE # 987
0188 00                NOP     
                                           ; SOURCE LINE # 988
0189 00                NOP     
                                           ; SOURCE LINE # 996
018A 900000      R     MOV     DPTR,#cyPmBackup+02EH
018D E0                MOVX    A,@DPTR
018E FF                MOV     R7,A
018F EF                MOV     A,R7
0190 6401              XRL     A,#01H
0192 6016              JZ      ?C0059
                                           ; SOURCE LINE # 997
                                           ; SOURCE LINE # 998
0194 904200            MOV     DPTR,#04200H
0197 E0                MOVX    A,@DPTR
0198 FF                MOV     R7,A
0199 EF                MOV     A,R7
019A 54F8              ANL     A,#0F8H
019C FF                MOV     R7,A
019D 900000      R     MOV     DPTR,#cyPmBackup+02DH
01A0 E0                MOVX    A,@DPTR
01A1 FE                MOV     R6,A
01A2 EF                MOV     A,R7
01A3 4E                ORL     A,R6
01A4 FF                MOV     R7,A
01A5 904200            MOV     DPTR,#04200H
01A8 EF                MOV     A,R7
01A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1000
01AA         ?C0059:
                                           ; SOURCE LINE # 1004
01AA 120000      R     LCALL   CyPmSlpRestore
                                           ; SOURCE LINE # 1010
01AD 900000      R     MOV     DPTR,#cyPmBackup+07H
01B0 E0                MOVX    A,@DPTR
01B1 FF                MOV     R7,A
01B2 904398            MOV     DPTR,#04398H
01B5 EF                MOV     A,R7
01B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1011
01B7 900000      R     MOV     DPTR,#cyPmBackup+08H
01BA E0                MOVX    A,@DPTR
01BB FF                MOV     R7,A
01BC 904399            MOV     DPTR,#04399H
01BF EF                MOV     A,R7
01C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1012
01C1 900000      R     MOV     DPTR,#cyPmBackup+09H
01C4 E0                MOVX    A,@DPTR
01C5 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 66  

01C6 90439A            MOV     DPTR,#0439AH
01C9 EF                MOV     A,R7
01CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1017
01CB 900000      R     MOV     DPTR,#interruptState
01CE E0                MOVX    A,@DPTR
01CF FF                MOV     R7,A
01D0 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1018
01D3         ?C0048:
01D3 22                RET     
             ; FUNCTION _CyPmSleep (END)

             ; FUNCTION CyPmHibernate (BEGIN)
                                           ; SOURCE LINE # 1070
                                           ; SOURCE LINE # 1071
                                           ; SOURCE LINE # 1075
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1085
0008 904393            MOV     DPTR,#04393H
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 5408              ANL     A,#08H
0010 FF                MOV     R7,A
0011 7E00              MOV     R6,#00H
0013 EF                MOV     A,R7
0014 4E                ORL     A,R6
0015 700D              JNZ     ?C0060
                                           ; SOURCE LINE # 1086
                                           ; SOURCE LINE # 1088
0017 904683            MOV     DPTR,#04683H
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 541F              ANL     A,#01FH
001F FF                MOV     R7,A
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1089
0022 8009              SJMP    ?C0061
0024         ?C0060:
                                           ; SOURCE LINE # 1091
                                           ; SOURCE LINE # 1095
0024 900000      R     MOV     DPTR,#interruptState
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 120000      E     LCALL   _CyExitCriticalSection
002C 22                RET     
                                           ; SOURCE LINE # 1098
002D         ?C0061:
                                           ; SOURCE LINE # 1103
002D 120000      R     LCALL   CyPmHibSaveSet
                                           ; SOURCE LINE # 1109
0030 904398            MOV     DPTR,#04398H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 900000      R     MOV     DPTR,#cyPmBackup+07H
0038 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 67  

0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1110
003A 904398            MOV     DPTR,#04398H
003D 7404              MOV     A,#04H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1112
0040 904399            MOV     DPTR,#04399H
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 900000      R     MOV     DPTR,#cyPmBackup+08H
0048 EF                MOV     A,R7
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1113
004A 904399            MOV     DPTR,#04399H
004D E4                CLR     A
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1115
004F 90439A            MOV     DPTR,#0439AH
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 900000      R     MOV     DPTR,#cyPmBackup+09H
0057 EF                MOV     A,R7
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1116
0059 90439A            MOV     DPTR,#0439AH
005C E4                CLR     A
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1122
005E 904200            MOV     DPTR,#04200H
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 EF                MOV     A,R7
0064 5407              ANL     A,#07H
0066 FF                MOV     R7,A
0067 7E00              MOV     R6,#00H
0069 EF                MOV     A,R7
006A 4E                ORL     A,R6
006B 7008              JNZ     ?C0063
                                           ; SOURCE LINE # 1123
                                           ; SOURCE LINE # 1125
006D 900000      R     MOV     DPTR,#cyPmBackup+02EH
0070 7401              MOV     A,#01H
0072 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1126
0073 801E              SJMP    ?C0064
0075         ?C0063:
                                           ; SOURCE LINE # 1128
                                           ; SOURCE LINE # 1130
0075 900000      R     MOV     DPTR,#cyPmBackup+02EH
0078 E4                CLR     A
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1133
007A 904200            MOV     DPTR,#04200H
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F EF                MOV     A,R7
0080 5407              ANL     A,#07H
0082 FF                MOV     R7,A
0083 900000      R     MOV     DPTR,#cyPmBackup+02DH
0086 EF                MOV     A,R7
0087 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1136
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 68  

0088 904200            MOV     DPTR,#04200H
008B E0                MOVX    A,@DPTR
008C FF                MOV     R7,A
008D EF                MOV     A,R7
008E 54F8              ANL     A,#0F8H
0090 FF                MOV     R7,A
0091 EF                MOV     A,R7
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1137
0093         ?C0064:
                                           ; SOURCE LINE # 1141
0093 904393            MOV     DPTR,#04393H
0096 E0                MOVX    A,@DPTR
0097 FF                MOV     R7,A
0098 EF                MOV     A,R7
0099 54F8              ANL     A,#0F8H
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 4404              ORL     A,#04H
009F FF                MOV     R7,A
00A0 904393            MOV     DPTR,#04393H
00A3 EF                MOV     A,R7
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1144
00A5 904393            MOV     DPTR,#04393H
00A8 E0                MOVX    A,@DPTR
00A9 FF                MOV     R7,A
                                           ; SOURCE LINE # 1147
00AA 00                NOP     
                                           ; SOURCE LINE # 1148
00AB 00                NOP     
                                           ; SOURCE LINE # 1157
00AC 900000      R     MOV     DPTR,#cyPmBackup+02EH
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 6401              XRL     A,#01H
00B4 6016              JZ      ?C0065
                                           ; SOURCE LINE # 1158
                                           ; SOURCE LINE # 1159
00B6 904200            MOV     DPTR,#04200H
00B9 E0                MOVX    A,@DPTR
00BA FF                MOV     R7,A
00BB EF                MOV     A,R7
00BC 54F8              ANL     A,#0F8H
00BE FF                MOV     R7,A
00BF 900000      R     MOV     DPTR,#cyPmBackup+02DH
00C2 E0                MOVX    A,@DPTR
00C3 FE                MOV     R6,A
00C4 EF                MOV     A,R7
00C5 4E                ORL     A,R6
00C6 FF                MOV     R7,A
00C7 904200            MOV     DPTR,#04200H
00CA EF                MOV     A,R7
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1161
00CC         ?C0065:
                                           ; SOURCE LINE # 1165
00CC 120000      R     LCALL   CyPmHibRestore
                                           ; SOURCE LINE # 1171
00CF 900000      R     MOV     DPTR,#cyPmBackup+07H
00D2 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 69  

00D3 FF                MOV     R7,A
00D4 904398            MOV     DPTR,#04398H
00D7 EF                MOV     A,R7
00D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1172
00D9 900000      R     MOV     DPTR,#cyPmBackup+08H
00DC E0                MOVX    A,@DPTR
00DD FF                MOV     R7,A
00DE 904399            MOV     DPTR,#04399H
00E1 EF                MOV     A,R7
00E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1173
00E3 900000      R     MOV     DPTR,#cyPmBackup+09H
00E6 E0                MOVX    A,@DPTR
00E7 FF                MOV     R7,A
00E8 90439A            MOV     DPTR,#0439AH
00EB EF                MOV     A,R7
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1178
00ED 900000      R     MOV     DPTR,#interruptState
00F0 E0                MOVX    A,@DPTR
00F1 FF                MOV     R7,A
00F2 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1179
00F5         ?C0062:
00F5 22                RET     
             ; FUNCTION CyPmHibernate (END)

             ; FUNCTION _CyPmReadStatus (BEGIN)
                                           ; SOURCE LINE # 1211
0000 900000      R     MOV     DPTR,#mask
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1212
                                           ; SOURCE LINE # 1218
0005 120000      E     LCALL   CyEnterCriticalSection
0008 900000      R     MOV     DPTR,#interruptState
000B EF                MOV     A,R7
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1221
000D 900000      R     MOV     DPTR,#interruptStatus
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 904390            MOV     DPTR,#04390H
0015 E0                MOVX    A,@DPTR
0016 FE                MOV     R6,A
0017 EF                MOV     A,R7
0018 4E                ORL     A,R6
0019 FF                MOV     R7,A
001A 900000      R     MOV     DPTR,#interruptStatus
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1222
001F 900000      R     MOV     DPTR,#interruptStatus
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 900000      R     MOV     DPTR,#tmpStatus
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1223
0029 900000      R     MOV     DPTR,#interruptStatus
002C E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 70  

002D FF                MOV     R7,A
002E 900000      R     MOV     DPTR,#mask
0031 E0                MOVX    A,@DPTR
0032 FE                MOV     R6,A
0033 EE                MOV     A,R6
0034 F4                CPL     A
0035 FE                MOV     R6,A
0036 EF                MOV     A,R7
0037 5E                ANL     A,R6
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#interruptStatus
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1226
003E 900000      R     MOV     DPTR,#interruptState
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1228
0046 900000      R     MOV     DPTR,#tmpStatus
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
                                           ; SOURCE LINE # 1229
004B         ?C0066:
004B 22                RET     
             ; FUNCTION _CyPmReadStatus (END)

             ; FUNCTION CyPmHibSaveSet (BEGIN)
                                           ; SOURCE LINE # 1256
                                           ; SOURCE LINE # 1257
                                           ; SOURCE LINE # 1259
0000 904331            MOV     DPTR,#04331H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5404              ANL     A,#04H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 600B              JZ      ?C0068
                                           ; SOURCE LINE # 1260
                                           ; SOURCE LINE # 1279
000F 904331            MOV     DPTR,#04331H
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 54FB              ANL     A,#0FBH
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1280
                                           ; SOURCE LINE # 1282
                                           ; SOURCE LINE # 1289
001A         ?C0068:
                                           ; SOURCE LINE # 1295
001A 7F01              MOV     R7,#01H
001C 120000      E     LCALL   _CyILO_SetPowerMode
001F 900000      R     MOV     DPTR,#cyPmBackup
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1298
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 71  

0024 904300            MOV     DPTR,#04300H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 5402              ANL     A,#02H
002C FF                MOV     R7,A
002D 7E00              MOV     R6,#00H
002F EF                MOV     A,R7
0030 4E                ORL     A,R6
0031 7004              JNZ     ?C0069
0033 7F00              MOV     R7,#00H
0035 8002              SJMP    ?C0070
0037         ?C0069:
0037 7F01              MOV     R7,#01H
0039         ?C0070:
0039 900000      R     MOV     DPTR,#cyPmBackup+01H
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1302
003E 904300            MOV     DPTR,#04300H
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 5404              ANL     A,#04H
0046 FF                MOV     R7,A
0047 7E00              MOV     R6,#00H
0049 EF                MOV     A,R7
004A 4E                ORL     A,R6
004B 7004              JNZ     ?C0071
004D 7F00              MOV     R7,#00H
004F 8002              SJMP    ?C0072
0051         ?C0071:
0051 7F01              MOV     R7,#01H
0053         ?C0072:
0053 900000      R     MOV     DPTR,#cyPmBackup+02H
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1307
0058 904683            MOV     DPTR,#04683H
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D EF                MOV     A,R7
005E 5410              ANL     A,#010H
0060 FF                MOV     R7,A
0061 7E00              MOV     R6,#00H
0063 EF                MOV     A,R7
0064 4E                ORL     A,R6
0065 7012              JNZ     ?C0073
                                           ; SOURCE LINE # 1308
                                           ; SOURCE LINE # 1310
0067 900000      R     MOV     DPTR,#cyPmBackup+03H
006A E4                CLR     A
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1311
006C 904683            MOV     DPTR,#04683H
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 4410              ORL     A,#010H
0074 FF                MOV     R7,A
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 72  

                                           ; SOURCE LINE # 1312
0077 8006              SJMP    ?C0074
0079         ?C0073:
                                           ; SOURCE LINE # 1314
                                           ; SOURCE LINE # 1315
0079 900000      R     MOV     DPTR,#cyPmBackup+03H
007C 7401              MOV     A,#01H
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1316
007F         ?C0074:
                                           ; SOURCE LINE # 1337
007F 120000      R     LCALL   CyPmHviLviSaveDisable
                                           ; SOURCE LINE # 1341
0082 120000      R     LCALL   CyPmHibSlpSaveSet
                                           ; SOURCE LINE # 1342
0085 22                RET     
             ; FUNCTION CyPmHibSaveSet (END)

             ; FUNCTION CyPmHibRestore (BEGIN)
                                           ; SOURCE LINE # 1365
                                           ; SOURCE LINE # 1366
                                           ; SOURCE LINE # 1368
0000 120000      R     LCALL   CyPmHviLviRestore
                                           ; SOURCE LINE # 1371
0003 120000      R     LCALL   CyPmHibSlpRestore
                                           ; SOURCE LINE # 1388
0006 900000      R     MOV     DPTR,#cyPmBackup+01H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B EF                MOV     A,R7
000C B40103            CJNE    A,#01H,?C0076
                                           ; SOURCE LINE # 1389
                                           ; SOURCE LINE # 1391
000F 120000      E     LCALL   CyILO_Start1K
                                           ; SOURCE LINE # 1392
0012         ?C0076:
                                           ; SOURCE LINE # 1395
0012 900000      R     MOV     DPTR,#cyPmBackup+02H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 B40103            CJNE    A,#01H,?C0077
                                           ; SOURCE LINE # 1396
                                           ; SOURCE LINE # 1398
001B 120000      E     LCALL   CyILO_Start100K
                                           ; SOURCE LINE # 1399
001E         ?C0077:
                                           ; SOURCE LINE # 1402
001E 900000      R     MOV     DPTR,#cyPmBackup
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 120000      E     LCALL   _CyILO_SetPowerMode
                                           ; SOURCE LINE # 1405
0026 900000      R     MOV     DPTR,#cyPmBackup+03H
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B EF                MOV     A,R7
002C 700B              JNZ     ?C0079
                                           ; SOURCE LINE # 1406
                                           ; SOURCE LINE # 1408
002E 904683            MOV     DPTR,#04683H
0031 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 73  

0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 54EF              ANL     A,#0EFH
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1409
                                           ; SOURCE LINE # 1412
0039         ?C0079:
0039 22                RET     
             ; FUNCTION CyPmHibRestore (END)

             ; FUNCTION _CyPmCtwSetInterval (BEGIN)
                                           ; SOURCE LINE # 1435
0000 900000      R     MOV     DPTR,#ctwInterval
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1436
                                           ; SOURCE LINE # 1438
0005 904382            MOV     DPTR,#04382H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54F7              ANL     A,#0F7H
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1441
0010 120000      E     LCALL   CyILO_Start1K
                                           ; SOURCE LINE # 1444
0013 904382            MOV     DPTR,#04382H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5404              ANL     A,#04H
001B FF                MOV     R7,A
001C 7E00              MOV     R6,#00H
001E EF                MOV     A,R7
001F 4E                ORL     A,R6
0020 602F              JZ      ?C0080
                                           ; SOURCE LINE # 1445
                                           ; SOURCE LINE # 1447
0022 900000      R     MOV     DPTR,#ctwInterval
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 904381            MOV     DPTR,#04381H
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C EE                MOV     A,R6
002D 6F                XRL     A,R7
002E 6044              JZ      ?C0084
                                           ; SOURCE LINE # 1448
                                           ; SOURCE LINE # 1450
0030 904382            MOV     DPTR,#04382H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 54FB              ANL     A,#0FBH
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1451
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 74  

003B 900000      R     MOV     DPTR,#ctwInterval
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 904381            MOV     DPTR,#04381H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1452
0045 904382            MOV     DPTR,#04382H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 4404              ORL     A,#04H
004D FF                MOV     R7,A
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1453
                                           ; SOURCE LINE # 1454
0050 22                RET     
0051         ?C0080:
                                           ; SOURCE LINE # 1456
                                           ; SOURCE LINE # 1458
0051 900000      R     MOV     DPTR,#ctwInterval
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 904381            MOV     DPTR,#04381H
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EE                MOV     A,R6
005C 6F                XRL     A,R7
005D 600A              JZ      ?C0083
                                           ; SOURCE LINE # 1459
                                           ; SOURCE LINE # 1461
005F 900000      R     MOV     DPTR,#ctwInterval
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 904381            MOV     DPTR,#04381H
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1462
0069         ?C0083:
                                           ; SOURCE LINE # 1465
0069 904382            MOV     DPTR,#04382H
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 4404              ORL     A,#04H
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1466
                                           ; SOURCE LINE # 1467
0074         ?C0084:
0074 22                RET     
             ; FUNCTION _CyPmCtwSetInterval (END)

             ; FUNCTION CyPmOppsSet (BEGIN)
                                           ; SOURCE LINE # 1487
                                           ; SOURCE LINE # 1488
                                           ; SOURCE LINE # 1490
0000 904308            MOV     DPTR,#04308H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 75  

0005 EF                MOV     A,R7
0006 5401              ANL     A,#01H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 7003              JNZ     ?C0085
                                           ; SOURCE LINE # 1491
                                           ; SOURCE LINE # 1493
000F 120000      E     LCALL   CyXTAL_32KHZ_Start
                                           ; SOURCE LINE # 1494
0012         ?C0085:
                                           ; SOURCE LINE # 1497
0012 904382            MOV     DPTR,#04382H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 54DF              ANL     A,#0DFH
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1500
001D 904382            MOV     DPTR,#04382H
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 EF                MOV     A,R7
0023 4410              ORL     A,#010H
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1501
0028 22                RET     
             ; FUNCTION CyPmOppsSet (END)

             ; FUNCTION _CyPmFtwSetInterval (BEGIN)
                                           ; SOURCE LINE # 1524
0000 900000      R     MOV     DPTR,#ftwInterval
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1525
                                           ; SOURCE LINE # 1527
0005 904382            MOV     DPTR,#04382H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54FD              ANL     A,#0FDH
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1530
0010 120000      E     LCALL   CyILO_Start100K
                                           ; SOURCE LINE # 1533
0013 904382            MOV     DPTR,#04382H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5401              ANL     A,#01H
001B FF                MOV     R7,A
001C 7E00              MOV     R6,#00H
001E EF                MOV     A,R7
001F 4E                ORL     A,R6
0020 602F              JZ      ?C0087
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 76  

                                           ; SOURCE LINE # 1534
                                           ; SOURCE LINE # 1536
0022 900000      R     MOV     DPTR,#ftwInterval
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 904380            MOV     DPTR,#04380H
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C EE                MOV     A,R6
002D 6F                XRL     A,R7
002E 6044              JZ      ?C0091
                                           ; SOURCE LINE # 1537
                                           ; SOURCE LINE # 1539
0030 904382            MOV     DPTR,#04382H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 54FE              ANL     A,#0FEH
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1540
003B 900000      R     MOV     DPTR,#ftwInterval
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 904380            MOV     DPTR,#04380H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1541
0045 904382            MOV     DPTR,#04382H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 4401              ORL     A,#01H
004D FF                MOV     R7,A
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1542
                                           ; SOURCE LINE # 1543
0050 22                RET     
0051         ?C0087:
                                           ; SOURCE LINE # 1545
                                           ; SOURCE LINE # 1547
0051 900000      R     MOV     DPTR,#ftwInterval
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 904380            MOV     DPTR,#04380H
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EE                MOV     A,R6
005C 6F                XRL     A,R7
005D 600A              JZ      ?C0090
                                           ; SOURCE LINE # 1548
                                           ; SOURCE LINE # 1550
005F 900000      R     MOV     DPTR,#ftwInterval
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 904380            MOV     DPTR,#04380H
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1551
0069         ?C0090:
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 77  

                                           ; SOURCE LINE # 1554
0069 904382            MOV     DPTR,#04382H
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 4401              ORL     A,#01H
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1555
                                           ; SOURCE LINE # 1556
0074         ?C0091:
0074 22                RET     
             ; FUNCTION _CyPmFtwSetInterval (END)

             ; FUNCTION CyPmSlpSaveSet (BEGIN)
                                           ; SOURCE LINE # 1684
                                           ; SOURCE LINE # 1685
                                           ; SOURCE LINE # 1750
0000 904689            MOV     DPTR,#04689H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#cyPmBackup+04H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1753
000A 9046F5            MOV     DPTR,#046F5H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 5407              ANL     A,#07H
0012 FF                MOV     R7,A
0013 7E00              MOV     R6,#00H
0015 EF                MOV     A,R7
0016 4E                ORL     A,R6
0017 6031              JZ      ?C0092
                                           ; SOURCE LINE # 1755
                                           ; SOURCE LINE # 1757
0019 9046EC            MOV     DPTR,#046ECH
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F C3                CLR     C
0020 9405              SUBB    A,#05H
0022 5019              JNC     ?C0093
                                           ; SOURCE LINE # 1758
                                           ; SOURCE LINE # 1760
0024 904689            MOV     DPTR,#04689H
0027 743B              MOV     A,#03BH
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1763
002A 904331            MOV     DPTR,#04331H
002D 7401              MOV     A,#01H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1766
0030 904331            MOV     DPTR,#04331H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 4402              ORL     A,#02H
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 78  

003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1767
003B 801E              SJMP    ?C0095
003D         ?C0093:
                                           ; SOURCE LINE # 1769
                                           ; SOURCE LINE # 1771
003D 904689            MOV     DPTR,#04689H
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
0042 EF                MOV     A,R7
0043 4401              ORL     A,#01H
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1772
                                           ; SOURCE LINE # 1773
0048 8011              SJMP    ?C0095
004A         ?C0092:
                                           ; SOURCE LINE # 1775
                                           ; SOURCE LINE # 1777
004A 9046EC            MOV     DPTR,#046ECH
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 C3                CLR     C
0051 9405              SUBB    A,#05H
0053 5006              JNC     ?C0095
                                           ; SOURCE LINE # 1778
                                           ; SOURCE LINE # 1780
0055 904689            MOV     DPTR,#04689H
0058 743A              MOV     A,#03AH
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1781
                                           ; SOURCE LINE # 1782
005B         ?C0095:
                                           ; SOURCE LINE # 1787
005B 120000      R     LCALL   CyPmHibSlpSaveSet
                                           ; SOURCE LINE # 1788
005E 22                RET     
             ; FUNCTION CyPmSlpSaveSet (END)

             ; FUNCTION CyPmSlpRestore (BEGIN)
                                           ; SOURCE LINE # 1811
                                           ; SOURCE LINE # 1812
                                           ; SOURCE LINE # 1842
0000 900000      R     MOV     DPTR,#cyPmBackup+04H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 904689            MOV     DPTR,#04689H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1845
000A 9046EC            MOV     DPTR,#046ECH
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 C3                CLR     C
0011 9405              SUBB    A,#05H
0013 5025              JNC     ?C0098
                                           ; SOURCE LINE # 1846
                                           ; SOURCE LINE # 1848
0015 9046F5            MOV     DPTR,#046F5H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 79  

0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 5407              ANL     A,#07H
001D FF                MOV     R7,A
001E 7E00              MOV     R6,#00H
0020 EF                MOV     A,R7
0021 4E                ORL     A,R6
0022 6016              JZ      ?C0098
                                           ; SOURCE LINE # 1850
                                           ; SOURCE LINE # 1852
0024 904331            MOV     DPTR,#04331H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 54FD              ANL     A,#0FDH
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1855
002F 904331            MOV     DPTR,#04331H
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 54FE              ANL     A,#0FEH
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1856
                                           ; SOURCE LINE # 1857
003A         ?C0098:
                                           ; SOURCE LINE # 1863
003A 120000      R     LCALL   CyPmHibSlpRestore
                                           ; SOURCE LINE # 1864
003D 22                RET     
             ; FUNCTION CyPmSlpRestore (END)

             ; FUNCTION CyPmHibSlpSaveSet (BEGIN)
                                           ; SOURCE LINE # 1889
                                           ; SOURCE LINE # 1890
                                           ; SOURCE LINE # 2036
0000 905A00            MOV     DPTR,#05A00H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#cyPmBackup+0AH
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2037
000A 905A02            MOV     DPTR,#05A02H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 900000      R     MOV     DPTR,#cyPmBackup+0BH
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2038
0014 905A03            MOV     DPTR,#05A03H
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900000      R     MOV     DPTR,#cyPmBackup+0CH
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2039
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 80  

001E 905A04            MOV     DPTR,#05A04H
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 900000      R     MOV     DPTR,#cyPmBackup+0DH
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2040
0028 905A06            MOV     DPTR,#05A06H
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 900000      R     MOV     DPTR,#cyPmBackup+0EH
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2041
0032 905A08            MOV     DPTR,#05A08H
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#cyPmBackup+0FH
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2042
003C 905A0A            MOV     DPTR,#05A0AH
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#cyPmBackup+010H
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2044
0046 905A10            MOV     DPTR,#05A10H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 900000      R     MOV     DPTR,#cyPmBackup+011H
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2045
0050 905A12            MOV     DPTR,#05A12H
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 900000      R     MOV     DPTR,#cyPmBackup+012H
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2046
005A 905A13            MOV     DPTR,#05A13H
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 900000      R     MOV     DPTR,#cyPmBackup+013H
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2047
0064 905A14            MOV     DPTR,#05A14H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 900000      R     MOV     DPTR,#cyPmBackup+014H
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2048
006E 905A16            MOV     DPTR,#05A16H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      R     MOV     DPTR,#cyPmBackup+015H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 81  

                                           ; SOURCE LINE # 2049
0078 905A18            MOV     DPTR,#05A18H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 900000      R     MOV     DPTR,#cyPmBackup+016H
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2050
0082 905A1A            MOV     DPTR,#05A1AH
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#cyPmBackup+017H
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2052
008C 905A20            MOV     DPTR,#05A20H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 900000      R     MOV     DPTR,#cyPmBackup+018H
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2053
0096 905A22            MOV     DPTR,#05A22H
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#cyPmBackup+019H
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2054
00A0 905A23            MOV     DPTR,#05A23H
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 900000      R     MOV     DPTR,#cyPmBackup+01AH
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2055
00AA 905A24            MOV     DPTR,#05A24H
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF 900000      R     MOV     DPTR,#cyPmBackup+01BH
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2056
00B4 905A26            MOV     DPTR,#05A26H
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 900000      R     MOV     DPTR,#cyPmBackup+01CH
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2057
00BE 905A28            MOV     DPTR,#05A28H
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 900000      R     MOV     DPTR,#cyPmBackup+01DH
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2058
00C8 905A2A            MOV     DPTR,#05A2AH
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 900000      R     MOV     DPTR,#cyPmBackup+01EH
00D0 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 82  

00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2060
00D2 905A30            MOV     DPTR,#05A30H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 900000      R     MOV     DPTR,#cyPmBackup+01FH
00DA EF                MOV     A,R7
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2061
00DC 905A32            MOV     DPTR,#05A32H
00DF E0                MOVX    A,@DPTR
00E0 FF                MOV     R7,A
00E1 900000      R     MOV     DPTR,#cyPmBackup+020H
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2062
00E6 905A33            MOV     DPTR,#05A33H
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 900000      R     MOV     DPTR,#cyPmBackup+021H
00EE EF                MOV     A,R7
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2063
00F0 905A34            MOV     DPTR,#05A34H
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 900000      R     MOV     DPTR,#cyPmBackup+022H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2064
00FA 905A36            MOV     DPTR,#05A36H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 900000      R     MOV     DPTR,#cyPmBackup+023H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2065
0104 905A38            MOV     DPTR,#05A38H
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 900000      R     MOV     DPTR,#cyPmBackup+024H
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2066
010E 905A3A            MOV     DPTR,#05A3AH
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 900000      R     MOV     DPTR,#cyPmBackup+025H
0116 EF                MOV     A,R7
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2068
0118 905A00            MOV     DPTR,#05A00H
011B E4                CLR     A
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2069
011D 905A02            MOV     DPTR,#05A02H
0120 E4                CLR     A
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2070
0122 905A03            MOV     DPTR,#05A03H
0125 E4                CLR     A
0126 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 83  

                                           ; SOURCE LINE # 2071
0127 905A04            MOV     DPTR,#05A04H
012A E4                CLR     A
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2072
012C 905A06            MOV     DPTR,#05A06H
012F E4                CLR     A
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2073
0131 905A08            MOV     DPTR,#05A08H
0134 E4                CLR     A
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2074
0136 905A0A            MOV     DPTR,#05A0AH
0139 E4                CLR     A
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2076
013B 905A10            MOV     DPTR,#05A10H
013E E4                CLR     A
013F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2077
0140 905A12            MOV     DPTR,#05A12H
0143 E4                CLR     A
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2078
0145 905A13            MOV     DPTR,#05A13H
0148 E4                CLR     A
0149 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2079
014A 905A14            MOV     DPTR,#05A14H
014D E4                CLR     A
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2080
014F 905A16            MOV     DPTR,#05A16H
0152 E4                CLR     A
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2081
0154 905A18            MOV     DPTR,#05A18H
0157 E4                CLR     A
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2082
0159 905A1A            MOV     DPTR,#05A1AH
015C E4                CLR     A
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2084
015E 905A20            MOV     DPTR,#05A20H
0161 E4                CLR     A
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2085
0163 905A22            MOV     DPTR,#05A22H
0166 E4                CLR     A
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2086
0168 905A23            MOV     DPTR,#05A23H
016B E4                CLR     A
016C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2087
016D 905A24            MOV     DPTR,#05A24H
0170 E4                CLR     A
0171 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2088
0172 905A26            MOV     DPTR,#05A26H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 84  

0175 E4                CLR     A
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2089
0177 905A28            MOV     DPTR,#05A28H
017A E4                CLR     A
017B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2090
017C 905A2A            MOV     DPTR,#05A2AH
017F E4                CLR     A
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2092
0181 905A30            MOV     DPTR,#05A30H
0184 E4                CLR     A
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2093
0186 905A32            MOV     DPTR,#05A32H
0189 E4                CLR     A
018A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2094
018B 905A33            MOV     DPTR,#05A33H
018E E4                CLR     A
018F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2095
0190 905A34            MOV     DPTR,#05A34H
0193 E4                CLR     A
0194 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2096
0195 905A36            MOV     DPTR,#05A36H
0198 E4                CLR     A
0199 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2097
019A 905A38            MOV     DPTR,#05A38H
019D E4                CLR     A
019E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2098
019F 905A3A            MOV     DPTR,#05A3AH
01A2 E4                CLR     A
01A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2108
01A4 9046E8            MOV     DPTR,#046E8H
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
01AA 5404              ANL     A,#04H
01AC FF                MOV     R7,A
01AD 7E00              MOV     R6,#00H
01AF EF                MOV     A,R7
01B0 4E                ORL     A,R6
01B1 6033              JZ      ?C0101
                                           ; SOURCE LINE # 2109
                                           ; SOURCE LINE # 2111
01B3 900000      R     MOV     DPTR,#cyPmBackup+05H
01B6 7401              MOV     A,#01H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2114
01B9 90500B            MOV     DPTR,#0500BH
01BC E0                MOVX    A,@DPTR
01BD FF                MOV     R7,A
01BE EF                MOV     A,R7
01BF 540E              ANL     A,#0EH
01C1 FF                MOV     R7,A
01C2 900000      R     MOV     DPTR,#cyPmBackup+06H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 85  

01C5 EF                MOV     A,R7
01C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2117
01C7 90500B            MOV     DPTR,#0500BH
01CA E0                MOVX    A,@DPTR
01CB FF                MOV     R7,A
01CC EF                MOV     A,R7
01CD 54F1              ANL     A,#0F1H
01CF FF                MOV     R7,A
01D0 EF                MOV     A,R7
01D1 440C              ORL     A,#0CH
01D3 FF                MOV     R7,A
01D4 90500B            MOV     DPTR,#0500BH
01D7 EF                MOV     A,R7
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2121
01D9 9046E8            MOV     DPTR,#046E8H
01DC E0                MOVX    A,@DPTR
01DD FF                MOV     R7,A
01DE EF                MOV     A,R7
01DF 54FB              ANL     A,#0FBH
01E1 FF                MOV     R7,A
01E2 EF                MOV     A,R7
01E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2122
01E4 8005              SJMP    ?C0102
01E6         ?C0101:
                                           ; SOURCE LINE # 2124
                                           ; SOURCE LINE # 2126
01E6 900000      R     MOV     DPTR,#cyPmBackup+05H
01E9 E4                CLR     A
01EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2127
01EB         ?C0102:
                                           ; SOURCE LINE # 2137
01EB 90400B            MOV     DPTR,#0400BH
01EE E0                MOVX    A,@DPTR
01EF FF                MOV     R7,A
01F0 EF                MOV     A,R7
01F1 5404              ANL     A,#04H
01F3 FF                MOV     R7,A
01F4 7E00              MOV     R6,#00H
01F6 EF                MOV     A,R7
01F7 4E                ORL     A,R6
01F8 6008              JZ      ?C0103
                                           ; SOURCE LINE # 2138
                                           ; SOURCE LINE # 2139
01FA 900000      R     MOV     DPTR,#cyPmBackup+02FH
01FD 7401              MOV     A,#01H
01FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2140
0200 8005              SJMP    ?C0104
0202         ?C0103:
                                           ; SOURCE LINE # 2142
                                           ; SOURCE LINE # 2143
0202 900000      R     MOV     DPTR,#cyPmBackup+02FH
0205 E4                CLR     A
0206 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2144
0207         ?C0104:
                                           ; SOURCE LINE # 2151
0207 904322            MOV     DPTR,#04322H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 86  

020A E0                MOVX    A,@DPTR
020B FF                MOV     R7,A
020C EF                MOV     A,R7
020D 5408              ANL     A,#08H
020F FF                MOV     R7,A
0210 7E00              MOV     R6,#00H
0212 EF                MOV     A,R7
0213 4E                ORL     A,R6
0214 6012              JZ      ?C0105
                                           ; SOURCE LINE # 2152
                                           ; SOURCE LINE # 2153
0216 900000      R     MOV     DPTR,#cyPmBackup+030H
0219 7401              MOV     A,#01H
021B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2154
021C 904322            MOV     DPTR,#04322H
021F E0                MOVX    A,@DPTR
0220 FF                MOV     R7,A
0221 EF                MOV     A,R7
0222 54F7              ANL     A,#0F7H
0224 FF                MOV     R7,A
0225 EF                MOV     A,R7
0226 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2155
0227 22                RET     
0228         ?C0105:
                                           ; SOURCE LINE # 2157
                                           ; SOURCE LINE # 2158
0228 900000      R     MOV     DPTR,#cyPmBackup+030H
022B E4                CLR     A
022C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2159
                                           ; SOURCE LINE # 2160
022D         ?C0107:
022D 22                RET     
             ; FUNCTION CyPmHibSlpSaveSet (END)

             ; FUNCTION CyPmHibSlpRestore (BEGIN)
                                           ; SOURCE LINE # 2183
                                           ; SOURCE LINE # 2184
                                           ; SOURCE LINE # 2260
0000 900000      R     MOV     DPTR,#cyPmBackup+0AH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 905A00            MOV     DPTR,#05A00H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2261
000A 900000      R     MOV     DPTR,#cyPmBackup+0BH
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 905A02            MOV     DPTR,#05A02H
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2262
0014 900000      R     MOV     DPTR,#cyPmBackup+0CH
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 905A03            MOV     DPTR,#05A03H
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2263
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 87  

001E 900000      R     MOV     DPTR,#cyPmBackup+0DH
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 905A04            MOV     DPTR,#05A04H
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2264
0028 900000      R     MOV     DPTR,#cyPmBackup+0EH
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 905A06            MOV     DPTR,#05A06H
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2265
0032 900000      R     MOV     DPTR,#cyPmBackup+0FH
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 905A08            MOV     DPTR,#05A08H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2266
003C 900000      R     MOV     DPTR,#cyPmBackup+010H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 905A0A            MOV     DPTR,#05A0AH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2268
0046 900000      R     MOV     DPTR,#cyPmBackup+011H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 905A10            MOV     DPTR,#05A10H
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2269
0050 900000      R     MOV     DPTR,#cyPmBackup+012H
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 905A12            MOV     DPTR,#05A12H
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2270
005A 900000      R     MOV     DPTR,#cyPmBackup+013H
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 905A13            MOV     DPTR,#05A13H
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2271
0064 900000      R     MOV     DPTR,#cyPmBackup+014H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 905A14            MOV     DPTR,#05A14H
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2272
006E 900000      R     MOV     DPTR,#cyPmBackup+015H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 905A16            MOV     DPTR,#05A16H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 88  

                                           ; SOURCE LINE # 2273
0078 900000      R     MOV     DPTR,#cyPmBackup+016H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 905A18            MOV     DPTR,#05A18H
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2274
0082 900000      R     MOV     DPTR,#cyPmBackup+017H
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 905A1A            MOV     DPTR,#05A1AH
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2276
008C 900000      R     MOV     DPTR,#cyPmBackup+018H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 905A20            MOV     DPTR,#05A20H
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2277
0096 900000      R     MOV     DPTR,#cyPmBackup+019H
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 905A22            MOV     DPTR,#05A22H
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2278
00A0 900000      R     MOV     DPTR,#cyPmBackup+01AH
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 905A23            MOV     DPTR,#05A23H
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2279
00AA 900000      R     MOV     DPTR,#cyPmBackup+01BH
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF 905A24            MOV     DPTR,#05A24H
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2280
00B4 900000      R     MOV     DPTR,#cyPmBackup+01CH
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 905A26            MOV     DPTR,#05A26H
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2281
00BE 900000      R     MOV     DPTR,#cyPmBackup+01DH
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 905A28            MOV     DPTR,#05A28H
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2282
00C8 900000      R     MOV     DPTR,#cyPmBackup+01EH
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 905A2A            MOV     DPTR,#05A2AH
00D0 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 89  

00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2284
00D2 900000      R     MOV     DPTR,#cyPmBackup+01FH
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 905A30            MOV     DPTR,#05A30H
00DA EF                MOV     A,R7
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2285
00DC 900000      R     MOV     DPTR,#cyPmBackup+020H
00DF E0                MOVX    A,@DPTR
00E0 FF                MOV     R7,A
00E1 905A32            MOV     DPTR,#05A32H
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2286
00E6 900000      R     MOV     DPTR,#cyPmBackup+021H
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 905A33            MOV     DPTR,#05A33H
00EE EF                MOV     A,R7
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2287
00F0 900000      R     MOV     DPTR,#cyPmBackup+022H
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 905A34            MOV     DPTR,#05A34H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2288
00FA 900000      R     MOV     DPTR,#cyPmBackup+023H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 905A36            MOV     DPTR,#05A36H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2289
0104 900000      R     MOV     DPTR,#cyPmBackup+024H
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 905A38            MOV     DPTR,#05A38H
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2290
010E 900000      R     MOV     DPTR,#cyPmBackup+025H
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 905A3A            MOV     DPTR,#05A3AH
0116 EF                MOV     A,R7
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2298
0118 900000      R     MOV     DPTR,#cyPmBackup+05H
011B E0                MOVX    A,@DPTR
011C FF                MOV     R7,A
011D EF                MOV     A,R7
011E B40121            CJNE    A,#01H,?C0108
                                           ; SOURCE LINE # 2299
                                           ; SOURCE LINE # 2301
0121 90500B            MOV     DPTR,#0500BH
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 90  

0127 54F1              ANL     A,#0F1H
0129 FF                MOV     R7,A
012A 900000      R     MOV     DPTR,#cyPmBackup+06H
012D E0                MOVX    A,@DPTR
012E FE                MOV     R6,A
012F EF                MOV     A,R7
0130 4E                ORL     A,R6
0131 FF                MOV     R7,A
0132 90500B            MOV     DPTR,#0500BH
0135 EF                MOV     A,R7
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2305
0137 9046E8            MOV     DPTR,#046E8H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 4404              ORL     A,#04H
013F FF                MOV     R7,A
0140 EF                MOV     A,R7
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2306
0142         ?C0108:
                                           ; SOURCE LINE # 2321
0142 900000      R     MOV     DPTR,#cyPmBackup+02FH
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 EF                MOV     A,R7
0148 6401              XRL     A,#01H
014A 704D              JNZ     ?C0109
                                           ; SOURCE LINE # 2322
                                           ; SOURCE LINE # 2324
014C 904005            MOV     DPTR,#04005H
014F E0                MOVX    A,@DPTR
0150 FF                MOV     R7,A
0151 EF                MOV     A,R7
0152 54F0              ANL     A,#0F0H
0154 FF                MOV     R7,A
0155 7E00              MOV     R6,#00H
0157 EE                MOV     A,R6
0158 C4                SWAP    A
0159 F8                MOV     R0,A
015A 54F0              ANL     A,#0F0H
015C C8                XCH     A,R0
015D 68                XRL     A,R0
015E FE                MOV     R6,A
015F EF                MOV     A,R7
0160 C4                SWAP    A
0161 540F              ANL     A,#0FH
0163 48                ORL     A,R0
0164 FF                MOV     R7,A
0165 EF                MOV     A,R7
0166 2401              ADD     A,#01H
0168 FD                MOV     R5,A
0169 EE                MOV     A,R6
016A 3400              ADDC    A,#00H
016C FC                MOV     R4,A
016D 904200            MOV     DPTR,#04200H
0170 E0                MOVX    A,@DPTR
0171 FF                MOV     R7,A
0172 EF                MOV     A,R7
0173 5407              ANL     A,#07H
0175 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 91  

0176 EF                MOV     A,R7
0177 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
017A 93                MOVC    A,@A+DPTR
017B FF                MOV     R7,A
017C 7E00              MOV     R6,#00H
017E 120000      E     LCALL   ?C?UIDIV
0181 7C00              MOV     R4,#00H
0183 7D4B              MOV     R5,#04BH
0185 120000      E     LCALL   ?C?IMUL
0188 E4                CLR     A
0189 FC                MOV     R4,A
018A FD                MOV     R5,A
018B 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 2325
018E 90400B            MOV     DPTR,#0400BH
0191 E0                MOVX    A,@DPTR
0192 FF                MOV     R7,A
0193 EF                MOV     A,R7
0194 4404              ORL     A,#04H
0196 FF                MOV     R7,A
0197 EF                MOV     A,R7
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2326
0199         ?C0109:
                                           ; SOURCE LINE # 2329
0199 900000      R     MOV     DPTR,#cyPmBackup+030H
019C E0                MOVX    A,@DPTR
019D FF                MOV     R7,A
019E EF                MOV     A,R7
019F B4010B            CJNE    A,#01H,?C0111
                                           ; SOURCE LINE # 2330
                                           ; SOURCE LINE # 2331
01A2 904322            MOV     DPTR,#04322H
01A5 E0                MOVX    A,@DPTR
01A6 FF                MOV     R7,A
01A7 EF                MOV     A,R7
01A8 4408              ORL     A,#08H
01AA FF                MOV     R7,A
01AB EF                MOV     A,R7
01AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2332
                                           ; SOURCE LINE # 2333
01AD         ?C0111:
01AD 22                RET     
             ; FUNCTION CyPmHibSlpRestore (END)

             ; FUNCTION CyPmHviLviSaveDisable (BEGIN)
                                           ; SOURCE LINE # 2353
                                           ; SOURCE LINE # 2354
                                           ; SOURCE LINE # 2355
0000 9046F5            MOV     DPTR,#046F5H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5401              ANL     A,#01H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 6033              JZ      ?C0112
                                           ; SOURCE LINE # 2356
                                           ; SOURCE LINE # 2357
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 92  

000F 900000      R     MOV     DPTR,#cyPmBackup+026H
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2358
0015 9046F4            MOV     DPTR,#046F4H
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 540F              ANL     A,#0FH
001D FF                MOV     R7,A
001E 900000      R     MOV     DPTR,#cyPmBackup+027H
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2368
0023 9046F7            MOV     DPTR,#046F7H
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5440              ANL     A,#040H
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E EF                MOV     A,R7
002F 4E                ORL     A,R6
0030 7004              JNZ     ?C0113
0032 7F00              MOV     R7,#00H
0034 8002              SJMP    ?C0114
0036         ?C0113:
0036 7F01              MOV     R7,#01H
0038         ?C0114:
0038 900000      R     MOV     DPTR,#cyPmBackup+02BH
003B EF                MOV     A,R7
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2373
003D 120000      E     LCALL   CyVdLvDigitDisable
                                           ; SOURCE LINE # 2374
0040 8005              SJMP    ?C0115
0042         ?C0112:
                                           ; SOURCE LINE # 2376
                                           ; SOURCE LINE # 2377
0042 900000      R     MOV     DPTR,#cyPmBackup+026H
0045 E4                CLR     A
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2378
0047         ?C0115:
                                           ; SOURCE LINE # 2380
0047 9046F5            MOV     DPTR,#046F5H
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 5402              ANL     A,#02H
004F FF                MOV     R7,A
0050 7E00              MOV     R6,#00H
0052 EF                MOV     A,R7
0053 4E                ORL     A,R6
0054 6034              JZ      ?C0116
                                           ; SOURCE LINE # 2381
                                           ; SOURCE LINE # 2382
0056 900000      R     MOV     DPTR,#cyPmBackup+028H
0059 7401              MOV     A,#01H
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2383
005C 9046F4            MOV     DPTR,#046F4H
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 93  

005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 C4                SWAP    A
0063 540F              ANL     A,#0FH
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#cyPmBackup+029H
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2393
006B 9046F7            MOV     DPTR,#046F7H
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 5480              ANL     A,#080H
0073 FF                MOV     R7,A
0074 7E00              MOV     R6,#00H
0076 EF                MOV     A,R7
0077 4E                ORL     A,R6
0078 7004              JNZ     ?C0117
007A 7F00              MOV     R7,#00H
007C 8002              SJMP    ?C0118
007E         ?C0117:
007E 7F01              MOV     R7,#01H
0080         ?C0118:
0080 900000      R     MOV     DPTR,#cyPmBackup+02CH
0083 EF                MOV     A,R7
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2398
0085 120000      E     LCALL   CyVdLvAnalogDisable
                                           ; SOURCE LINE # 2399
0088 8005              SJMP    ?C0119
008A         ?C0116:
                                           ; SOURCE LINE # 2401
                                           ; SOURCE LINE # 2402
008A 900000      R     MOV     DPTR,#cyPmBackup+028H
008D E4                CLR     A
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2403
008F         ?C0119:
                                           ; SOURCE LINE # 2405
008F 9046F5            MOV     DPTR,#046F5H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 5404              ANL     A,#04H
0097 FF                MOV     R7,A
0098 7E00              MOV     R6,#00H
009A EF                MOV     A,R7
009B 4E                ORL     A,R6
009C 600A              JZ      ?C0120
                                           ; SOURCE LINE # 2406
                                           ; SOURCE LINE # 2407
009E 900000      R     MOV     DPTR,#cyPmBackup+02AH
00A1 7401              MOV     A,#01H
00A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2408
00A4 120000      E     LCALL   CyVdHvAnalogDisable
                                           ; SOURCE LINE # 2409
00A7 22                RET     
00A8         ?C0120:
                                           ; SOURCE LINE # 2411
C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 94  

                                           ; SOURCE LINE # 2412
00A8 900000      R     MOV     DPTR,#cyPmBackup+02AH
00AB E4                CLR     A
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2413
                                           ; SOURCE LINE # 2414
00AD         ?C0122:
00AD 22                RET     
             ; FUNCTION CyPmHviLviSaveDisable (END)

             ; FUNCTION CyPmHviLviRestore (BEGIN)
                                           ; SOURCE LINE # 2434
                                           ; SOURCE LINE # 2435
                                           ; SOURCE LINE # 2437
0000 900000      R     MOV     DPTR,#cyPmBackup+026H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 B4010D            CJNE    A,#01H,?C0123
                                           ; SOURCE LINE # 2438
                                           ; SOURCE LINE # 2439
0009 900000      R     MOV     DPTR,#cyPmBackup+02BH
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#cyPmBackup+027H
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
0013 120000      E     LCALL   _CyVdLvDigitEnable
                                           ; SOURCE LINE # 2440
0016         ?C0123:
                                           ; SOURCE LINE # 2442
0016 900000      R     MOV     DPTR,#cyPmBackup+028H
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C B4010D            CJNE    A,#01H,?C0124
                                           ; SOURCE LINE # 2443
                                           ; SOURCE LINE # 2444
001F 900000      R     MOV     DPTR,#cyPmBackup+02CH
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 900000      R     MOV     DPTR,#cyPmBackup+029H
0027 E0                MOVX    A,@DPTR
0028 FD                MOV     R5,A
0029 120000      E     LCALL   _CyVdLvAnalogEnable
                                           ; SOURCE LINE # 2445
002C         ?C0124:
                                           ; SOURCE LINE # 2447
002C 900000      R     MOV     DPTR,#cyPmBackup+02AH
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 B40103            CJNE    A,#01H,?C0126
                                           ; SOURCE LINE # 2448
                                           ; SOURCE LINE # 2449
0035 120000      E     LCALL   CyVdHvAnalogEnable
                                           ; SOURCE LINE # 2450
                                           ; SOURCE LINE # 2451
0038         ?C0126:
0038 22                RET     
             ; FUNCTION CyPmHviLviRestore (END)

C51 COMPILER V9.03   CYPM                                                                  02/24/2017 20:36:39 PAGE 95  



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4112    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =     65      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
